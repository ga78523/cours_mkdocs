{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue #","title":"Home"},{"location":"#bienvenue","text":"","title":"Bienvenue"},{"location":"about/","text":"Liens utiles # Gilles Lassus : cours, exercices, \u00e9preuves pratiques & correction Site David Roche : cours, exercices, \u00e9preuves pratiques & correction","title":"About"},{"location":"about/#liens-utiles","text":"Gilles Lassus : cours, exercices, \u00e9preuves pratiques & correction Site David Roche : cours, exercices, \u00e9preuves pratiques & correction","title":"Liens utiles"},{"location":"Logiciels/git/","text":"Git et GitHub # Introduction (wikipedia) # Git est un logiciel de gestion de versions d\u00e9centralis\u00e9. C\u2019est un logiciel libre cr\u00e9\u00e9 par Linus Torvalds, auteur du noyau Linux, et distribu\u00e9 selon les termes de la licence publique g\u00e9n\u00e9rale GNU version 2. En 2016, il s\u2019agit du logiciel de gestion de versions le plus populaire. GitHub exploit\u00e9 sous le nom de GitHub, Inc. est un service web d\u2019h\u00e9bergement et de gestion de d\u00e9veloppement de logiciels, utilisant le logiciel de gestion de versions Git. Ce site est d\u00e9velopp\u00e9 en Ruby on Rails et Erlang par Chris Wanstrath, PJ Hyett et Tom Preston-Werner. GitHub propose des comptes professionnels payants, ainsi que des comptes gratuits pour les projets de logiciels libres. Le site assure \u00e9galement un contr\u00f4le d\u2019acc\u00e8s et des fonctionnalit\u00e9s destin\u00e9es \u00e0 la collaboration comme le suivi des bugs, les demandes de fonctionnalit\u00e9s, la gestion de t\u00e2ches et un wiki pour chaque projet. En avril 2016, GitHub a annonc\u00e9 avoir d\u00e9pass\u00e9 les 14 millions d\u2019utilisateurs et plus de 35 millions de d\u00e9p\u00f4ts de projets le pla\u00e7ant comme le plus grand h\u00e9bergeur de code source au monde. Sur votre ordinateur : git # T\u00e9l\u00e9chargement, installation et configuration # 1) Se rendre sur le site : https://git-scm.com/downloads 2) T\u00e9l\u00e9charger le logiciel pour le syst\u00e8me d\u2019exploitation voulu ; 3) Se rendre dans la console et taper ce qui suit pour vous assurer que cela a bien fonctionner.: $git --version 4) Configurer git avec votre propre mail et votre nom : $git config --global user.email \"you@example.com \" $git config --global user.name \"your Name\" Utilisation # 1) On cr\u00e9e un dossier. Par exemple : Hello ; 2) Dans ce dossier, on cr\u00e9e la page hello.html suivante : <!DOCTYPE html> < html > < head > < meta charset = \"utf8\" > < title > essai git et github </ title > </ head > < body > < h1 > Bonjour tout le monde </ h1 > </ body > </ html > 3) On l\u2019enregistre ; 4) Avec la console, se rendre dans le dossier Hello en ligne de commande ; 5) Dans le dossier Hello , taper ce qui suit pour commencer \u00e0 versionner le projet : $git init 6) Pour faire une \"photo\" de votre projet \u00e0 un instant \\(t\\) , il faut en faire un commit . Cela se d\u00e9roule en deux \u00e9tapes : V\u00e9rifier que tout est en ordre. Pour cela taper : $git add . Faire la \"photo\". Taper : $git commit -m \"Premier commit\" pour \"pousser\" votre projet sur le serveur. Exercice : Faire un modification du fichier hello.html puis en faire un commit. GitHub # Pr\u00e9alable # 1) Se rendre sur github : https://github.com/ ; 2) S\u2019inscrire ; Pour le projet Hello # 1) Aller sur new repository ; 2) Taper le nom : Hello ; 3) Github vous donne ensuite la d\u00e9marche \u00e0 suivre. Dans notre cas, il faut recopier les lignes suivantes dans la console : $git remote add origin https://github.com/yourLogin/hello.git pour indiquer \u00e0 votre ordinateur le serveur git qui va recevoir votre projet ; $git push -u origin master GitLab Grand Est #","title":"git"},{"location":"Logiciels/git/#git-et-github","text":"","title":"Git et GitHub"},{"location":"Logiciels/git/#introduction-wikipedia","text":"Git est un logiciel de gestion de versions d\u00e9centralis\u00e9. C\u2019est un logiciel libre cr\u00e9\u00e9 par Linus Torvalds, auteur du noyau Linux, et distribu\u00e9 selon les termes de la licence publique g\u00e9n\u00e9rale GNU version 2. En 2016, il s\u2019agit du logiciel de gestion de versions le plus populaire. GitHub exploit\u00e9 sous le nom de GitHub, Inc. est un service web d\u2019h\u00e9bergement et de gestion de d\u00e9veloppement de logiciels, utilisant le logiciel de gestion de versions Git. Ce site est d\u00e9velopp\u00e9 en Ruby on Rails et Erlang par Chris Wanstrath, PJ Hyett et Tom Preston-Werner. GitHub propose des comptes professionnels payants, ainsi que des comptes gratuits pour les projets de logiciels libres. Le site assure \u00e9galement un contr\u00f4le d\u2019acc\u00e8s et des fonctionnalit\u00e9s destin\u00e9es \u00e0 la collaboration comme le suivi des bugs, les demandes de fonctionnalit\u00e9s, la gestion de t\u00e2ches et un wiki pour chaque projet. En avril 2016, GitHub a annonc\u00e9 avoir d\u00e9pass\u00e9 les 14 millions d\u2019utilisateurs et plus de 35 millions de d\u00e9p\u00f4ts de projets le pla\u00e7ant comme le plus grand h\u00e9bergeur de code source au monde.","title":"Introduction (wikipedia)"},{"location":"Logiciels/git/#sur-votre-ordinateur-git","text":"","title":"Sur votre ordinateur : git"},{"location":"Logiciels/git/#telechargement-installation-et-configuration","text":"1) Se rendre sur le site : https://git-scm.com/downloads 2) T\u00e9l\u00e9charger le logiciel pour le syst\u00e8me d\u2019exploitation voulu ; 3) Se rendre dans la console et taper ce qui suit pour vous assurer que cela a bien fonctionner.: $git --version 4) Configurer git avec votre propre mail et votre nom : $git config --global user.email \"you@example.com \" $git config --global user.name \"your Name\"","title":"T\u00e9l\u00e9chargement, installation et configuration"},{"location":"Logiciels/git/#utilisation","text":"1) On cr\u00e9e un dossier. Par exemple : Hello ; 2) Dans ce dossier, on cr\u00e9e la page hello.html suivante : <!DOCTYPE html> < html > < head > < meta charset = \"utf8\" > < title > essai git et github </ title > </ head > < body > < h1 > Bonjour tout le monde </ h1 > </ body > </ html > 3) On l\u2019enregistre ; 4) Avec la console, se rendre dans le dossier Hello en ligne de commande ; 5) Dans le dossier Hello , taper ce qui suit pour commencer \u00e0 versionner le projet : $git init 6) Pour faire une \"photo\" de votre projet \u00e0 un instant \\(t\\) , il faut en faire un commit . Cela se d\u00e9roule en deux \u00e9tapes : V\u00e9rifier que tout est en ordre. Pour cela taper : $git add . Faire la \"photo\". Taper : $git commit -m \"Premier commit\" pour \"pousser\" votre projet sur le serveur. Exercice : Faire un modification du fichier hello.html puis en faire un commit.","title":"Utilisation"},{"location":"Logiciels/git/#github","text":"","title":"GitHub"},{"location":"Logiciels/git/#prealable","text":"1) Se rendre sur github : https://github.com/ ; 2) S\u2019inscrire ;","title":"Pr\u00e9alable"},{"location":"Logiciels/git/#pour-le-projet-hello","text":"1) Aller sur new repository ; 2) Taper le nom : Hello ; 3) Github vous donne ensuite la d\u00e9marche \u00e0 suivre. Dans notre cas, il faut recopier les lignes suivantes dans la console : $git remote add origin https://github.com/yourLogin/hello.git pour indiquer \u00e0 votre ordinateur le serveur git qui va recevoir votre projet ; $git push -u origin master","title":"Pour le projet Hello"},{"location":"Logiciels/git/#gitlab-grand-est","text":"","title":"GitLab Grand Est"},{"location":"Logiciels/installation_filius/","text":"installation Filius # site cliquer sur windows:","title":"installation Filius"},{"location":"Logiciels/installation_filius/#installation-filius","text":"site cliquer sur windows:","title":"installation Filius"},{"location":"Logiciels/vscode/","text":"Installation de Visual Studio Code # Visual Studio Code # Visual Studio Code est un \u00e9diteur de code extensible d\u00e9velopp\u00e9 par Microsoft pour Windows, Linux et macOS. Les fonctionnalit\u00e9s incluent la prise en charge du d\u00e9bogage, la mise en \u00e9vidence de la syntaxe, la compl\u00e9tion intelligente du code (IntelliSense.), les snippets, la refactorisation du code et Git int\u00e9gr\u00e9. Les utilisateurs peuvent modifier le th\u00e8me, les raccourcis clavier, les pr\u00e9f\u00e9rences et installer des extensions qui ajoutent des fonctionnalit\u00e9s suppl\u00e9mentaires. Le code source de Visual Studio Code provient du projet logiciel libre et open source VS Code de Microsoft publi\u00e9 sous la licence MIT permissive, mais les binaires compil\u00e9s constituent un freeware, c'est-\u00e0-dire un logiciel gratuit pour toute utilisation mais propri\u00e9taire. Dans le sondage aupr\u00e8s des d\u00e9veloppeurs r\u00e9alis\u00e9 par Stack Overflow en 2023, Visual Studio Code a \u00e9t\u00e9 class\u00e9 comme l'outil d'environnement de d\u00e9veloppement (IDE) le plus populaire, avec plus de 73 % des 86 544 r\u00e9pondants d\u00e9clarant l'utiliser5. Installation de vscode # Aller sur le lien suivant : https://code.visualstudio.com puis cliquer sur download en haut \u00e0 droite. Une fois le t\u00e9l\u00e9chargement termin\u00e9, ouvrez le fichier d'installation .exe. En g\u00e9n\u00e9ral, celui-ci se trouve dans votre dossier T\u00e9l\u00e9chargements . Lisez et acceptez le contrat de licence et cliquez sur Next. Cette \u00e9tape permet de modifier l'emplacement du dossier d'installation ou conserver les param\u00e8tres par d\u00e9faut. Cliquez sur Next pour continuer. Cette \u00e9tape permet de renommer le dossier des raccourcis dans le menu D\u00e9marrer ou de ne pas installer de raccourcis du tout. Cliquez sur Next. S\u00e9lectionnez les t\u00e2ches suppl\u00e9mentaires, par exemple 'Create a desktop icon' (cr\u00e9er une ic\u00f4ne sur le bureau) ou ajouter des options au menu du clic droit de l'explorateur Windows. Cliquez sur Next. Cliquez sur Install pour commencer l\u2019installation du logiciel. Le logiciel est install\u00e9 et pr\u00eat \u00e0 l'emploi. Cliquez sur Finish pour finaliser l\u2019installation et lancer le logiciel. Les extensions pour html # Installer les extensions en cliquant sur dans la barre d'Activit\u00e9 situ\u00e9e \u00e0 gauche. Remarque : La barre d'Activit\u00e9 est propre \u00e0 votre logiciel. Elle peut donc \u00eatre diff\u00e9rente de celle montr\u00e9e ci-dessous. puis dans le champ en haut \u00e0 gauche, taper le nom de l'extension : Open in Browser. Puis l'installer","title":"vscode"},{"location":"Logiciels/vscode/#installation-de-visual-studio-code","text":"","title":"Installation de Visual Studio Code"},{"location":"Logiciels/vscode/#visual-studio-code","text":"Visual Studio Code est un \u00e9diteur de code extensible d\u00e9velopp\u00e9 par Microsoft pour Windows, Linux et macOS. Les fonctionnalit\u00e9s incluent la prise en charge du d\u00e9bogage, la mise en \u00e9vidence de la syntaxe, la compl\u00e9tion intelligente du code (IntelliSense.), les snippets, la refactorisation du code et Git int\u00e9gr\u00e9. Les utilisateurs peuvent modifier le th\u00e8me, les raccourcis clavier, les pr\u00e9f\u00e9rences et installer des extensions qui ajoutent des fonctionnalit\u00e9s suppl\u00e9mentaires. Le code source de Visual Studio Code provient du projet logiciel libre et open source VS Code de Microsoft publi\u00e9 sous la licence MIT permissive, mais les binaires compil\u00e9s constituent un freeware, c'est-\u00e0-dire un logiciel gratuit pour toute utilisation mais propri\u00e9taire. Dans le sondage aupr\u00e8s des d\u00e9veloppeurs r\u00e9alis\u00e9 par Stack Overflow en 2023, Visual Studio Code a \u00e9t\u00e9 class\u00e9 comme l'outil d'environnement de d\u00e9veloppement (IDE) le plus populaire, avec plus de 73 % des 86 544 r\u00e9pondants d\u00e9clarant l'utiliser5.","title":"Visual Studio Code"},{"location":"Logiciels/vscode/#installation-de-vscode","text":"Aller sur le lien suivant : https://code.visualstudio.com puis cliquer sur download en haut \u00e0 droite. Une fois le t\u00e9l\u00e9chargement termin\u00e9, ouvrez le fichier d'installation .exe. En g\u00e9n\u00e9ral, celui-ci se trouve dans votre dossier T\u00e9l\u00e9chargements . Lisez et acceptez le contrat de licence et cliquez sur Next. Cette \u00e9tape permet de modifier l'emplacement du dossier d'installation ou conserver les param\u00e8tres par d\u00e9faut. Cliquez sur Next pour continuer. Cette \u00e9tape permet de renommer le dossier des raccourcis dans le menu D\u00e9marrer ou de ne pas installer de raccourcis du tout. Cliquez sur Next. S\u00e9lectionnez les t\u00e2ches suppl\u00e9mentaires, par exemple 'Create a desktop icon' (cr\u00e9er une ic\u00f4ne sur le bureau) ou ajouter des options au menu du clic droit de l'explorateur Windows. Cliquez sur Next. Cliquez sur Install pour commencer l\u2019installation du logiciel. Le logiciel est install\u00e9 et pr\u00eat \u00e0 l'emploi. Cliquez sur Finish pour finaliser l\u2019installation et lancer le logiciel.","title":"Installation de vscode"},{"location":"Logiciels/vscode/#les-extensions-pour-html","text":"Installer les extensions en cliquant sur dans la barre d'Activit\u00e9 situ\u00e9e \u00e0 gauche. Remarque : La barre d'Activit\u00e9 est propre \u00e0 votre logiciel. Elle peut donc \u00eatre diff\u00e9rente de celle montr\u00e9e ci-dessous. puis dans le champ en haut \u00e0 gauche, taper le nom de l'extension : Open in Browser. Puis l'installer","title":"Les extensions pour html"},{"location":"Physique/Seconde/TP_loi_Descartes/","text":"Loi de Descartes # 1 loi de Descartes import matplotlib.pyplot as plt import numpy as np from scipy import stats def creation_courbe_modelisee ( x : list , y : list ) -> None : \"\"\" fonction permettant de tracer le graphique avec les points exp\u00e9rimentaux et la courbe obtenue en lui fournissant les valeurs des abscisses x et des ordonn\u00e9es y \"\"\" x = np . array ( x ) y = np . array ( y ) pente , ordonnee_origine , r_value , p_value , std_error = stats . linregress ( x , y ) ymodel = pente * x print ( \"le coefficient directeur vaut : \" , pente ) plt . plot ( x , ymodel , 'b' , label = 'mod\u00e8le lin\u00e9aire' ) sini1 = [ 0 , 0.174 , 0.342 , 0.5 , 0.643 , 0.766 , 0.860 , 0.940 , 0.985 ] sini2 = [ 0 , 0.105 , 0.208 , 0.310 , 0.407 , 0.5 , 0.560 , 0.616 , 0.656 ] plt . plot ( sini2 , sini1 , 'r+' , label = \"points issus de l'exp\u00e9rience\" ) creation_courbe_modelisee ( sini2 , sini1 ) plt . xlabel ( \"sini2\" ) plt . ylabel ( \"sini1\" ) plt . legend () plt . title ( \"$sin(i_1)$ en fonction de $sin(i_2) $\" ) plt . show ()","title":"TP_loi_Descartes"},{"location":"Physique/Seconde/TP_loi_Descartes/#loi-de-descartes","text":"1 loi de Descartes import matplotlib.pyplot as plt import numpy as np from scipy import stats def creation_courbe_modelisee ( x : list , y : list ) -> None : \"\"\" fonction permettant de tracer le graphique avec les points exp\u00e9rimentaux et la courbe obtenue en lui fournissant les valeurs des abscisses x et des ordonn\u00e9es y \"\"\" x = np . array ( x ) y = np . array ( y ) pente , ordonnee_origine , r_value , p_value , std_error = stats . linregress ( x , y ) ymodel = pente * x print ( \"le coefficient directeur vaut : \" , pente ) plt . plot ( x , ymodel , 'b' , label = 'mod\u00e8le lin\u00e9aire' ) sini1 = [ 0 , 0.174 , 0.342 , 0.5 , 0.643 , 0.766 , 0.860 , 0.940 , 0.985 ] sini2 = [ 0 , 0.105 , 0.208 , 0.310 , 0.407 , 0.5 , 0.560 , 0.616 , 0.656 ] plt . plot ( sini2 , sini1 , 'r+' , label = \"points issus de l'exp\u00e9rience\" ) creation_courbe_modelisee ( sini2 , sini1 ) plt . xlabel ( \"sini2\" ) plt . ylabel ( \"sini1\" ) plt . legend () plt . title ( \"$sin(i_1)$ en fonction de $sin(i_2) $\" ) plt . show ()","title":"Loi de Descartes"},{"location":"Physique/Seconde/TP_vecteur_vitesse_point/","text":"Mouvement et vecteur vitesse # Contexte # Lors d\u2019un d\u00e9placement en trottinette, la vitesse est modifi\u00e9e pour \u00e9viter certains obstacles. Cette grandeur physique est repr\u00e9sent\u00e9e par un vecteur. Comment l\u2019\u00e9tudier et la repr\u00e9senter ? Programmes # programme 1 1 2 3 4 5 6 7 8 9 10 11 import matplotlib.pyplot as plt # Pointage des positions d\u2019un objet toutes les 0,40 s dt = x = [ ] y = [ ] # Affichage plt . plot ( x , y , 'r-o' ) plt . show () programme 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 import matplotlib.pyplot as plt import math # Cr\u00e9ation de la fonction permettant de tracer un vecteur vitesse def vecteur_vitesse ( x , y , dt , i ) : vx = ( x [ i + 1 ] - x [ i ]) / dt vy = ( y [ i + 1 ] - y [ i ]) / dt plt . quiver ( x [ i ], y [ i ], vx , vy , scale_units = 'xy' , angles = 'xy' , color = 'blue' , width = 0.010 , scale = 4 ) # Affiche le nom \u00e0 c\u00f4t\u00e9 du vecteur plt . text ( x [ i ] + 0.20 , y [ i ] + 0.050 , r \"$\\vec {v} $\" + str ( i ), color = \"blue\" ) # Calcul de la vitesse au point i vitesse = math . sqrt ((( x [ i + 1 ] - x [ i ]) / ( dt )) ** 2 + (( y [ i + 1 ] - y [ i ]) / ( dt )) ** 2 ) print ( \"A la position\" , i , \" la vitesse est de\" , round ( vitesse , 1 ), \"m/s\" ) # Pointage des positions d\u2019un objet toutes les 0.4 s dt = x = [] y = [] # Affichage plt . plot ( x , y , 'ro' ) # Trac\u00e9 du vecteur vitesse au point M0 vecteur_vitesse ( x , y , dt , 0 ) # Trac\u00e9 du vecteur vitesse au point M2 vecteur_vitesse ( x , y , dt , ) # Trac\u00e9 du vecteur vitesse au point M4 vecteur_vitesse ( x , y , dt , ) # Donne les limites des axes plt . ylim ( 0 , 6 ) plt . xlim ( - 1 , 10 ) # ...... plt . grid () plt . xlabel ( \" Position x \" ) plt . ylabel ( \" Position y \" ) plt . title ( \" \" ) plt . show ()","title":"TP_vecteur_vitesse"},{"location":"Physique/Seconde/TP_vecteur_vitesse_point/#mouvement-et-vecteur-vitesse","text":"","title":"Mouvement et vecteur vitesse"},{"location":"Physique/Seconde/TP_vecteur_vitesse_point/#contexte","text":"Lors d\u2019un d\u00e9placement en trottinette, la vitesse est modifi\u00e9e pour \u00e9viter certains obstacles. Cette grandeur physique est repr\u00e9sent\u00e9e par un vecteur. Comment l\u2019\u00e9tudier et la repr\u00e9senter ?","title":"Contexte"},{"location":"Physique/Seconde/TP_vecteur_vitesse_point/#programmes","text":"programme 1 1 2 3 4 5 6 7 8 9 10 11 import matplotlib.pyplot as plt # Pointage des positions d\u2019un objet toutes les 0,40 s dt = x = [ ] y = [ ] # Affichage plt . plot ( x , y , 'r-o' ) plt . show () programme 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 import matplotlib.pyplot as plt import math # Cr\u00e9ation de la fonction permettant de tracer un vecteur vitesse def vecteur_vitesse ( x , y , dt , i ) : vx = ( x [ i + 1 ] - x [ i ]) / dt vy = ( y [ i + 1 ] - y [ i ]) / dt plt . quiver ( x [ i ], y [ i ], vx , vy , scale_units = 'xy' , angles = 'xy' , color = 'blue' , width = 0.010 , scale = 4 ) # Affiche le nom \u00e0 c\u00f4t\u00e9 du vecteur plt . text ( x [ i ] + 0.20 , y [ i ] + 0.050 , r \"$\\vec {v} $\" + str ( i ), color = \"blue\" ) # Calcul de la vitesse au point i vitesse = math . sqrt ((( x [ i + 1 ] - x [ i ]) / ( dt )) ** 2 + (( y [ i + 1 ] - y [ i ]) / ( dt )) ** 2 ) print ( \"A la position\" , i , \" la vitesse est de\" , round ( vitesse , 1 ), \"m/s\" ) # Pointage des positions d\u2019un objet toutes les 0.4 s dt = x = [] y = [] # Affichage plt . plot ( x , y , 'ro' ) # Trac\u00e9 du vecteur vitesse au point M0 vecteur_vitesse ( x , y , dt , 0 ) # Trac\u00e9 du vecteur vitesse au point M2 vecteur_vitesse ( x , y , dt , ) # Trac\u00e9 du vecteur vitesse au point M4 vecteur_vitesse ( x , y , dt , ) # Donne les limites des axes plt . ylim ( 0 , 6 ) plt . xlim ( - 1 , 10 ) # ...... plt . grid () plt . xlabel ( \" Position x \" ) plt . ylabel ( \" Position y \" ) plt . title ( \" \" ) plt . show ()","title":"Programmes"},{"location":"Physique/Seconde/mesure_c_son/","text":"Mesure de la vitesse du son # Introduction # Objectif # L'objectif de cette activit\u00e9 est de v\u00e9rifier la vitesse du son dans l'air en mesurant de fa\u00e7on pr\u00e9cise, avec Arduino, les temps de r\u00e9ception d'un \u00e9cho d'ultrason se r\u00e9percutant sur un obstacle situ\u00e9 \u00e0 diff\u00e9rentes distances. Vous ferez un compte-rendu sur traitement de texte en reprenant les principales \u00e9tapes de ce TP et en r\u00e9pondant aux questions. Notion de vitesse # 1] Rappeler la formule de la vitesse en donnant la signification et l'unit\u00e9 des grandeurs intervenant la formule. Le son # Le son peut \u00eatre d\u00e9fini comme la vibration m\u00e9canique d\u2019un fluide, qui se propage sous forme d\u2019ondes [...] gr\u00e2ce \u00e0 la d\u00e9formation \u00e9lastique de ce fluide (Wikip\u00e9dia). Tout comme l\u2019onde qui se propage au fil de l\u2019eau lorsque vous y jetez un caillou, l\u2019onde sonore, ou accoustique, se d\u00e9place dans l\u2019air (ou tout autre fluide, liquide ou gazeux) sous forme de compressions r\u00e9guli\u00e8res de ce fluide (voir illustration ci-dessous). Plus les compressions se succ\u00e8dent rapidement, plus la fr\u00e9quence du son est \u00e9lev\u00e9e, donc le son per\u00e7u aigu. Plus elles sont lentes, plus la fr\u00e9quence est basse et le son grave. L'onde sonore a une vitesse propre, qui d\u00e9pend de la densit\u00e9 du fluide dans lequel elle se d\u00e9place et sa temp\u00e9rature (2 param\u00e8tres qui influent sur la pression du fluide). Montage exp\u00e9rimental # Carte Arduino # Le projet \"Arduino\" a \u00e9t\u00e9 initi\u00e9 en 2004-2005 par un groupe d\u2019enseignants, notamment Massimi Banzi, d\u2019une \u00e9cole de design italienne (Interaction Design Institute), dans le but de permettre aux \u00e9tudiants de pouvoir disposer d\u2019une plateforme valant le prix d\u2019une pizza pour r\u00e9aliser des projets interactifs. Le microcontr\u00f4leur est le cerveau de notre carte. Il va recevoir le programme que nous allons cr\u00e9er afin de l\u2019ex\u00e9cuter ensuite de mani\u00e8re autonome (c\u2019est-\u00e0-dire qu\u2019il n\u2019a plus besoin d\u2019\u00eatre connect\u00e9 \u00e0 l\u2019ordinateur pour fonctionner, il faudra simplement alimenter la carte avec une alimentation externe, par exemple une pile de 9V). La carte dispose d\u2019entr\u00e9es num\u00e9riques ou analogiques (sur lesquelles on branche g\u00e9n\u00e9ralement des capteurs : de temp\u00e9rature, de pression. . .) et de sorties num\u00e9riques (sur lesquelles on peut brancher une led, un \u00e9cran, un buzzer, des actionneurs pour actionner un robot. . .). Les possibilit\u00e9s sont quasiment illimit\u00e9es ! Le logiciel Arduino IDE (interface de d\u00e9veloppement int\u00e9gr\u00e9) est multiplateforme (fonctionne sous Mac, Windows, Linux). Il est t\u00e9l\u00e9chargeable \u00e0 l\u2019adresse suivante : (http ://arduino.cc)[http ://arduino.cc]. C\u2019est gr\u00e2ce \u00e0 lui que nous allons cr\u00e9er et tester les programmes avant de les impl\u00e9menter sur la carte Arduino. Principe du capteur \u00e0 ultra-son # Le capteur de distance fonctionne sur le principe de l'\u00e9cholocalisation. Il est \u00e9quip\u00e9 d'un \u00e9metteur et un r\u00e9cepteur ultrason, ce qui lui permet de d\u00e9tecter des obstacles distants \u00e0 la mani\u00e8re des chauves-souris ou des c\u00e9tac\u00e9s. Il peut \u00eatre programm\u00e9 pour \u00e9mettre un court ultrason et calculer le temps de r\u00e9ception de son \u00e9cho, qui est fonction de la distance de l'obstacle et de la vitesse du son. Le t\u00e9l\u00e9m\u00e8tre \u00e9met une onde ultrasonore qui se r\u00e9fl\u00e9chit sur l\u2019obstacle et revient au t\u00e9l\u00e9m\u00e8tre. 2] Faire un dessin sur votre compte-rendu qui fait appara\u00eetre le capteur, l'obstacle, le trajet de l'onde sonore, la distance obstacle/capteur. 3] Quelle est la relation entre la distance parcourue par l'onde et la distance obstacle/capteur. Montage # Vous remarquerez que le c\u00e2blage est on ne peut plus simple : un Arduino et un capteur de distance ! Les pins \"vcc\" et \"GND\" du capteur de distance seront branch\u00e9es sur 5V et ground respectivement. La broche \"Trig\" (\u00e9metteur) sera branch\u00e9 sur la prise 13 de l'Arduino, et la pin \"Echo\" (r\u00e9cepteur) sur la prise 12 de l'Arduino.. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 //Calcul de la vitesse du son avec Arduino //Affichage du temps de reception d'un \u00e9cho int emetteur = 13 ; //branch\u00e9 sur trig du HC-SR04 int recepteur = 12 ; //branch\u00e9 sur echo du HC-SR04 long Delta_t ; //variable type long void setup () { Serial . begin ( 9600 ); pinMode ( emetteur , OUTPUT ); pinMode ( recepteur , INPUT ); } void loop () { // \u00c9mission d'un pulse ultrason sur la pin 13 digitalWrite ( emetteur , HIGH ); delayMicroseconds ( 10 ); digitalWrite ( emetteur , LOW ); // Mesure du temps entre l'\u00e9mission et la r\u00e9ception Delta_t = pulseIn ( recepteur , HIGH ); // Affichage du temps Serial . println ( Delta_t ); // Pause delay ( 1000 ); } Explications du code # Dans un premier temps nous d\u00e9clarons les variables. Les variables emetteur et recepteur dans lesquelles seront d\u00e9clar\u00e9s les num\u00e9ros de pin utilis\u00e9es respectivement par \"Trig\" et \"Echo\" du capteur HC-SR04. La variable Delta_t de type long (entier et grande pr\u00e9cision) dans laquelle sera stock\u00e9 le temps \u00e9coul\u00e9 entre deux r\u00e9ceptions de l'\u00e9cho. Puis vient la partie d'initialisation : le void setup. Tr\u00e8s simple, il ne comporte que trois lignes : Initialisation de la communication s\u00e9rie qui nous permettra de lire la valeur de Delta_t , c'est \u00e0 dire le temps mis par l'\u00e9cho pour parvenir au r\u00e9cepteur. Initialisation de la broche emetteur (pin 13) en sortie (afin de produire un signal sonore). Initialisation de la broche recepteur (pin 12) en entr\u00e9e (afin de recevoir un signal sonore). Et pour finir, la boucle principale : le void loop. Les trois premi\u00e8res lignes permettent d'\u00e9mettre un pulse ultrason : La broche emetteur est mis \u00e0 l'\u00e9tat HIGH : l'\u00e9metteur du capteur produit un ultrason. Pause de 10 microsecondes La broche emetteur est mis \u00e0 l'\u00e9tat LOW : l'\u00e9metteur du capteur ne produit plus d'ultrason. Nous venons d'\u00e9mettre une onde sonore \u00e0 tr\u00e8s haute fr\u00e9quence (domaine des ultrasons) durant 10 microsecondes. La variable Delta_t prend la valeur de pulseIn (emetteur, HIGH) . La fonction pulseIn permet de mesurer une dur\u00e9e d'impulsion. La variable Delta_t correspond donc au temps \u00e9coul\u00e9 entre 2 \u00e9tats HIGH de la pin \"recepteur\", soit 2 r\u00e9ceptions de signal. Ce qui correspond \u00e0 un aller-retour de l'onde sonore entre l'\u00e9metteur et l'obstacle. Affichage du pulseIn dans le moniteur s\u00e9rie. D\u00e9lai d'une seconde (1000 ms) entre 2 affichages de mesure. Partie pratique # Assemblage # Vous pouvez maintenant brancher votre carte Lancer le logiciel Arduino. Il se pr\u00e9sente ainsi. Indiquer le type de carte Arduino utilis\u00e9e (via menu \"Outils\" puis aller \"Type de carte\" et s\u00e9lectionner la carte \"Arduino/Genuino Uno\") S\u00e9lectionner le port utilis\u00e9 par la carte : \"menu Outils\" puis sur \"Port\" et s\u00e9lectionner le port \"COM (arduino/Genuino Uno)\" T\u00e9l\u00e9verser le programme vers la carte Arduino. Effacer la zone de texte puis copier le code et le coller dans la zone de texte. Cliquez sur la loupe en haut \u00e0 droite de la fen\u00eatre Arduino pour faire appara\u00eetre le moniteur s\u00e9rie. Par d\u00e9faut il sera r\u00e9gl\u00e9 sur le d\u00e9bit de 9600 bauds. Vous verrez alors dans la nouvelle fen\u00eatre une succession de nombre : c'est le temps de r\u00e9ception de l'\u00e9cho, en microsecondes, rafra\u00eechi toutes les secondes (la variable Delta_t ) Mise en place de l'exp\u00e9rience # Nous allons mesurer le temps de parcours de l'\u00e9cho pour plusieurs distances. Il faudra donc positionner un obstacle face au capteur de distance. Les distances capteur-obstacle sont les suivantes : 20 cm ; 40 cm ; 60 cm. Positionnez l'obstacle \u00e0 la distance souhait\u00e9e puis d\u00e9marrez l'exp\u00e9rience en ouvrant la fen\u00eatre du moniteur s\u00e9rie (pour rappel, il s'agit d'appuyer sur la loupe en haut \u00e0 droite de la fen\u00eatre Arduino). \u00c9tant donn\u00e9 que nous mesurons le temps mis par l'\u00e9cho pour parvenir au r\u00e9cepteur, la distance parcourue par l'onde sonore sera le double (un aller-retour), soit : 40 cm ; 80 cm ; 120 cm. Vous verrez s'afficher dans cette fen\u00eatre le temps, en microsecondes, mis par l'onde sonore pour faire un aller-retour entre le capteur et l'obstacle. Les donn\u00e9es devraient \u00eatre relativement stables, particuli\u00e8rement pour les plus courtes distances. Notez 5 valeurs parmi les donn\u00e9es recueillies, dans chaque condition. Voici un exemple : Ici sont s\u00e9lectionn\u00e9s les valeurs maximales et minimales ainsi que celles qui semblent le plus repr\u00e9sentatives. R\u00e9sultats # Nous allons mesurer du temps de parcours de diff\u00e9rentes distances par l'onde sonore. 4] Vous recopierez le tableau suivant et vous le completerez. Distance (cm) temps1 temps2 temps3 temps4 temps5 temps moyen ( \\(\\mu\\) s) Le tableau suivant r\u00e9sume les r\u00e9sultats pr\u00e9c\u00e9dents, c'est \u00e0 dire les distances et les temps de parcours moyens obtenus dans mes conditions. 5 Recopier le tableau et le compl\u00e9ter. Distance (cm) 20 cm 40cm 60 cm Distance parcourue par l'onde (cm) temps moyen ( \\(\\mu\\) s) Exploitation et conclusion # 6] D\u00e9terminer la vitesse du son pour ces trois distances ; 7] En faire la moyenne. 8] Conclure Pour les plus rapides # Exercice # Le sonar est un capteur form\u00e9 d'une sonde qui contient un \u00e9metteur \\(E\\) et un r\u00e9cepteur \\(R\\) des ultrasons. Il est utilis\u00e9 dans la navigation maritime pour conna\u00eetre la profondeur d'eau et permet aux navires de s'approcher de la cote en toute confiance. Pour d\u00e9terminer la profondeur, l'\u00e9metteur \\(E\\) \u00e9met des ultrasons sinuso\u00efdales vers le fond de la mer, une partie de ces ultrasons r\u00e9fl\u00e9chissent et sont capt\u00e9es par le r\u00e9cepteur \\(R\\) . Le graphe ci-dessous repr\u00e9sente le signal \u00e9mis par E et le signal re\u00e7u par R. Quelle est la diff\u00e9rence entre les ondes sonores et les ondes ultrasonores ? Rappeler l'expression (la formule ) de la vitesse (autrement appel\u00e9e c\u00e9l\u00e9rit\u00e9) d'une onde. Vous exprimerez cette vitesse en fonction de la distance \\(d\\) (m) et en fonction de la dur\u00e9e de l'aller-retour \\(\\Delta t\\) (s). On utilise des ultrasons de fr\u00e9quence \\(f\\) = 200 kHz qui se propagent dans l'eau de mer avec une c\u00e9l\u00e9rit\u00e9 \\(v_{eau} = 1500\\) m.s \\(^{-1}\\) a. \u00c0 partir du graphe, d\u00e9terminer la dur\u00e9e \\(\\Delta t\\) entre l'\u00e9mission 1 et la r\u00e9ception 2. b. On suppose que les ultrasons suivent une trajectoire verticale. Calculer la valeur de \\(d\\) . Capteur de distance # R\u00e9aliser un capteur de distance. Ce capteur donnera une distance en cm. Pour cela, il faut : d\u00e9clarer une autre variable \\(d\\) de type double ; trouver l'expression de la distance \\(d\\) en fonction des autres variables du programme ; Attention aux unit\u00e9s l'afficher \u00e0 l'aide de la fonction Serial.println() .","title":"Mesure de la vitesse du son"},{"location":"Physique/Seconde/mesure_c_son/#mesure-de-la-vitesse-du-son","text":"","title":"Mesure de la vitesse du son"},{"location":"Physique/Seconde/mesure_c_son/#introduction","text":"","title":"Introduction"},{"location":"Physique/Seconde/mesure_c_son/#objectif","text":"L'objectif de cette activit\u00e9 est de v\u00e9rifier la vitesse du son dans l'air en mesurant de fa\u00e7on pr\u00e9cise, avec Arduino, les temps de r\u00e9ception d'un \u00e9cho d'ultrason se r\u00e9percutant sur un obstacle situ\u00e9 \u00e0 diff\u00e9rentes distances. Vous ferez un compte-rendu sur traitement de texte en reprenant les principales \u00e9tapes de ce TP et en r\u00e9pondant aux questions.","title":"Objectif"},{"location":"Physique/Seconde/mesure_c_son/#notion-de-vitesse","text":"1] Rappeler la formule de la vitesse en donnant la signification et l'unit\u00e9 des grandeurs intervenant la formule.","title":"Notion de vitesse"},{"location":"Physique/Seconde/mesure_c_son/#le-son","text":"Le son peut \u00eatre d\u00e9fini comme la vibration m\u00e9canique d\u2019un fluide, qui se propage sous forme d\u2019ondes [...] gr\u00e2ce \u00e0 la d\u00e9formation \u00e9lastique de ce fluide (Wikip\u00e9dia). Tout comme l\u2019onde qui se propage au fil de l\u2019eau lorsque vous y jetez un caillou, l\u2019onde sonore, ou accoustique, se d\u00e9place dans l\u2019air (ou tout autre fluide, liquide ou gazeux) sous forme de compressions r\u00e9guli\u00e8res de ce fluide (voir illustration ci-dessous). Plus les compressions se succ\u00e8dent rapidement, plus la fr\u00e9quence du son est \u00e9lev\u00e9e, donc le son per\u00e7u aigu. Plus elles sont lentes, plus la fr\u00e9quence est basse et le son grave. L'onde sonore a une vitesse propre, qui d\u00e9pend de la densit\u00e9 du fluide dans lequel elle se d\u00e9place et sa temp\u00e9rature (2 param\u00e8tres qui influent sur la pression du fluide).","title":"Le son"},{"location":"Physique/Seconde/mesure_c_son/#montage-experimental","text":"","title":"Montage exp\u00e9rimental"},{"location":"Physique/Seconde/mesure_c_son/#carte-arduino","text":"Le projet \"Arduino\" a \u00e9t\u00e9 initi\u00e9 en 2004-2005 par un groupe d\u2019enseignants, notamment Massimi Banzi, d\u2019une \u00e9cole de design italienne (Interaction Design Institute), dans le but de permettre aux \u00e9tudiants de pouvoir disposer d\u2019une plateforme valant le prix d\u2019une pizza pour r\u00e9aliser des projets interactifs. Le microcontr\u00f4leur est le cerveau de notre carte. Il va recevoir le programme que nous allons cr\u00e9er afin de l\u2019ex\u00e9cuter ensuite de mani\u00e8re autonome (c\u2019est-\u00e0-dire qu\u2019il n\u2019a plus besoin d\u2019\u00eatre connect\u00e9 \u00e0 l\u2019ordinateur pour fonctionner, il faudra simplement alimenter la carte avec une alimentation externe, par exemple une pile de 9V). La carte dispose d\u2019entr\u00e9es num\u00e9riques ou analogiques (sur lesquelles on branche g\u00e9n\u00e9ralement des capteurs : de temp\u00e9rature, de pression. . .) et de sorties num\u00e9riques (sur lesquelles on peut brancher une led, un \u00e9cran, un buzzer, des actionneurs pour actionner un robot. . .). Les possibilit\u00e9s sont quasiment illimit\u00e9es ! Le logiciel Arduino IDE (interface de d\u00e9veloppement int\u00e9gr\u00e9) est multiplateforme (fonctionne sous Mac, Windows, Linux). Il est t\u00e9l\u00e9chargeable \u00e0 l\u2019adresse suivante : (http ://arduino.cc)[http ://arduino.cc]. C\u2019est gr\u00e2ce \u00e0 lui que nous allons cr\u00e9er et tester les programmes avant de les impl\u00e9menter sur la carte Arduino.","title":"Carte Arduino"},{"location":"Physique/Seconde/mesure_c_son/#principe-du-capteur-a-ultra-son","text":"Le capteur de distance fonctionne sur le principe de l'\u00e9cholocalisation. Il est \u00e9quip\u00e9 d'un \u00e9metteur et un r\u00e9cepteur ultrason, ce qui lui permet de d\u00e9tecter des obstacles distants \u00e0 la mani\u00e8re des chauves-souris ou des c\u00e9tac\u00e9s. Il peut \u00eatre programm\u00e9 pour \u00e9mettre un court ultrason et calculer le temps de r\u00e9ception de son \u00e9cho, qui est fonction de la distance de l'obstacle et de la vitesse du son. Le t\u00e9l\u00e9m\u00e8tre \u00e9met une onde ultrasonore qui se r\u00e9fl\u00e9chit sur l\u2019obstacle et revient au t\u00e9l\u00e9m\u00e8tre. 2] Faire un dessin sur votre compte-rendu qui fait appara\u00eetre le capteur, l'obstacle, le trajet de l'onde sonore, la distance obstacle/capteur. 3] Quelle est la relation entre la distance parcourue par l'onde et la distance obstacle/capteur.","title":"Principe du capteur \u00e0 ultra-son"},{"location":"Physique/Seconde/mesure_c_son/#montage","text":"Vous remarquerez que le c\u00e2blage est on ne peut plus simple : un Arduino et un capteur de distance ! Les pins \"vcc\" et \"GND\" du capteur de distance seront branch\u00e9es sur 5V et ground respectivement. La broche \"Trig\" (\u00e9metteur) sera branch\u00e9 sur la prise 13 de l'Arduino, et la pin \"Echo\" (r\u00e9cepteur) sur la prise 12 de l'Arduino.. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 //Calcul de la vitesse du son avec Arduino //Affichage du temps de reception d'un \u00e9cho int emetteur = 13 ; //branch\u00e9 sur trig du HC-SR04 int recepteur = 12 ; //branch\u00e9 sur echo du HC-SR04 long Delta_t ; //variable type long void setup () { Serial . begin ( 9600 ); pinMode ( emetteur , OUTPUT ); pinMode ( recepteur , INPUT ); } void loop () { // \u00c9mission d'un pulse ultrason sur la pin 13 digitalWrite ( emetteur , HIGH ); delayMicroseconds ( 10 ); digitalWrite ( emetteur , LOW ); // Mesure du temps entre l'\u00e9mission et la r\u00e9ception Delta_t = pulseIn ( recepteur , HIGH ); // Affichage du temps Serial . println ( Delta_t ); // Pause delay ( 1000 ); }","title":"Montage"},{"location":"Physique/Seconde/mesure_c_son/#explications-du-code","text":"Dans un premier temps nous d\u00e9clarons les variables. Les variables emetteur et recepteur dans lesquelles seront d\u00e9clar\u00e9s les num\u00e9ros de pin utilis\u00e9es respectivement par \"Trig\" et \"Echo\" du capteur HC-SR04. La variable Delta_t de type long (entier et grande pr\u00e9cision) dans laquelle sera stock\u00e9 le temps \u00e9coul\u00e9 entre deux r\u00e9ceptions de l'\u00e9cho. Puis vient la partie d'initialisation : le void setup. Tr\u00e8s simple, il ne comporte que trois lignes : Initialisation de la communication s\u00e9rie qui nous permettra de lire la valeur de Delta_t , c'est \u00e0 dire le temps mis par l'\u00e9cho pour parvenir au r\u00e9cepteur. Initialisation de la broche emetteur (pin 13) en sortie (afin de produire un signal sonore). Initialisation de la broche recepteur (pin 12) en entr\u00e9e (afin de recevoir un signal sonore). Et pour finir, la boucle principale : le void loop. Les trois premi\u00e8res lignes permettent d'\u00e9mettre un pulse ultrason : La broche emetteur est mis \u00e0 l'\u00e9tat HIGH : l'\u00e9metteur du capteur produit un ultrason. Pause de 10 microsecondes La broche emetteur est mis \u00e0 l'\u00e9tat LOW : l'\u00e9metteur du capteur ne produit plus d'ultrason. Nous venons d'\u00e9mettre une onde sonore \u00e0 tr\u00e8s haute fr\u00e9quence (domaine des ultrasons) durant 10 microsecondes. La variable Delta_t prend la valeur de pulseIn (emetteur, HIGH) . La fonction pulseIn permet de mesurer une dur\u00e9e d'impulsion. La variable Delta_t correspond donc au temps \u00e9coul\u00e9 entre 2 \u00e9tats HIGH de la pin \"recepteur\", soit 2 r\u00e9ceptions de signal. Ce qui correspond \u00e0 un aller-retour de l'onde sonore entre l'\u00e9metteur et l'obstacle. Affichage du pulseIn dans le moniteur s\u00e9rie. D\u00e9lai d'une seconde (1000 ms) entre 2 affichages de mesure.","title":"Explications du code"},{"location":"Physique/Seconde/mesure_c_son/#partie-pratique","text":"","title":"Partie pratique"},{"location":"Physique/Seconde/mesure_c_son/#assemblage","text":"Vous pouvez maintenant brancher votre carte Lancer le logiciel Arduino. Il se pr\u00e9sente ainsi. Indiquer le type de carte Arduino utilis\u00e9e (via menu \"Outils\" puis aller \"Type de carte\" et s\u00e9lectionner la carte \"Arduino/Genuino Uno\") S\u00e9lectionner le port utilis\u00e9 par la carte : \"menu Outils\" puis sur \"Port\" et s\u00e9lectionner le port \"COM (arduino/Genuino Uno)\" T\u00e9l\u00e9verser le programme vers la carte Arduino. Effacer la zone de texte puis copier le code et le coller dans la zone de texte. Cliquez sur la loupe en haut \u00e0 droite de la fen\u00eatre Arduino pour faire appara\u00eetre le moniteur s\u00e9rie. Par d\u00e9faut il sera r\u00e9gl\u00e9 sur le d\u00e9bit de 9600 bauds. Vous verrez alors dans la nouvelle fen\u00eatre une succession de nombre : c'est le temps de r\u00e9ception de l'\u00e9cho, en microsecondes, rafra\u00eechi toutes les secondes (la variable Delta_t )","title":"Assemblage"},{"location":"Physique/Seconde/mesure_c_son/#mise-en-place-de-lexperience","text":"Nous allons mesurer le temps de parcours de l'\u00e9cho pour plusieurs distances. Il faudra donc positionner un obstacle face au capteur de distance. Les distances capteur-obstacle sont les suivantes : 20 cm ; 40 cm ; 60 cm. Positionnez l'obstacle \u00e0 la distance souhait\u00e9e puis d\u00e9marrez l'exp\u00e9rience en ouvrant la fen\u00eatre du moniteur s\u00e9rie (pour rappel, il s'agit d'appuyer sur la loupe en haut \u00e0 droite de la fen\u00eatre Arduino). \u00c9tant donn\u00e9 que nous mesurons le temps mis par l'\u00e9cho pour parvenir au r\u00e9cepteur, la distance parcourue par l'onde sonore sera le double (un aller-retour), soit : 40 cm ; 80 cm ; 120 cm. Vous verrez s'afficher dans cette fen\u00eatre le temps, en microsecondes, mis par l'onde sonore pour faire un aller-retour entre le capteur et l'obstacle. Les donn\u00e9es devraient \u00eatre relativement stables, particuli\u00e8rement pour les plus courtes distances. Notez 5 valeurs parmi les donn\u00e9es recueillies, dans chaque condition. Voici un exemple : Ici sont s\u00e9lectionn\u00e9s les valeurs maximales et minimales ainsi que celles qui semblent le plus repr\u00e9sentatives.","title":"Mise en place de l'exp\u00e9rience"},{"location":"Physique/Seconde/mesure_c_son/#resultats","text":"Nous allons mesurer du temps de parcours de diff\u00e9rentes distances par l'onde sonore. 4] Vous recopierez le tableau suivant et vous le completerez. Distance (cm) temps1 temps2 temps3 temps4 temps5 temps moyen ( \\(\\mu\\) s) Le tableau suivant r\u00e9sume les r\u00e9sultats pr\u00e9c\u00e9dents, c'est \u00e0 dire les distances et les temps de parcours moyens obtenus dans mes conditions. 5 Recopier le tableau et le compl\u00e9ter. Distance (cm) 20 cm 40cm 60 cm Distance parcourue par l'onde (cm) temps moyen ( \\(\\mu\\) s)","title":"R\u00e9sultats"},{"location":"Physique/Seconde/mesure_c_son/#exploitation-et-conclusion","text":"6] D\u00e9terminer la vitesse du son pour ces trois distances ; 7] En faire la moyenne. 8] Conclure","title":"Exploitation et conclusion"},{"location":"Physique/Seconde/mesure_c_son/#pour-les-plus-rapides","text":"","title":"Pour les plus rapides"},{"location":"Physique/Seconde/mesure_c_son/#exercice","text":"Le sonar est un capteur form\u00e9 d'une sonde qui contient un \u00e9metteur \\(E\\) et un r\u00e9cepteur \\(R\\) des ultrasons. Il est utilis\u00e9 dans la navigation maritime pour conna\u00eetre la profondeur d'eau et permet aux navires de s'approcher de la cote en toute confiance. Pour d\u00e9terminer la profondeur, l'\u00e9metteur \\(E\\) \u00e9met des ultrasons sinuso\u00efdales vers le fond de la mer, une partie de ces ultrasons r\u00e9fl\u00e9chissent et sont capt\u00e9es par le r\u00e9cepteur \\(R\\) . Le graphe ci-dessous repr\u00e9sente le signal \u00e9mis par E et le signal re\u00e7u par R. Quelle est la diff\u00e9rence entre les ondes sonores et les ondes ultrasonores ? Rappeler l'expression (la formule ) de la vitesse (autrement appel\u00e9e c\u00e9l\u00e9rit\u00e9) d'une onde. Vous exprimerez cette vitesse en fonction de la distance \\(d\\) (m) et en fonction de la dur\u00e9e de l'aller-retour \\(\\Delta t\\) (s). On utilise des ultrasons de fr\u00e9quence \\(f\\) = 200 kHz qui se propagent dans l'eau de mer avec une c\u00e9l\u00e9rit\u00e9 \\(v_{eau} = 1500\\) m.s \\(^{-1}\\) a. \u00c0 partir du graphe, d\u00e9terminer la dur\u00e9e \\(\\Delta t\\) entre l'\u00e9mission 1 et la r\u00e9ception 2. b. On suppose que les ultrasons suivent une trajectoire verticale. Calculer la valeur de \\(d\\) .","title":"Exercice"},{"location":"Physique/Seconde/mesure_c_son/#capteur-de-distance","text":"R\u00e9aliser un capteur de distance. Ce capteur donnera une distance en cm. Pour cela, il faut : d\u00e9clarer une autre variable \\(d\\) de type double ; trouver l'expression de la distance \\(d\\) en fonction des autres variables du programme ; Attention aux unit\u00e9s l'afficher \u00e0 l'aide de la fonction Serial.println() .","title":"Capteur de distance"},{"location":"Physique/Seconde/tp_mesure_distance/","text":"Mesure de distance # Mesure de distance # Exercice # Le sonar est un capteur form\u00e9 d'une sonde qui contient un \u00e9metteur \\(E\\) et un r\u00e9cepteur \\(R\\) des ultrasons. Il est utilis\u00e9 dans la navigation maritime pour conna\u00eetre la profondeur d'eau et permet aux navires de s'approcher de la cote en toute confiance. Pour d\u00e9terminer la profondeur, l'\u00e9metteur \\(E\\) \u00e9met des ultrasons sinuso\u00efdales vers le fond de la mer, une partie de ces ultrasons r\u00e9fl\u00e9chissent et sont capt\u00e9es par le r\u00e9cepteur \\(R\\) . Le graphique ci-dessous repr\u00e9sente le signal \u00e9mis par \\(E\\) (signal 1 en rouge ci-dessous) et le signal re\u00e7u par \\(R\\) (signal 2 en bleu ci-dessous). 1) Retrouver dans le cours la diff\u00e9rence entre les ondes sonores et les ondes ultrasonores ? 2) Rappeler l'expression (la formule ) de la vitesse (autrement appel\u00e9e c\u00e9l\u00e9rit\u00e9) d'une onde. Vous rappelerez la signification et l'unit\u00e9 de chacune des grandeurs. 3) Vous exprimerez cette vitesse en fonction de la distance \\(d\\) (m) et en fonction de la dur\u00e9e de l'aller-retour \\(\\Delta t\\) (s). 4) On utilise des ultrasons de fr\u00e9quence \\(f\\) = 200 kHz qui se propagent dans l'eau de mer avec une c\u00e9l\u00e9rit\u00e9 \\(v_{eau} = 1500\\) m.s \\(^{-1}\\) 1. \u00c0 partir du graphe, d\u00e9terminer la dur\u00e9e \\(\\Delta t\\) entre l'\u00e9mission et la r\u00e9ception. 2. On suppose que les ultrasons suivent une trajectoire verticale. Calculer la valeur de \\(d\\) . Partie pratique # 1) A partir de l'exercice ci-dessus, avec la carte arduino et le capteur \u00e0 ultra-son, \u00e9laborer une exp\u00e9rience (sch\u00e9ma, protocole) qui permet de retrouver la distance. 2) Copier/coller le programme distance.ino suivant dans le logiciel arduino et le compl\u00e9ter pour qu'il nous affiche la distance. Ne pas chercher \u00e0 le televerser. Remarques : la variable distance que vous avez besoin de cr\u00e9er doit \u00eatre un double (float avec plus de pr\u00e9cision). Les deux // signifient que ce qui suit est un commentaire. chaque instruction se termine par un ; . distance.ino 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 //Calcul de la vitesse du son avec Arduino int emetteur = 13 ; //branch\u00e9 sur trig du HC-SR04 int recepteur = 12 ; //branch\u00e9 sur echo du HC-SR04 long Delta_t ; //variable type long double distance ; // ................. void setup () { Serial . begin ( 9600 ); pinMode ( emetteur , OUTPUT ); pinMode ( recepteur , INPUT ); } void loop () { // \u00c9mission d'un pulse ultrason sur la pin 13 digitalWrite ( emetteur , HIGH ); delayMicroseconds ( 10 ); digitalWrite ( emetteur , LOW ); // Mesure du temps entre l'\u00e9mission et la r\u00e9ception Delta_t = pulseIn ( recepteur , HIGH ); // Calcul de la distance ........................... // Affichage du temps Serial . println (........); // affichage de la distance // Pause delay ( 1000 ); } 3) Une fois valid\u00e9 par le professeur, faire l'exp\u00e9rience. Remarque : Ne pas oublier Indiquer le type de carte Arduino utilis\u00e9e (via menu \"Outils\" puis aller \"Type de carte\" et s\u00e9lectionner la carte \"Arduino/Genuino Uno\") S\u00e9lectionner le port utilis\u00e9 par la carte : \"menu Outils\" puis sur \"Port\" et s\u00e9lectionner le port \"COM (arduino/Genuino Uno)\" T\u00e9l\u00e9verser le programme vers la carte Arduino. Applications # 1) A partir de l'exercice ci-dessus, avec la carte arduino et le capteur \u00e0 ultra-son, \u00e9laborer une exp\u00e9rience (sch\u00e9ma, protocole) qui permet de retrouver le volume d'eau dans le bidon. 2) Copier/coller le programme distance.ino . Enregistrer-le sous le nom de volume.ino et le modifier pour qu'il nous affiche le volume d'eau en Litre. Remarque : la variable volume que vous avez besoin de cr\u00e9er doit \u00eatre un double. Vous la d\u00e9clarerez de la mani\u00e8re suivante double volume ; Astuces Vous pouvez afficher dans un premier temps la hauteur d'eau. Ensuite, vous pouvez afficher le volume. 3) Une fois valid\u00e9 par le professeur, faire l'exp\u00e9rience. Exercices # n\u00b024 et 25 p 244, 245 n\u00b046 et 47 p 249","title":"Mesure de distance"},{"location":"Physique/Seconde/tp_mesure_distance/#mesure-de-distance","text":"","title":"Mesure de distance"},{"location":"Physique/Seconde/tp_mesure_distance/#mesure-de-distance_1","text":"","title":"Mesure de distance"},{"location":"Physique/Seconde/tp_mesure_distance/#exercice","text":"Le sonar est un capteur form\u00e9 d'une sonde qui contient un \u00e9metteur \\(E\\) et un r\u00e9cepteur \\(R\\) des ultrasons. Il est utilis\u00e9 dans la navigation maritime pour conna\u00eetre la profondeur d'eau et permet aux navires de s'approcher de la cote en toute confiance. Pour d\u00e9terminer la profondeur, l'\u00e9metteur \\(E\\) \u00e9met des ultrasons sinuso\u00efdales vers le fond de la mer, une partie de ces ultrasons r\u00e9fl\u00e9chissent et sont capt\u00e9es par le r\u00e9cepteur \\(R\\) . Le graphique ci-dessous repr\u00e9sente le signal \u00e9mis par \\(E\\) (signal 1 en rouge ci-dessous) et le signal re\u00e7u par \\(R\\) (signal 2 en bleu ci-dessous). 1) Retrouver dans le cours la diff\u00e9rence entre les ondes sonores et les ondes ultrasonores ? 2) Rappeler l'expression (la formule ) de la vitesse (autrement appel\u00e9e c\u00e9l\u00e9rit\u00e9) d'une onde. Vous rappelerez la signification et l'unit\u00e9 de chacune des grandeurs. 3) Vous exprimerez cette vitesse en fonction de la distance \\(d\\) (m) et en fonction de la dur\u00e9e de l'aller-retour \\(\\Delta t\\) (s). 4) On utilise des ultrasons de fr\u00e9quence \\(f\\) = 200 kHz qui se propagent dans l'eau de mer avec une c\u00e9l\u00e9rit\u00e9 \\(v_{eau} = 1500\\) m.s \\(^{-1}\\) 1. \u00c0 partir du graphe, d\u00e9terminer la dur\u00e9e \\(\\Delta t\\) entre l'\u00e9mission et la r\u00e9ception. 2. On suppose que les ultrasons suivent une trajectoire verticale. Calculer la valeur de \\(d\\) .","title":"Exercice"},{"location":"Physique/Seconde/tp_mesure_distance/#partie-pratique","text":"1) A partir de l'exercice ci-dessus, avec la carte arduino et le capteur \u00e0 ultra-son, \u00e9laborer une exp\u00e9rience (sch\u00e9ma, protocole) qui permet de retrouver la distance. 2) Copier/coller le programme distance.ino suivant dans le logiciel arduino et le compl\u00e9ter pour qu'il nous affiche la distance. Ne pas chercher \u00e0 le televerser. Remarques : la variable distance que vous avez besoin de cr\u00e9er doit \u00eatre un double (float avec plus de pr\u00e9cision). Les deux // signifient que ce qui suit est un commentaire. chaque instruction se termine par un ; . distance.ino 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 //Calcul de la vitesse du son avec Arduino int emetteur = 13 ; //branch\u00e9 sur trig du HC-SR04 int recepteur = 12 ; //branch\u00e9 sur echo du HC-SR04 long Delta_t ; //variable type long double distance ; // ................. void setup () { Serial . begin ( 9600 ); pinMode ( emetteur , OUTPUT ); pinMode ( recepteur , INPUT ); } void loop () { // \u00c9mission d'un pulse ultrason sur la pin 13 digitalWrite ( emetteur , HIGH ); delayMicroseconds ( 10 ); digitalWrite ( emetteur , LOW ); // Mesure du temps entre l'\u00e9mission et la r\u00e9ception Delta_t = pulseIn ( recepteur , HIGH ); // Calcul de la distance ........................... // Affichage du temps Serial . println (........); // affichage de la distance // Pause delay ( 1000 ); } 3) Une fois valid\u00e9 par le professeur, faire l'exp\u00e9rience. Remarque : Ne pas oublier Indiquer le type de carte Arduino utilis\u00e9e (via menu \"Outils\" puis aller \"Type de carte\" et s\u00e9lectionner la carte \"Arduino/Genuino Uno\") S\u00e9lectionner le port utilis\u00e9 par la carte : \"menu Outils\" puis sur \"Port\" et s\u00e9lectionner le port \"COM (arduino/Genuino Uno)\" T\u00e9l\u00e9verser le programme vers la carte Arduino.","title":"Partie pratique"},{"location":"Physique/Seconde/tp_mesure_distance/#applications","text":"1) A partir de l'exercice ci-dessus, avec la carte arduino et le capteur \u00e0 ultra-son, \u00e9laborer une exp\u00e9rience (sch\u00e9ma, protocole) qui permet de retrouver le volume d'eau dans le bidon. 2) Copier/coller le programme distance.ino . Enregistrer-le sous le nom de volume.ino et le modifier pour qu'il nous affiche le volume d'eau en Litre. Remarque : la variable volume que vous avez besoin de cr\u00e9er doit \u00eatre un double. Vous la d\u00e9clarerez de la mani\u00e8re suivante double volume ; Astuces Vous pouvez afficher dans un premier temps la hauteur d'eau. Ensuite, vous pouvez afficher le volume. 3) Une fois valid\u00e9 par le professeur, faire l'exp\u00e9rience.","title":"Applications"},{"location":"Physique/Seconde/tp_mesure_distance/#exercices","text":"n\u00b024 et 25 p 244, 245 n\u00b046 et 47 p 249","title":"Exercices"},{"location":"Physique/Seconde/tp_verrerie/","text":"Quel type de verrerie est le plus pr\u00e9cis ? # Objectif du TP # Lors d\u2019une intervention chirurgicale, un patient doit recevoir une perfusion de glucose afin d\u2019avoir un apport \u00e9nerg\u00e9tique suffisant pour l\u2019op\u00e9ration. Le volume de solution \u00e0 pr\u00e9parer est de 100 mL. Nous disposons de 3 \u00e9l\u00e9ments de verrerie portant l\u2019indication 100 mL : 1 B\u00e9cher ; 1 \u00c9prouvette gradu\u00e9e ; 1 Fiole jaug\u00e9e. Probl\u00e9matique # Notre objectif est de d\u00e9terminer quel \u00e9l\u00e9ment de verrerie choisir afin de pr\u00e9parer la solution avec un maximum de pr\u00e9cision. Partie Pratique # Vous r\u00e9pondrez aux questions sur un document texte. Pour r\u00e9pondre \u00e0 la probl\u00e9matique, nous allons effectuer 3 pr\u00e9l\u00e8vements de 100 mL d\u2019eau avec chacun des 3 \u00e9l\u00e9ments de verrerie. Afin de v\u00e9rifier si \u00e0 chaque fois on a bien pr\u00e9lev\u00e9 le m\u00eame volume d\u2019eau, nous allons le peser avec une balance de pr\u00e9cision. Travail \u00e0 r\u00e9aliser en bin\u00f4me # Reproduire sur votre compte-rendu, le tableau ci-dessous. Pour chacun des instruments (b\u00eacher, \u00e9prouvette gradu\u00e9e, fiole jaug\u00e9e) : Poser l\u2019instrument bien sec sur une balance de pr\u00e9cision et effectuer la tare ; Le remplir d\u2019eau jusqu\u2019\u00e0 la graduation 100 mL. Le niveau pourra \u00eatre affin\u00e9 tr\u00e8s pr\u00e9cis\u00e9ment \u00e0 l\u2019aide d\u2019une pipette pasteur ; Noter sur votre compte-rendu cette masse dans le tableau (mesure n\u00b01) ; Vider l\u2019instrument et le remplir \u00e0 nouveau d\u2019eau (ne pas effectuer la tare une nouvelle fois, elle a d\u00e9j\u00e0 \u00e9t\u00e9 r\u00e9alis\u00e9e avec l\u2019instrument bien sec) ; Noter sur votre compte-rendu la masse dans le tableau (mesure n\u00b02) ; Recommencer encore une fois la mesure. B\u00e9cher \u00c9prouvette gradu\u00e9e Fiole jaug\u00e9e Mesure n\u00b01 masse (g) Mesure n\u00b02 : masse (g) Mesure n\u00b03 : masse (g) Trac\u00e9 d\u2019un histogramme permettant de visualiser la dispersion des mesures # Cet histogramme peut \u00eatre r\u00e9alis\u00e9 \u00e0 l\u2019aide du langage python. Le code est donn\u00e9 ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # importation de la biblioth\u00e8que matplotlib import matplotlib.pyplot as plt # initialisation des listes (\u00e0 remplir avec vos donn\u00e9es # s\u00e9par\u00e9es par des virgules) masse_becher = [] masse_eprouvette = [] masse_fiole = [] # cr\u00e9ation de 3 histogrammes plt . hist ( masse_becher , bins = 50 , label = \"becher\" ) # param\u00e8tre bins = nombre de barres plt . hist ( masse_eprouvette , bins = 50 , label = \"\u00e9prouvette gradu\u00e9e\" ) plt . hist ( masse_fiole , bins = 50 , label = \"fiole jaug\u00e9e\" ) # am\u00e9lioration du graphique (optionnel) plt . xlabel ( \"masse mesur\u00e9e\" ) # \u00e9tiquette de l'axe des abscisses plt . ylabel ( \"fr\u00e9quence\" ) # \u00e9tiquette de l'axe des ordonn\u00e9es plt . title ( \"dispersion des mesures\" ) # titre du graphique plt . legend () #affiche la l\u00e9gende plt . grid () #cr\u00e9\u00e9 une grille # affichage du graphique plt . show () Faire un copier/coller du programme ci-dessus dans votre \u00e9diteur Python. Mettre en commun les r\u00e9sultats de la classe en compl\u00e9tant les listes nomm\u00e9es masse_becher , masse_eprouvette , masse_fiole ; Cliquer sur executer . Faire une copie d\u2019\u00e9cran. En d\u00e9duire visuellement quel type de verrerie est la plus pr\u00e9cise. Estimation de l\u2019ordre de grandeur de l\u2019erreur sur la mesure # Pour mieux caract\u00e9riser la dispersion des mesures, on calcule l\u2019\u00e9cart- type, not\u00e9 \\(\\sigma_{n\u22121}\\) . L\u2019\u00e9cart-type \\(\\sigma_{n\u22121}\\) donne une estimation de l\u2019ordre de grandeur de l\u2019erreur sur la mesure. Plus l\u2019\u00e9cart-type est faible, moins les valeurs mesur\u00e9es sont dispers\u00e9es, et donc plus pr\u00e9cise est la mesure. Ces calculs peuvent \u00eatre effectu\u00e9s avec la calculatrice, mais \u00e9galement avec Python : Importer la biblioth\u00e8que numpy qui permet d\u2019effectuer des statistiques avec l\u2019instruction : 1 import numpy as np Pour calculer l\u2019\u00e9cart-type des valeurs de la liste masse_becher et l\u2019afficher : 1 2 ecart_typeB = np . std ( masse_becher , ddof = 1 ) print ( \"B\u00e9cher : \u00e9cart-type = \" , round ( ecart_typeB , 3 )) Compl\u00e9ter le script afin d\u2019afficher les \u00e9cart-types correspondant aux 3 instruments de mesure. L\u2019instrution plt.show() doit se trouver en fin de script (instruction bloquante) Effectuer une capture d\u2019\u00e9cran de la console dans le compte-rendu (pour les valeurs des 3 \u00e9carts-type) On peut aussi calculer l\u2019incertitude-type que l\u2019on notera u (vient de uncertainty en anglais) : L\u2019incertitude\u2013type u(m) sur la masse est \u00e9gale \u00e0 : \\[u(m ) = \\dfrac{\\sigma_{\ud835\udc8f\u2212\ud835\udfcf}}{\\sqrt{n}}\\] O\u00f9 \\(n\\) correspond au nombre de mesures effectu\u00e9es. L\u2019incertitude est toujours exprim\u00e9e avec un seul chiffre significatif arrondi \u00e0 la valeur sup\u00e9rieure. L'incertitude-type caract\u00e9rise la dispersion des valeurs attribu\u00e9es \u00e0 la valeur mesur\u00e9e (mesurande). Pour les 3 instruments utilis\u00e9s, calculer l'incertitude type. Validation du choix de l'instrument le mieux adapt\u00e9 \u00e0 la mesure du volume. # Les histogrammes et les valeurs des incertitudes-type doivent vous permettre d'effectuer les choix suivants : Pami les 3 instruments utilis\u00e9s, lequel ne doit surtout pas \u00eatre utilis\u00e9 pour mesurer un volume ? Parmi les 2 instruments restants, lequel est le plus pr\u00e9cis ? Quel est alors l'utilit\u00e9 de l'autre ?","title":"Quel type de verrerie est le plus pr\u00e9cis ?"},{"location":"Physique/Seconde/tp_verrerie/#quel-type-de-verrerie-est-le-plus-precis","text":"","title":"Quel type de verrerie est le plus pr\u00e9cis ?"},{"location":"Physique/Seconde/tp_verrerie/#objectif-du-tp","text":"Lors d\u2019une intervention chirurgicale, un patient doit recevoir une perfusion de glucose afin d\u2019avoir un apport \u00e9nerg\u00e9tique suffisant pour l\u2019op\u00e9ration. Le volume de solution \u00e0 pr\u00e9parer est de 100 mL. Nous disposons de 3 \u00e9l\u00e9ments de verrerie portant l\u2019indication 100 mL : 1 B\u00e9cher ; 1 \u00c9prouvette gradu\u00e9e ; 1 Fiole jaug\u00e9e.","title":"Objectif du TP"},{"location":"Physique/Seconde/tp_verrerie/#problematique","text":"Notre objectif est de d\u00e9terminer quel \u00e9l\u00e9ment de verrerie choisir afin de pr\u00e9parer la solution avec un maximum de pr\u00e9cision.","title":"Probl\u00e9matique"},{"location":"Physique/Seconde/tp_verrerie/#partie-pratique","text":"Vous r\u00e9pondrez aux questions sur un document texte. Pour r\u00e9pondre \u00e0 la probl\u00e9matique, nous allons effectuer 3 pr\u00e9l\u00e8vements de 100 mL d\u2019eau avec chacun des 3 \u00e9l\u00e9ments de verrerie. Afin de v\u00e9rifier si \u00e0 chaque fois on a bien pr\u00e9lev\u00e9 le m\u00eame volume d\u2019eau, nous allons le peser avec une balance de pr\u00e9cision.","title":"Partie Pratique"},{"location":"Physique/Seconde/tp_verrerie/#travail-a-realiser-en-binome","text":"Reproduire sur votre compte-rendu, le tableau ci-dessous. Pour chacun des instruments (b\u00eacher, \u00e9prouvette gradu\u00e9e, fiole jaug\u00e9e) : Poser l\u2019instrument bien sec sur une balance de pr\u00e9cision et effectuer la tare ; Le remplir d\u2019eau jusqu\u2019\u00e0 la graduation 100 mL. Le niveau pourra \u00eatre affin\u00e9 tr\u00e8s pr\u00e9cis\u00e9ment \u00e0 l\u2019aide d\u2019une pipette pasteur ; Noter sur votre compte-rendu cette masse dans le tableau (mesure n\u00b01) ; Vider l\u2019instrument et le remplir \u00e0 nouveau d\u2019eau (ne pas effectuer la tare une nouvelle fois, elle a d\u00e9j\u00e0 \u00e9t\u00e9 r\u00e9alis\u00e9e avec l\u2019instrument bien sec) ; Noter sur votre compte-rendu la masse dans le tableau (mesure n\u00b02) ; Recommencer encore une fois la mesure. B\u00e9cher \u00c9prouvette gradu\u00e9e Fiole jaug\u00e9e Mesure n\u00b01 masse (g) Mesure n\u00b02 : masse (g) Mesure n\u00b03 : masse (g)","title":"Travail \u00e0 r\u00e9aliser en bin\u00f4me"},{"location":"Physique/Seconde/tp_verrerie/#trace-dun-histogramme-permettant-de-visualiser-la-dispersion-des-mesures","text":"Cet histogramme peut \u00eatre r\u00e9alis\u00e9 \u00e0 l\u2019aide du langage python. Le code est donn\u00e9 ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # importation de la biblioth\u00e8que matplotlib import matplotlib.pyplot as plt # initialisation des listes (\u00e0 remplir avec vos donn\u00e9es # s\u00e9par\u00e9es par des virgules) masse_becher = [] masse_eprouvette = [] masse_fiole = [] # cr\u00e9ation de 3 histogrammes plt . hist ( masse_becher , bins = 50 , label = \"becher\" ) # param\u00e8tre bins = nombre de barres plt . hist ( masse_eprouvette , bins = 50 , label = \"\u00e9prouvette gradu\u00e9e\" ) plt . hist ( masse_fiole , bins = 50 , label = \"fiole jaug\u00e9e\" ) # am\u00e9lioration du graphique (optionnel) plt . xlabel ( \"masse mesur\u00e9e\" ) # \u00e9tiquette de l'axe des abscisses plt . ylabel ( \"fr\u00e9quence\" ) # \u00e9tiquette de l'axe des ordonn\u00e9es plt . title ( \"dispersion des mesures\" ) # titre du graphique plt . legend () #affiche la l\u00e9gende plt . grid () #cr\u00e9\u00e9 une grille # affichage du graphique plt . show () Faire un copier/coller du programme ci-dessus dans votre \u00e9diteur Python. Mettre en commun les r\u00e9sultats de la classe en compl\u00e9tant les listes nomm\u00e9es masse_becher , masse_eprouvette , masse_fiole ; Cliquer sur executer . Faire une copie d\u2019\u00e9cran. En d\u00e9duire visuellement quel type de verrerie est la plus pr\u00e9cise.","title":"Trac\u00e9 d\u2019un histogramme permettant de visualiser la dispersion des mesures"},{"location":"Physique/Seconde/tp_verrerie/#estimation-de-lordre-de-grandeur-de-lerreur-sur-la-mesure","text":"Pour mieux caract\u00e9riser la dispersion des mesures, on calcule l\u2019\u00e9cart- type, not\u00e9 \\(\\sigma_{n\u22121}\\) . L\u2019\u00e9cart-type \\(\\sigma_{n\u22121}\\) donne une estimation de l\u2019ordre de grandeur de l\u2019erreur sur la mesure. Plus l\u2019\u00e9cart-type est faible, moins les valeurs mesur\u00e9es sont dispers\u00e9es, et donc plus pr\u00e9cise est la mesure. Ces calculs peuvent \u00eatre effectu\u00e9s avec la calculatrice, mais \u00e9galement avec Python : Importer la biblioth\u00e8que numpy qui permet d\u2019effectuer des statistiques avec l\u2019instruction : 1 import numpy as np Pour calculer l\u2019\u00e9cart-type des valeurs de la liste masse_becher et l\u2019afficher : 1 2 ecart_typeB = np . std ( masse_becher , ddof = 1 ) print ( \"B\u00e9cher : \u00e9cart-type = \" , round ( ecart_typeB , 3 )) Compl\u00e9ter le script afin d\u2019afficher les \u00e9cart-types correspondant aux 3 instruments de mesure. L\u2019instrution plt.show() doit se trouver en fin de script (instruction bloquante) Effectuer une capture d\u2019\u00e9cran de la console dans le compte-rendu (pour les valeurs des 3 \u00e9carts-type) On peut aussi calculer l\u2019incertitude-type que l\u2019on notera u (vient de uncertainty en anglais) : L\u2019incertitude\u2013type u(m) sur la masse est \u00e9gale \u00e0 : \\[u(m ) = \\dfrac{\\sigma_{\ud835\udc8f\u2212\ud835\udfcf}}{\\sqrt{n}}\\] O\u00f9 \\(n\\) correspond au nombre de mesures effectu\u00e9es. L\u2019incertitude est toujours exprim\u00e9e avec un seul chiffre significatif arrondi \u00e0 la valeur sup\u00e9rieure. L'incertitude-type caract\u00e9rise la dispersion des valeurs attribu\u00e9es \u00e0 la valeur mesur\u00e9e (mesurande). Pour les 3 instruments utilis\u00e9s, calculer l'incertitude type.","title":"Estimation de l\u2019ordre de grandeur de l\u2019erreur sur la mesure"},{"location":"Physique/Seconde/tp_verrerie/#validation-du-choix-de-linstrument-le-mieux-adapte-a-la-mesure-du-volume","text":"Les histogrammes et les valeurs des incertitudes-type doivent vous permettre d'effectuer les choix suivants : Pami les 3 instruments utilis\u00e9s, lequel ne doit surtout pas \u00eatre utilis\u00e9 pour mesurer un volume ? Parmi les 2 instruments restants, lequel est le plus pr\u00e9cis ? Quel est alors l'utilit\u00e9 de l'autre ?","title":"Validation du choix de l'instrument le mieux adapt\u00e9 \u00e0 la mesure du volume."},{"location":"Premiere/cours_juin_1NSI/","text":"Remise \u00e0 niveau : juin 2023 (Support de travail) # Les structures de bases en Python # If else # structure # 1 2 3 4 5 6 d\u00e9but du programme if condition : Bloc1 else : Bloc2 fin du programme op\u00e9rateur de comparaison # Op\u00e9rateur Signification litt\u00e9rale < strictement inf\u00e9rieur \u00e0 > strictement sup\u00e9rieur \u00e0 <= inf\u00e9rieur ou \u00e9gal \u00e0 >= sup\u00e9rieur ou \u00e9gal \u00e0 == \u00e9gal != diff\u00e9rent de Op\u00e9rateur R\u00f4le a and b Vraie si a et b sont vraie a or b vraie si a ou b (ou les deux) sont vraies not(a) si a est vraie, not(a) est fausse et inversement Remarque : une condition peut aussi \u00eatre accol\u00e9e \u00e0 un return dans une fonction. En voici un exemple : fonction est_pair ( a : int ) -> bool : return a % 2 == 0 La boucle while # Structure et fonctionement # On l'utilise lorsque l'on ne sait a priori pas combien de boucles vont \u00eatre effectu\u00e9es. On l'utilise \u00e9galement lorsque l'on veut r\u00e9aliser des incr\u00e9mentations avec un pas qui ne soit pas entier, par exemple lors d'un trac\u00e9 de courbe. La boucle \u00ab tant que \u00bb ex\u00e9cute le corps de boucle (instructions indent\u00e9es) tant qu\u2019une condition \u00e9valu\u00e9e dans le test de poursuite est vraie. D\u00e8s que la condition devient fausse, elle passe aux instructions suivantes. Syntaxe : avec une variable compteur qui va nous servir \u00e0 compter le nombre de boucle. compteur = indice_debut # initialisation de compteur nbre_boucle = indice_fin while compteur < nbre_boucle : # tant que la condition est v\u00e9rifi\u00e9e bloc_instruction compteur += pas # modification de compteur Trace # 1 2 3 4 5 n = 4 r = 0 while r * r <= n : r = r + 1 r = r - 1 N\u00b0 ligne n r Commentaires 1 4 n \\(\\leftarrow\\) 4 2 4 0 r \\(\\leftarrow\\) 0 3 4 0 r*r <= n ? oui, on ex\u00e9cute la ligne 4 4 4 1 r+1 = 0+1 = 1 r \\(\\leftarrow\\) 1 3 4 1 r*r <= n ? oui, on ex\u00e9cute la ligne 4 4 4 2 r+1 = 1+1 = 2 r \\(\\leftarrow\\) 2 3 4 2 r*r <= n ? oui, on ex\u00e9cute la ligne 4 4 4 3 r+1 = 2+1 = 3 r \\(\\leftarrow\\) 2 3 4 3 r*r <= n ? non, on ex\u00e9cute la ligne 5 5 4 2 r-1 = 3 - 1 = 2 r \\(\\leftarrow\\) 2 La boucle for # La boucle for permet d\u2019effectuer un nombre de fois bien d\u00e9termin\u00e9 le corps de boucle (s\u00e9quence d'instructions). Elle s'utilise g\u00e9n\u00e9ralement avec la fonction range qui permet de g\u00e9n\u00e9rer une s\u00e9quence de nombres entiers allant de 0 \u00e0 n exclu. Syntaxe : 1 2 for i in range ( indice_depart , indice_fin , pas ): bloc_instruction Les fonctions # Pour d\u00e9finir un fonction nomm\u00e9e fonction qui prend deux nombres en argument a et b et qui retourne la variable c, on \u00e9crit: 1 2 3 4 5 6 def fonction ( a : type_a , b : type_b ) -> type_c : \"\"\" docstring \"\"\" corps de la fonction return c Exercices # Exercice 1: \u00c9crire un programme qui prend comme argument le rayon(int) et la hauteur(int) du c\u00f4ne et qui calcule et retourne le volume du c\u00f4ne droit. Exercice 2: Faire une fonction qui demande un nombre et qui affiche sa racine carr\u00e9e et son carr\u00e9. Exercice 3 : Faire la trace d\u2019ex\u00e9cution du programme suivant et expliquer ce que fait le programme. Proposer ensuite une mani\u00e8re plus simple d\u2019\u00e9crire la condition de la boucle while, faire \u00e0 nouveau la trace pour v\u00e9rifier que l\u2019on parvient au m\u00eame r\u00e9sultat 1 2 3 4 5 6 7 8 9 a = 24 b = 6 q = 0 while (( a - b ) > 0 or ( b - a ) == 0 ): a = a - b q = q + 1 r = a ; print ( q ) print ( r ) Exercice 4 : Effectuer la trace du programme suivant : 1 2 3 4 5 def fact ( n ): x = 1 for i in range ( 2 , n + 1 ): x = i * x return x Exercice 5: L\u2019\u00abASCII Art\u00bb consiste \u00e0 utiliser les caract\u00e8res alphanum\u00e9riques du code ASCII pour produire des images. Nous allons commencer par dessiner un carr\u00e9 \u00e0 l\u2019aide de la lettre X. \u00c9crire une fonction qui affiche le carr\u00e9 (ci-dessous en taille 8) et qui prend en param\u00e8tre la longueur du c\u00f4t\u00e9. Exercice 6 : A l'aide de la biblioth\u00e8que Turtle, \u00e9crire : une fonction qui r\u00e9alise une carr\u00e9 ; une fonction qui r\u00e9alise un triangle ; une fonction qui r\u00e9alise une maison. Exercice 7 : Un ordinateur manipule des nombres \u00e9crits en binaire : uniquement avec les chiffres \u00ab0\u00bb et \u00ab1\u00bb. Par exemple le nombre 26 s'\u00e9crit 11010 en binaire. Chaque \u00ab0\u00bb et \u00ab1\u00bb d'une \u00e9criture binaire est appel\u00e9 bit. Ainsi, le nombre s'\u00e9crit en binaire sur \\(n\\) bits. Pour savoir combien de bits sont n\u00e9cessaires pour \u00e9crire en binaire un nombre entier strictement positif on compte le nombre de divisions euclidiennes par n\u00e9cessaires pour obtenir un quotient nul. En partant de 26, on a : \\(26 = 2 \\times 13 + 0\\) \\(13 = 2 \\times 6 + 1\\) \\(6 = 2 \\times 3 + 0\\) \\(3 = 2 \\times 1 + 1\\) \\(1 = 2 \\times 0 + 1\\) Comme on peut le voir, 5 divisions euclidiennes ont \u00e9t\u00e9 n\u00e9cessaires pour passer de 26 \u00e0 0 : 26 s'\u00e9crit donc sur 5 bits en binaire. On rappelle que l'op\u00e9rateur // permet d'obtenir le quotient de deux nombres : 13 // 2 est \u00e9valu\u00e9 \u00e0 6. \u00c9crire la fonction nb_bits qui prend en argument un nombre entier strictement positif et renvoie le nombre de bits n\u00e9cessaires \u00e0 son \u00e9criture en binaire. Exercice 8 : Les ann\u00e9es bissextiles comportent 366 jours. Contrairement \u00e0 ce que l'on pense couramment, elles ne se rencontrent pas exactement tous les 4 ans ! En effet : une ann\u00e9e non divisible par 4 n'est pas bissextile ; parmi les ann\u00e9es divisibles par 4 : les ann\u00e9es qui ne sont pas divisibles par 100 sont bissextiles ; parmi les ann\u00e9es divisibles par 100 : les ann\u00e9es qui ne sont pas divisibles par 400 ne sont pas bissextiles, les autres sont bissextiles. Par exemple : 2022 n'est pas divisible par 4 : elle n'est pas bissextile ; 2020 est divisible par 4, mais pas par 100 : elle est bissextile ; 2100 est divisible par 4, par 100, mais pas par 400 : elle n'est pas bissextile ; 2400 est divisible par 4, par 100 et par 400 : elle est bissextile. \u00c9crire la fonction est_bissextile renvoyant True si l'ann\u00e9e pass\u00e9e en argument est bissextile, False dans le cas contraire. Exercice 9 : \u00c9crire la fonction facto qui donne la factorielle d'un nombre \\(n\\) . On rappelle que factorielle de 5 s'\u00e9crit : \\(5! = 5 \\times 4 \\times 3 \\times 2 \\times 1\\) . Exercice 10 : \u00c9crire la fonction somme qui retourne la somme des \\(n\\) premiers entiers. Exemple : somme(5) = 5 + 4 + 3 + 2 + 1 Exercice 11 : Programmer la fonction multiplication , prenant en param\u00e8tres deux nombres entiers \\(n1\\) et \\(n2\\) , et qui renvoie le produit de ces deux nombres. Les seules op\u00e9rations autoris\u00e9es sont l\u2019addition et la soustraction. Exemples : >>> multiplication ( 3 , 5 ) 15 >>> multiplication ( - 4 , - 8 ) 32 >>> multiplication ( - 2 , 6 ) - 12 >>> multiplication ( - 2 , 0 ) 0 Les listes # D\u00e9finitions # Une liste est une structure de donn\u00e9es qui contient une s\u00e9rie de valeurs. Python autorise la construction de liste contenant des valeurs de types diff\u00e9rents (par exemple entier et cha\u00eene de caract\u00e8res), ce qui leur conf\u00e8re une grande flexibilit\u00e9. Une liste est d\u00e9clar\u00e9e par une s\u00e9rie de valeurs (n'oubliez pas les guillemets, simples ou doubles, s'il s'agit de cha\u00eenes de caract\u00e8res) s\u00e9par\u00e9es par des virgules, et le tout encadr\u00e9 par des crochets. En voici quelques exemples : >>> animaux = [ \"girafe\" , \"tigre\" , \"singe\" , \"souris\" ] >>> tailles = [ 5 , 2.5 , 1.75 , 0.15 ] >>> mixte = [ \"girafe\" , 5 , \"souris\" , 0.15 ] >>> animaux [ 'girafe' , 'tigre' , 'singe' , 'souris' ] >>> tailles [ 5 , 2.5 , 1.75 , 0.15 ] >>> mixte [ 'girafe' , 5 , 'souris' , 0.15 ] Lorsque l'on affiche une liste, Python la restitue telle qu'elle a \u00e9t\u00e9 saisie. Les instructions utiles # La fonction len() # L'instruction len() permet de conna\u00eetre la longueur d'une liste, c'est-\u00e0-dire le nombre d'\u00e9l\u00e9ments que contient la liste. Voici un exemple d'utilisation : 1 2 3 4 5 >>> animaux = [ \"girafe\" , \"tigre\" , \"singe\" , \"souris\" ] >>> len ( animaux ) 4 >>> len ([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ]) 8 La m\u00e9thode .append() # La m\u00e9thode .append() ajoute un \u00e9l\u00e9ment \u00e0 la fin d'une liste : 1 2 3 4 >>> a = [ 1 , 2 , 3 ] >>> a . append ( 5 ) >>> a [ 1 , 2 , 3 , 5 ] La m\u00e9thode .pop() # La m\u00e9thode .pop() en Python est une fonction qui permet de supprimer un \u00e9l\u00e9ment d'une liste et de renvoyer la valeur de l'\u00e9l\u00e9ment supprim\u00e9. Elle peut prendre un argument optionnel, qui est l'index de l'\u00e9l\u00e9ment \u00e0 supprimer. Si aucun index n'est sp\u00e9cifi\u00e9, la m\u00e9thode pop() supprimera et renverra le dernier \u00e9l\u00e9ment de la liste. 1 2 3 4 5 6 7 8 9 10 11 a = [ 1 , 2 , 3 , 4 , 5 ] element = a . pop () print ( a ) print ( element ) \"\"\" Cela imprimera: [1, 2, 3, 4] 5 \"\"\" La fonction del # L'instruction del supprime un \u00e9l\u00e9ment d'une liste \u00e0 un indice d\u00e9termin\u00e9 : 1 2 3 4 >>> a = [ 1 , 2 , 3 ] >>> del a [ 1 ] >>> a [ 1 , 3 ] La m\u00e9thode remove() # La m\u00e9thode .remove() supprime un \u00e9l\u00e9ment d'une liste \u00e0 partir de sa valeur : 1 2 3 4 5 6 7 >>> a = [ 1 , 2 , 3 , 4 , 3 ] >>> a . remove ( 3 ) >>> a [ 1 , 2 , 4 , 3 ] >>> a . remove ( 3 ) >>> a [ 1 , 2 , 4 ] La m\u00e9thode .reverse() # La m\u00e9thode .reverse() inverse une liste : 1 2 3 4 >>> a = [ 3 , 1 , 2 ] >>> a . reverse () >>> a [ 2 , 1 , 3 ] Balayage d'une liste # Balayage par indice # 1 2 3 4 a = [ 3 , 1 , 2 ] for i in range ( len ( a )): print ( i ) # affichera 0,1,2 print ( a [ i ]) # affichera 3,1,2 Balayage par \u00e9l\u00e9ment # 1 2 3 a = [ 3 , 1 , 2 ] for i in a : print ( i ) # affichera 3,1,2 Exercices # Exercice 1 : \u00c9crire une fonction genereTab qui prend en argument 2 entiers et retourne un tableau de longueur \u00e9gale au 1 er argument et dont chaque \u00e9l\u00e9ment est un nombre entier al\u00e9atoire compris entre 0 et le 2 nd argument (inclus). Exercice 2 : \u00c9crire une fonction moyenne qui prend en argument une liste contenant les notes. La fonction retournera la moyenne des notes. Exercice 3 : \u00c9crire une fonction carre(n) qui renvoie le tableau des carr\u00e9s des nombres entiers compris entre 0 et n-1. Exercice 4 : \u00c9crire une fonction imagesf(deb,fin) qui renvoie le tableau des images des nombres entiers compris entre deb et fin par la fonction \\(f:x \\rightarrow 3x^2 - 2x + 1\\) Exercice 5 : Programmer la fonction derniere_occurrence , prenant en param\u00e8tre un tableau non vide d'entiers et un entier cible, et qui renvoie l'indice de la derni\u00e8re occurrence de cible. Si l'\u00e9l\u00e9ment n'est pas pr\u00e9sent, la fonction renvoie la longueur du tableau. Exercice 6 : \u00c9crire les fonctions suivants : Maximum : d\u00e9terminer le maximum dans un tableau ; Indice du minimum : d\u00e9terminer l'indice du minimum dans un tableau ; Premier minimum local : d\u00e9terminer l'indice du premier minimum dans un tableau ; Occurrences du minimum : d\u00e9terminer la valeur et les indices du minimum ; Valeur et indices du max : d\u00e9terminer la valeur et les indices du maximum. Les dictionnaires # D\u00e9finition # Comme on l\u2019a vu avec les listes \u00e0 partir des types de base (int, float, etc.) il est possible d\u2019\u00e9laborer de nouveaux types qu\u2019on appelle des types construits. Un nouvel exemple de type construit est le dictionnaire. Les \u00e9l\u00e9ments d\u2019une liste ou d\u2019un tuple sont ordonn\u00e9s et on acc\u00e9de \u00e0 un \u00e9l\u00e9ment gr\u00e2ce \u00e0 sa position en utilisant un num\u00e9ro qu\u2019on appelle l\u2019indice de l\u2019\u00e9l\u00e9ment. Un dictionnaire en Python va aussi permettre de rassembler des \u00e9l\u00e9ments mais ceux-ci seront identifi\u00e9s par une cl\u00e9. On peut faire l\u2019analogie avec un dictionnaire de fran\u00e7ais o\u00f9 on acc\u00e8de \u00e0 une d\u00e9finition avec un mot. Contrairement aux listes qui sont d\u00e9limit\u00e9es par des crochets, on utilise des accolades pour les dictionnaires. 1 mon_dictionnaire = { \"voiture\" : \"v\u00e9hicule \u00e0 quatre roues\" , \"v\u00e9lo\" : \"v\u00e9hicule \u00e0 deux roues\" } Un \u00e9l\u00e9ment a \u00e9t\u00e9 d\u00e9fini ci-dessus dans le dictionnaire en pr\u00e9cisant une cl\u00e9 au moyen d\u2019une cha\u00eene de caract\u00e8res suivie de : puis de la valeur associ\u00e9e cl\u00e9: valeur On acc\u00e8de \u00e0 une valeur du dictionnaire en utilisant la cl\u00e9 entour\u00e9e par des crochets avec la syntaxe suivante : 1 2 mon_dictionnaire [ \"voiture\" ] # ->'v\u00e9hicule \u00e0 quatre roues' Exercices # Exercice 1 : Sur le r\u00e9seau social TipTop, on s\u2019int\u00e9resse au nombre de \u00ab like \u00bb des abonn\u00e9s. Les donn\u00e9es sont stock\u00e9es dans des dictionnaires o\u00f9 les cl\u00e9s sont les pseudos et les valeurs correspondantes sont les nombres de \u00ab like \u00bb comme ci-dessous : {'Bob': 102, 'Ada': 201, 'Alice': 103, 'Tim': 50} \u00c9crire une fonction max_dico qui : Prend en param\u00e8tre un dictionnaire dico non vide dont les cl\u00e9s sont des cha\u00eenes de caract\u00e8res et les valeurs associ\u00e9es sont des entiers ; Renvoie un tuple dont : La premi\u00e8re valeur est la cl\u00e9 du dictionnaire associ\u00e9e \u00e0 la valeur maximale ; La seconde valeur est la premi\u00e8re valeur maximale pr\u00e9sente dans le dictionnaire. Exemples : 1 2 3 4 >>> max_dico ({ 'Bob' : 102 , 'Ada' : 201 , 'Alice' : 103 , 'Tim' : 50 }) ( 'Ada' , 201 ) >>> max_dico ({ 'Alan' : 222 , 'Ada' : 201 , 'Eve' : 220 , 'Tim' : 50 }) ( 'Alan' , 222 ) Bibliographie # Site de Gilles Lassus Side de David Roche e-nsi : : exercices pratiques Zone NSI","title":"Rappels"},{"location":"Premiere/cours_juin_1NSI/#remise-a-niveau-juin-2023-support-de-travail","text":"","title":"Remise \u00e0 niveau : juin 2023 (Support de travail)"},{"location":"Premiere/cours_juin_1NSI/#les-structures-de-bases-en-python","text":"","title":"Les structures de bases en Python"},{"location":"Premiere/cours_juin_1NSI/#if-else","text":"","title":"If else"},{"location":"Premiere/cours_juin_1NSI/#structure","text":"1 2 3 4 5 6 d\u00e9but du programme if condition : Bloc1 else : Bloc2 fin du programme","title":"structure"},{"location":"Premiere/cours_juin_1NSI/#operateur-de-comparaison","text":"Op\u00e9rateur Signification litt\u00e9rale < strictement inf\u00e9rieur \u00e0 > strictement sup\u00e9rieur \u00e0 <= inf\u00e9rieur ou \u00e9gal \u00e0 >= sup\u00e9rieur ou \u00e9gal \u00e0 == \u00e9gal != diff\u00e9rent de Op\u00e9rateur R\u00f4le a and b Vraie si a et b sont vraie a or b vraie si a ou b (ou les deux) sont vraies not(a) si a est vraie, not(a) est fausse et inversement Remarque : une condition peut aussi \u00eatre accol\u00e9e \u00e0 un return dans une fonction. En voici un exemple : fonction est_pair ( a : int ) -> bool : return a % 2 == 0","title":"op\u00e9rateur de comparaison"},{"location":"Premiere/cours_juin_1NSI/#la-boucle-while","text":"","title":"La boucle while"},{"location":"Premiere/cours_juin_1NSI/#structure-et-fonctionement","text":"On l'utilise lorsque l'on ne sait a priori pas combien de boucles vont \u00eatre effectu\u00e9es. On l'utilise \u00e9galement lorsque l'on veut r\u00e9aliser des incr\u00e9mentations avec un pas qui ne soit pas entier, par exemple lors d'un trac\u00e9 de courbe. La boucle \u00ab tant que \u00bb ex\u00e9cute le corps de boucle (instructions indent\u00e9es) tant qu\u2019une condition \u00e9valu\u00e9e dans le test de poursuite est vraie. D\u00e8s que la condition devient fausse, elle passe aux instructions suivantes. Syntaxe : avec une variable compteur qui va nous servir \u00e0 compter le nombre de boucle. compteur = indice_debut # initialisation de compteur nbre_boucle = indice_fin while compteur < nbre_boucle : # tant que la condition est v\u00e9rifi\u00e9e bloc_instruction compteur += pas # modification de compteur","title":"Structure et fonctionement"},{"location":"Premiere/cours_juin_1NSI/#trace","text":"1 2 3 4 5 n = 4 r = 0 while r * r <= n : r = r + 1 r = r - 1 N\u00b0 ligne n r Commentaires 1 4 n \\(\\leftarrow\\) 4 2 4 0 r \\(\\leftarrow\\) 0 3 4 0 r*r <= n ? oui, on ex\u00e9cute la ligne 4 4 4 1 r+1 = 0+1 = 1 r \\(\\leftarrow\\) 1 3 4 1 r*r <= n ? oui, on ex\u00e9cute la ligne 4 4 4 2 r+1 = 1+1 = 2 r \\(\\leftarrow\\) 2 3 4 2 r*r <= n ? oui, on ex\u00e9cute la ligne 4 4 4 3 r+1 = 2+1 = 3 r \\(\\leftarrow\\) 2 3 4 3 r*r <= n ? non, on ex\u00e9cute la ligne 5 5 4 2 r-1 = 3 - 1 = 2 r \\(\\leftarrow\\) 2","title":"Trace"},{"location":"Premiere/cours_juin_1NSI/#la-boucle-for","text":"La boucle for permet d\u2019effectuer un nombre de fois bien d\u00e9termin\u00e9 le corps de boucle (s\u00e9quence d'instructions). Elle s'utilise g\u00e9n\u00e9ralement avec la fonction range qui permet de g\u00e9n\u00e9rer une s\u00e9quence de nombres entiers allant de 0 \u00e0 n exclu. Syntaxe : 1 2 for i in range ( indice_depart , indice_fin , pas ): bloc_instruction","title":"La boucle for"},{"location":"Premiere/cours_juin_1NSI/#les-fonctions","text":"Pour d\u00e9finir un fonction nomm\u00e9e fonction qui prend deux nombres en argument a et b et qui retourne la variable c, on \u00e9crit: 1 2 3 4 5 6 def fonction ( a : type_a , b : type_b ) -> type_c : \"\"\" docstring \"\"\" corps de la fonction return c","title":"Les fonctions"},{"location":"Premiere/cours_juin_1NSI/#exercices","text":"Exercice 1: \u00c9crire un programme qui prend comme argument le rayon(int) et la hauteur(int) du c\u00f4ne et qui calcule et retourne le volume du c\u00f4ne droit. Exercice 2: Faire une fonction qui demande un nombre et qui affiche sa racine carr\u00e9e et son carr\u00e9. Exercice 3 : Faire la trace d\u2019ex\u00e9cution du programme suivant et expliquer ce que fait le programme. Proposer ensuite une mani\u00e8re plus simple d\u2019\u00e9crire la condition de la boucle while, faire \u00e0 nouveau la trace pour v\u00e9rifier que l\u2019on parvient au m\u00eame r\u00e9sultat 1 2 3 4 5 6 7 8 9 a = 24 b = 6 q = 0 while (( a - b ) > 0 or ( b - a ) == 0 ): a = a - b q = q + 1 r = a ; print ( q ) print ( r ) Exercice 4 : Effectuer la trace du programme suivant : 1 2 3 4 5 def fact ( n ): x = 1 for i in range ( 2 , n + 1 ): x = i * x return x Exercice 5: L\u2019\u00abASCII Art\u00bb consiste \u00e0 utiliser les caract\u00e8res alphanum\u00e9riques du code ASCII pour produire des images. Nous allons commencer par dessiner un carr\u00e9 \u00e0 l\u2019aide de la lettre X. \u00c9crire une fonction qui affiche le carr\u00e9 (ci-dessous en taille 8) et qui prend en param\u00e8tre la longueur du c\u00f4t\u00e9. Exercice 6 : A l'aide de la biblioth\u00e8que Turtle, \u00e9crire : une fonction qui r\u00e9alise une carr\u00e9 ; une fonction qui r\u00e9alise un triangle ; une fonction qui r\u00e9alise une maison. Exercice 7 : Un ordinateur manipule des nombres \u00e9crits en binaire : uniquement avec les chiffres \u00ab0\u00bb et \u00ab1\u00bb. Par exemple le nombre 26 s'\u00e9crit 11010 en binaire. Chaque \u00ab0\u00bb et \u00ab1\u00bb d'une \u00e9criture binaire est appel\u00e9 bit. Ainsi, le nombre s'\u00e9crit en binaire sur \\(n\\) bits. Pour savoir combien de bits sont n\u00e9cessaires pour \u00e9crire en binaire un nombre entier strictement positif on compte le nombre de divisions euclidiennes par n\u00e9cessaires pour obtenir un quotient nul. En partant de 26, on a : \\(26 = 2 \\times 13 + 0\\) \\(13 = 2 \\times 6 + 1\\) \\(6 = 2 \\times 3 + 0\\) \\(3 = 2 \\times 1 + 1\\) \\(1 = 2 \\times 0 + 1\\) Comme on peut le voir, 5 divisions euclidiennes ont \u00e9t\u00e9 n\u00e9cessaires pour passer de 26 \u00e0 0 : 26 s'\u00e9crit donc sur 5 bits en binaire. On rappelle que l'op\u00e9rateur // permet d'obtenir le quotient de deux nombres : 13 // 2 est \u00e9valu\u00e9 \u00e0 6. \u00c9crire la fonction nb_bits qui prend en argument un nombre entier strictement positif et renvoie le nombre de bits n\u00e9cessaires \u00e0 son \u00e9criture en binaire. Exercice 8 : Les ann\u00e9es bissextiles comportent 366 jours. Contrairement \u00e0 ce que l'on pense couramment, elles ne se rencontrent pas exactement tous les 4 ans ! En effet : une ann\u00e9e non divisible par 4 n'est pas bissextile ; parmi les ann\u00e9es divisibles par 4 : les ann\u00e9es qui ne sont pas divisibles par 100 sont bissextiles ; parmi les ann\u00e9es divisibles par 100 : les ann\u00e9es qui ne sont pas divisibles par 400 ne sont pas bissextiles, les autres sont bissextiles. Par exemple : 2022 n'est pas divisible par 4 : elle n'est pas bissextile ; 2020 est divisible par 4, mais pas par 100 : elle est bissextile ; 2100 est divisible par 4, par 100, mais pas par 400 : elle n'est pas bissextile ; 2400 est divisible par 4, par 100 et par 400 : elle est bissextile. \u00c9crire la fonction est_bissextile renvoyant True si l'ann\u00e9e pass\u00e9e en argument est bissextile, False dans le cas contraire. Exercice 9 : \u00c9crire la fonction facto qui donne la factorielle d'un nombre \\(n\\) . On rappelle que factorielle de 5 s'\u00e9crit : \\(5! = 5 \\times 4 \\times 3 \\times 2 \\times 1\\) . Exercice 10 : \u00c9crire la fonction somme qui retourne la somme des \\(n\\) premiers entiers. Exemple : somme(5) = 5 + 4 + 3 + 2 + 1 Exercice 11 : Programmer la fonction multiplication , prenant en param\u00e8tres deux nombres entiers \\(n1\\) et \\(n2\\) , et qui renvoie le produit de ces deux nombres. Les seules op\u00e9rations autoris\u00e9es sont l\u2019addition et la soustraction. Exemples : >>> multiplication ( 3 , 5 ) 15 >>> multiplication ( - 4 , - 8 ) 32 >>> multiplication ( - 2 , 6 ) - 12 >>> multiplication ( - 2 , 0 ) 0","title":"Exercices"},{"location":"Premiere/cours_juin_1NSI/#les-listes","text":"","title":"Les listes"},{"location":"Premiere/cours_juin_1NSI/#definitions","text":"Une liste est une structure de donn\u00e9es qui contient une s\u00e9rie de valeurs. Python autorise la construction de liste contenant des valeurs de types diff\u00e9rents (par exemple entier et cha\u00eene de caract\u00e8res), ce qui leur conf\u00e8re une grande flexibilit\u00e9. Une liste est d\u00e9clar\u00e9e par une s\u00e9rie de valeurs (n'oubliez pas les guillemets, simples ou doubles, s'il s'agit de cha\u00eenes de caract\u00e8res) s\u00e9par\u00e9es par des virgules, et le tout encadr\u00e9 par des crochets. En voici quelques exemples : >>> animaux = [ \"girafe\" , \"tigre\" , \"singe\" , \"souris\" ] >>> tailles = [ 5 , 2.5 , 1.75 , 0.15 ] >>> mixte = [ \"girafe\" , 5 , \"souris\" , 0.15 ] >>> animaux [ 'girafe' , 'tigre' , 'singe' , 'souris' ] >>> tailles [ 5 , 2.5 , 1.75 , 0.15 ] >>> mixte [ 'girafe' , 5 , 'souris' , 0.15 ] Lorsque l'on affiche une liste, Python la restitue telle qu'elle a \u00e9t\u00e9 saisie.","title":"D\u00e9finitions"},{"location":"Premiere/cours_juin_1NSI/#les-instructions-utiles","text":"","title":"Les instructions utiles"},{"location":"Premiere/cours_juin_1NSI/#la-fonction-len","text":"L'instruction len() permet de conna\u00eetre la longueur d'une liste, c'est-\u00e0-dire le nombre d'\u00e9l\u00e9ments que contient la liste. Voici un exemple d'utilisation : 1 2 3 4 5 >>> animaux = [ \"girafe\" , \"tigre\" , \"singe\" , \"souris\" ] >>> len ( animaux ) 4 >>> len ([ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ]) 8","title":"La fonction len()"},{"location":"Premiere/cours_juin_1NSI/#la-methode-append","text":"La m\u00e9thode .append() ajoute un \u00e9l\u00e9ment \u00e0 la fin d'une liste : 1 2 3 4 >>> a = [ 1 , 2 , 3 ] >>> a . append ( 5 ) >>> a [ 1 , 2 , 3 , 5 ]","title":"La m\u00e9thode .append()"},{"location":"Premiere/cours_juin_1NSI/#la-methode-pop","text":"La m\u00e9thode .pop() en Python est une fonction qui permet de supprimer un \u00e9l\u00e9ment d'une liste et de renvoyer la valeur de l'\u00e9l\u00e9ment supprim\u00e9. Elle peut prendre un argument optionnel, qui est l'index de l'\u00e9l\u00e9ment \u00e0 supprimer. Si aucun index n'est sp\u00e9cifi\u00e9, la m\u00e9thode pop() supprimera et renverra le dernier \u00e9l\u00e9ment de la liste. 1 2 3 4 5 6 7 8 9 10 11 a = [ 1 , 2 , 3 , 4 , 5 ] element = a . pop () print ( a ) print ( element ) \"\"\" Cela imprimera: [1, 2, 3, 4] 5 \"\"\"","title":"La m\u00e9thode .pop()"},{"location":"Premiere/cours_juin_1NSI/#la-fonction-del","text":"L'instruction del supprime un \u00e9l\u00e9ment d'une liste \u00e0 un indice d\u00e9termin\u00e9 : 1 2 3 4 >>> a = [ 1 , 2 , 3 ] >>> del a [ 1 ] >>> a [ 1 , 3 ]","title":"La fonction del"},{"location":"Premiere/cours_juin_1NSI/#la-methode-remove","text":"La m\u00e9thode .remove() supprime un \u00e9l\u00e9ment d'une liste \u00e0 partir de sa valeur : 1 2 3 4 5 6 7 >>> a = [ 1 , 2 , 3 , 4 , 3 ] >>> a . remove ( 3 ) >>> a [ 1 , 2 , 4 , 3 ] >>> a . remove ( 3 ) >>> a [ 1 , 2 , 4 ]","title":"La m\u00e9thode remove()"},{"location":"Premiere/cours_juin_1NSI/#la-methode-reverse","text":"La m\u00e9thode .reverse() inverse une liste : 1 2 3 4 >>> a = [ 3 , 1 , 2 ] >>> a . reverse () >>> a [ 2 , 1 , 3 ]","title":"La m\u00e9thode .reverse()"},{"location":"Premiere/cours_juin_1NSI/#balayage-dune-liste","text":"","title":"Balayage d'une liste"},{"location":"Premiere/cours_juin_1NSI/#balayage-par-indice","text":"1 2 3 4 a = [ 3 , 1 , 2 ] for i in range ( len ( a )): print ( i ) # affichera 0,1,2 print ( a [ i ]) # affichera 3,1,2","title":"Balayage par indice"},{"location":"Premiere/cours_juin_1NSI/#balayage-par-element","text":"1 2 3 a = [ 3 , 1 , 2 ] for i in a : print ( i ) # affichera 3,1,2","title":"Balayage par \u00e9l\u00e9ment"},{"location":"Premiere/cours_juin_1NSI/#exercices_1","text":"Exercice 1 : \u00c9crire une fonction genereTab qui prend en argument 2 entiers et retourne un tableau de longueur \u00e9gale au 1 er argument et dont chaque \u00e9l\u00e9ment est un nombre entier al\u00e9atoire compris entre 0 et le 2 nd argument (inclus). Exercice 2 : \u00c9crire une fonction moyenne qui prend en argument une liste contenant les notes. La fonction retournera la moyenne des notes. Exercice 3 : \u00c9crire une fonction carre(n) qui renvoie le tableau des carr\u00e9s des nombres entiers compris entre 0 et n-1. Exercice 4 : \u00c9crire une fonction imagesf(deb,fin) qui renvoie le tableau des images des nombres entiers compris entre deb et fin par la fonction \\(f:x \\rightarrow 3x^2 - 2x + 1\\) Exercice 5 : Programmer la fonction derniere_occurrence , prenant en param\u00e8tre un tableau non vide d'entiers et un entier cible, et qui renvoie l'indice de la derni\u00e8re occurrence de cible. Si l'\u00e9l\u00e9ment n'est pas pr\u00e9sent, la fonction renvoie la longueur du tableau. Exercice 6 : \u00c9crire les fonctions suivants : Maximum : d\u00e9terminer le maximum dans un tableau ; Indice du minimum : d\u00e9terminer l'indice du minimum dans un tableau ; Premier minimum local : d\u00e9terminer l'indice du premier minimum dans un tableau ; Occurrences du minimum : d\u00e9terminer la valeur et les indices du minimum ; Valeur et indices du max : d\u00e9terminer la valeur et les indices du maximum.","title":"Exercices"},{"location":"Premiere/cours_juin_1NSI/#les-dictionnaires","text":"","title":"Les dictionnaires"},{"location":"Premiere/cours_juin_1NSI/#definition","text":"Comme on l\u2019a vu avec les listes \u00e0 partir des types de base (int, float, etc.) il est possible d\u2019\u00e9laborer de nouveaux types qu\u2019on appelle des types construits. Un nouvel exemple de type construit est le dictionnaire. Les \u00e9l\u00e9ments d\u2019une liste ou d\u2019un tuple sont ordonn\u00e9s et on acc\u00e9de \u00e0 un \u00e9l\u00e9ment gr\u00e2ce \u00e0 sa position en utilisant un num\u00e9ro qu\u2019on appelle l\u2019indice de l\u2019\u00e9l\u00e9ment. Un dictionnaire en Python va aussi permettre de rassembler des \u00e9l\u00e9ments mais ceux-ci seront identifi\u00e9s par une cl\u00e9. On peut faire l\u2019analogie avec un dictionnaire de fran\u00e7ais o\u00f9 on acc\u00e8de \u00e0 une d\u00e9finition avec un mot. Contrairement aux listes qui sont d\u00e9limit\u00e9es par des crochets, on utilise des accolades pour les dictionnaires. 1 mon_dictionnaire = { \"voiture\" : \"v\u00e9hicule \u00e0 quatre roues\" , \"v\u00e9lo\" : \"v\u00e9hicule \u00e0 deux roues\" } Un \u00e9l\u00e9ment a \u00e9t\u00e9 d\u00e9fini ci-dessus dans le dictionnaire en pr\u00e9cisant une cl\u00e9 au moyen d\u2019une cha\u00eene de caract\u00e8res suivie de : puis de la valeur associ\u00e9e cl\u00e9: valeur On acc\u00e8de \u00e0 une valeur du dictionnaire en utilisant la cl\u00e9 entour\u00e9e par des crochets avec la syntaxe suivante : 1 2 mon_dictionnaire [ \"voiture\" ] # ->'v\u00e9hicule \u00e0 quatre roues'","title":"D\u00e9finition"},{"location":"Premiere/cours_juin_1NSI/#exercices_2","text":"Exercice 1 : Sur le r\u00e9seau social TipTop, on s\u2019int\u00e9resse au nombre de \u00ab like \u00bb des abonn\u00e9s. Les donn\u00e9es sont stock\u00e9es dans des dictionnaires o\u00f9 les cl\u00e9s sont les pseudos et les valeurs correspondantes sont les nombres de \u00ab like \u00bb comme ci-dessous : {'Bob': 102, 'Ada': 201, 'Alice': 103, 'Tim': 50} \u00c9crire une fonction max_dico qui : Prend en param\u00e8tre un dictionnaire dico non vide dont les cl\u00e9s sont des cha\u00eenes de caract\u00e8res et les valeurs associ\u00e9es sont des entiers ; Renvoie un tuple dont : La premi\u00e8re valeur est la cl\u00e9 du dictionnaire associ\u00e9e \u00e0 la valeur maximale ; La seconde valeur est la premi\u00e8re valeur maximale pr\u00e9sente dans le dictionnaire. Exemples : 1 2 3 4 >>> max_dico ({ 'Bob' : 102 , 'Ada' : 201 , 'Alice' : 103 , 'Tim' : 50 }) ( 'Ada' , 201 ) >>> max_dico ({ 'Alan' : 222 , 'Ada' : 201 , 'Eve' : 220 , 'Tim' : 50 }) ( 'Alan' , 222 )","title":"Exercices"},{"location":"Premiere/cours_juin_1NSI/#bibliographie","text":"Site de Gilles Lassus Side de David Roche e-nsi : : exercices pratiques Zone NSI","title":"Bibliographie"},{"location":"Premiere/Algorithmique/gloutons/","text":"Algorithmes gloutons # Le probl\u00e8me du voyageur # Probl\u00e9matique # Un voyageur se fixe un certain nombre de villes \u00e0 visiter imp\u00e9rativement : Paris, Reims, Troyes, Nancy, Metz. Il devra \u00e9laborer un trajet en partant d'une des villes de la liste (ville de d\u00e9part), devra organiser son trajet pour visiter une seule fois toutes les autres villes de la liste et revenir en fin de parcours \u00e0 la ville de d\u00e9part. Pour des raisons budg\u00e9taires, il souhaite optimiser la longueur de son trajet A l'aide du site https://geoportail.gouv.fr , il d\u00e9termine les distances minimales entres ces diff\u00e9rentes villes : distance Nancy Metz Paris Reims Troyes Nancy 0 55 303 188 183 Metz 55 0 306 176 203 Paris 303 306 0 142 153 Reims 188 176 142 0 123 Troyes 183 203 153 123 0 Le nombre de possibilit\u00e9s # Exercice 1 : A compl\u00e9ter : Pour la ville de d\u00e9part, le voyageur a __ choix possibles ; Pour le choix de la \\(2^{nde}\\) ville, il lui reste __ possibilit\u00e9s ; Pour le choix de la \\(3^{\u00e8me}\\) ville, il lui reste __ possibilit\u00e9s ; Pour le choix de la \\(4^{\u00e8me}\\) ville, il lui reste __ possibilit\u00e9s ; Pour le choix de la \\(5^{\u00e8me}\\) ville, il lui reste __ possibilit\u00e9s ; R\u00e9ponse Pour la ville de d\u00e9part, le voyageur a 5 choix possibles ; Pour le choix de la \\(2^{nde}\\) ville, il lui reste 4 possibilit\u00e9s ; Pour le choix de la \\(3^{\u00e8me}\\) ville, il lui reste 3 possibilit\u00e9s ; Pour le choix de la \\(4^{\u00e8me}\\) ville, il lui reste 2 possibilit\u00e9s ; Pour le choix de la \\(5^{\u00e8me}\\) ville, il lui reste 1 possibilit\u00e9. Exercice 2 : Au final, d\u00e9terminer le nombre de trajets possibles pour 5 villes puis pour \\(n\\) villes. R\u00e9ponse Pour 5 villes, on aura donc : 5\u00d74\u00d73\u00d72\u00d71 = 120 possibilit\u00e9s math\u00e9matiquement cela correspond \u00e0 la factorielle 5, not\u00e9e 5 ! Pour n villes, on aura n ! = n\u00d7(n-1) \u00d7(n-2) \u00d7\u2026 3 \u00d72 \u00d71 Exercice 3 : Parmi les diff\u00e9rents trajets possibles, y en aura-t-il qui auront syst\u00e9matiquement la m\u00eame distance ? En d\u00e9duire le nombre de distances possibles pour n villes. Calculer ce nombre pour 10 villes, 20 villes... R\u00e9ponse Oui le trajet dans un sens puis le m\u00eame trajet dans le sens contraire auront la m\u00eame distance. Cela divise donc le nombre de distances possibles par 2, \u00e0 savoir \ud835\udc5b!/2. Pour 10 villes : 10!/ 2 = 1 814 400 possibilit\u00e9s et pour 20 villes : 20 ! / 2 = \\(1,2.10^{18}\\) possibilit\u00e9s N\u00e9cessit\u00e9 d'algorithmes gloutons # Les algorithmiciens qui se sont pench\u00e9s sur ce probl\u00e8me ont de solides raisons de penser qu'il n'existe aucun algorithme qui donnera une solution optimale en un temps optimal lorsque \\(n\\) est grand. Cependant, certains algorithmes, dit gloutons, sont capables de donner rapidement une solution acceptable. R\u00e9solution approch\u00e9e : L'id\u00e9e est de d\u00e9composer le probl\u00e8me global dont la solution optimale est quasiment impossible \u00e0 d\u00e9terminer en raison de son co\u00fbt machine par une succession d'\u00e9tapes durant lesquelles ont fera un choix local et optimal (rapide en co\u00fbt machine). Sur notre exemple, \u00e0 chaque \u00e9tape, on va se poser la question suivante : Quelle est la ville la plus proche ? Le meilleur choix est facile \u00e0 d\u00e9terminer et rapide. Puis on proc\u00e8de ainsi jusqu'\u00e0 avoir parcouru toutes les villes. La question est de savoir si en faisant une s\u00e9rie de choix localement optimaux, on fini par aboutir \u00e0 une solution optimale. C'est parfois le cas mais pas toujours ! Algorithme du voyageur # Exercice 4 : Dans un premier temps, cr\u00e9er une liste (de chaines de caract\u00e8res) des villes \u00e0 visiter : 1 villes = [ \"Nancy\" , \"Metz\" , \"Paris\" , \"Reims\" , \"Troyes\" ] Exercice 5 : Cr\u00e9er \u00e9galement le tableau des distances ci-dessous (liste de listes d'entiers) : 1 2 3 4 5 distance = [ [ 0 , 55 , 303 , 188 , 183 ], [ 55 , 0 , 306 , 176 , 203 ], [ 303 , 306 , 0 , 142 , 153 ], [ 188 , 176 , 142 , 0 , 123 ], [ 183 , 203 , 153 , 123 , 0 ] ] Exercice 6 : Lancer le programme puis depuis la console python \u00e9crire l'instruction qui permet d'afficher \u00e0 partir des 2 listes ci-dessus : \"Paris\" , instruction : \"Nancy\" , instruction : La distance Paris-Nancy, instruction : La distance Paris-Metz, instruction : R\u00e9ponse Paris\" instruction : villes[2] \"Nancy\" instruction : villes[3] La distance Paris-Nancy instruction : distance[0][2] ou distance[2][0] La distance Paris-Metz instruction : distance[1][2] ou distance[2][1] Exercice 7 : Existe-t-il un lien entre la liste villes et la liste de listes distance (dans la liste villes, peut on inverser 2 \u00e9l\u00e9ments sans retoucher la liste distance ?) R\u00e9ponse Oui, les 2 listes sont intimement li\u00e9es. Si l\u2019on en modifie une, il faut modifier l\u2019autre. Exercice 8 : Cr\u00e9er un tableau de bool\u00e9en nomm\u00e9 visitees qui indiquera si la ville a \u00e9t\u00e9 visit\u00e9e (True) ou non (False). Au d\u00e9part, comment faut-il initialiser les \u00e9l\u00e9ments de la liste ? R\u00e9ponse Au d\u00e9part, aucune ville n\u2019a \u00e9t\u00e9 visit\u00e9e, on rempli donc le tableau \\(n\\) fois avec False . 1 2 n = len ( villes ) visitees = [ False ] * n Exercice 9 : \u00c9crire une fonction nomm\u00e9e plusProche, qui prend en arguments l'indice de la ville, la liste visitees et le tableau distance et qui va retourner l'indice de la ville la plus proche. Attention \u00e0 bien initialiser le tableau visitees pour tester la fonction, la ville choisie est suppos\u00e9e avoir \u00e9t\u00e9 visit\u00e9e. On utilisera une variable locale nomm\u00e9e pp, initialement initialis\u00e9e avec la valeur None, et \u00e0 qui l'on assignera ensuite l'indice de la ville la plus proche. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 villes = [ \"Nancy\" , \"Metz\" , \"Paris\" , \"Reims\" , \"Troyes\" ] distance = [ [ 0 , 55 , 303 , 188 , 183 ], [ 55 , 0 , 306 , 176 , 203 ], [ 303 , 306 , 0 , 142 , 153 ], [ 188 , 176 , 142 , 0 , 123 ], [ 183 , 203 , 153 , 123 , 0 ] ] def plus_proche ( ville : int , distance : list , visitees : list ) -> int : pp = None for i in range ( len ( visitees )) : if visitees [ i ] == False : if pp == None or distance [ ville ][ i ] < distance [ ville ][ pp ] : pp = i return pp # programme principal visitees = [ False ] * len ( villes ) # recherche de la ville la plus proche de Paris (indice 2) visitees [ 2 ] = True # Paris est consid\u00e9r\u00e9e comme visit\u00e9e print ( plus_proche ( 2 , distance , visitees )) Exercice 10 : \u00c9crire maintenant une fonction nomm\u00e9e voyage, qui prend en arguments l'indice de la ville de d\u00e9part, le tableau distance et la liste villes), affiche les distances parcourues entre chaque ville et retourne la distance totale parcourue. On utilisera 2 variables locales courante et suivante \u00e0 qui l'on assignera l'indice de la ville en cours de visite et de la ville suivante. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 villes = [ \"Nancy\" , \"Metz\" , \"Paris\" , \"Reims\" , \"Troyes\" ] distance = [ [ 0 , 55 , 303 , 188 , 183 ], [ 55 , 0 , 306 , 176 , 203 ], [ 303 , 306 , 0 , 142 , 153 ], [ 188 , 176 , 142 , 0 , 123 ], [ 183 , 203 , 153 , 123 , 0 ] ] def plus_proche ( ville : int , distance : list , visitees : list ) -> int : pp = None for i in range ( len ( visitees )) : if visitees [ i ] == False : if pp == None or distance [ ville ][ i ] < distance [ ville ][ pp ] : pp = i return pp def voyage ( depart , distance , villes ) : n = len ( villes ) distanceParcourue = 0 visitees = [ False ] * n courante = depart for i in range ( n - 1 ): visitees [ courante ] = True suivante = plusProche ( courante , distance , visitees ) print ( villes [ courante ], \" - \" , villes [ suivante ], \" : \" , distance [ courante ][ suivante ], \" km\" ) distanceParcourue += distance [ courante ][ suivante ] courante = suivante print ( villes [ courante ], \" - \" , villes [ depart ], \" : \" , distance [ courante ][ depart ], \"km\" ) distanceParcourue += distance [ courante ][ depart ] return distanceParcourue # programme principal print ( \"distance totale parcourue = \" , voyage ( 0 , distance , villes ), \" km\" ) Exercice 11 : Tester maintenant la globalit\u00e9 du programme en prenant comme ville de d\u00e9part Nancy. Le tableau ci-dessous donne l'ensemble des trajets avec comme ville de d\u00e9part Nancy. V\u00e9rifier que votre algorithme glouton n'a pas donn\u00e9 la solution optimale mais malgr\u00e9 toute une solution tr\u00e8s satisfaisante. Le probl\u00e8me du sac \u00e0 dos # Probl\u00e8matique # Un voleur souhaite emporter des objets d'une valeur totale maximale dans son sac \u00e0 dos qui ne peut supporter plus d'une certaine masse, \u00e0 d\u00e9finir. Objet Valeur (\u20ac) Masse (kg) Objet 1 500 15 Objet 2 320 2 Objet 3 20 5 Objet 4 500 7 Objet 5 180 6 Objet 6 80 8 Strat\u00e9gies gloutonnes # Exercice 11 : Proposer 3 strat\u00e9gies gloutonnes pour r\u00e9soudre cette probl\u00e9matique. R\u00e9ponse Soit on s\u00e9lectionne les objets du plus l\u00e9ger au plus lourd (on aura alors un maximum d\u2019objets) sans d\u00e9passer la masse maximale. Soit on s\u00e9lectionne les objets de celui de plus grande valeur \u00e0 celui de plus faible valeur sans d\u00e9passer la masse maximale. Soit on calcul le rapport valeur/masse et on s\u00e9lectionne les objets de rapport le plus grand au rapport le plus petit sans d\u00e9passer la masse maximale. La strat\u00e9gie la plus int\u00e9ressante est sans doute la derni\u00e8re. Algorithme glouton # Suivant la strat\u00e9gie gloutonne adopt\u00e9e, il sera sans doute n\u00e9cessaire de rajouter une colonne au tableau et de trier le tableau suivant un ordre croissant ou d\u00e9croissant d'une des colonnes. Afin de trier le tableau, on utilisera la fonction sorted() d\u00e9j\u00e0 utilis\u00e9e dans le chapitre pr\u00e9c\u00e9dent. Exercice 12 : \u00c9crire une fonction nomm\u00e9e sac_dos_glouton qui prend en argument le tableau d'objets, la masse maximale support\u00e9e par le sac \u00e0 dos, l'indice de la colonne \u00e0 trier, un bool\u00e9en qui prend la valeur True pour un tri d\u00e9croissant sinon la valeur False pour un tri croissant, et qui retourne un tableau dont le 1 \u00e9l\u00e9ments et le tableau des objets choisis, le 2nd \u00e9l\u00e9ment la masse totale des objets emport\u00e9s et le 3\u00e8me \u00e9l\u00e9ment la valeur totale des objets emport\u00e9s. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 def sac_dos_glouton ( objets , masse_max , indice , boolean ) : objets = sorted ( objets , key = lambda colonne : colonne [ indice ], reverse = boolean ) valeur_totale = 0 masse_totale = 0 reponse = [] i = 0 while i < len ( objets ) and masse_totale < masse_max : nom , valeur , masse , rapport = objets [ i ] if masse_totale + masse <= masse_max : reponse . append ( nom ) masse_totale += masse valeur_totale += valeur i += 1 return reponse , masse_totale , valeur_totale #PROGRAMME PRINCIPAL objets = [ [ \"objet1\" , 500 , 15 ], [ \"objet2\" , 320 , 2 ], [ \"objet3\" , 20 , 5 ], [ \"objet4\" , 500 , 7 ], [ \"objet5\" , 180 , 6 ], [ \"objet6\" , 80 , 8 ] ] for i in objets : i . append ( i [ 1 ] / i [ 2 ]) print ( \"strat\u00e9gie 1\" , SacDosGlouton ( objets , 15 , 2 , False )) print ( \"strat\u00e9gie 2\" , SacDosGlouton ( objets , 15 , 1 , True )) print ( \"strat\u00e9gie 3\" , SacDosGlouton ( objets , 15 , 3 , True )) Exercice 13 : Appliquer vos diff\u00e9rentes strat\u00e9gies et v\u00e9rifier la coh\u00e9rence des r\u00e9ponses. R\u00e9ponse 1 2 3 strat\u00e9gie 1 ([ 'objet2' , 'objet3' , 'objet5' ], 13 , 520 ) strat\u00e9gie 2 ([ 'objet1' ], 15 , 500 ) strat\u00e9gie 3 ([ 'objet2' , 'objet4' , 'objet5' ], 15 , 1000 ) Probl\u00e8me du rendu de monnaie # Algorithme glouton # Consid\u00e9rons le probl\u00e8me d'un commer\u00e7ant devant rendre de la monnaie \u00e0 l'un de ses clients. Il souhaite le faire en utilisant le moins de pi\u00e8ces et de billets possibles. On suppose que l'on manipule les pi\u00e8ces et coupures habituelles des euros (1\u20ac, 2\u20ac, 5\u20ac, 10 \u20ac, 20\u20ac, 50\u20ac, 100\u20ac et 200\u20ac, oublions les centimes) et que le commer\u00e7ant dispose d'une r\u00e9serve suffisamment importante de chaque esp\u00e8ce. Exercice 14 : Donner les combinaisons possibles de rendu de monnaie sur 9 \u20ac. \u00c9tablir un tableau. R\u00e9ponse Exercice 15 : A l'aide du tableau pr\u00e9c\u00e9dent, proposer une strat\u00e9gie gloutonne pour rendre la monnaie. R\u00e9ponse On rend les pi\u00e8ces en commen\u00e7ant syst\u00e9matiquement par les plus grosse. Exercice 16 : \u00c9crire une fonction qui prend en argument la somme \u00e0 rendre (nombre entier) et retourne le tableau des pi\u00e8ces ou coupures. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 def rendu_monnaie ( somme ) : euros = [ 200 , 100 , 50 , 20 , 10 , 5 , 2 , 1 ] rendu = [] i = 0 while ( somme > 0 and i < 8 ) : if ( somme - euros [ i ]) >= 0 : somme -= euros [ i ] rendu . append ( euros [ i ]) else : i += 1 return rendu print ( rendu_monnaie ( 9 )) Syst\u00e8mes canoniques # On appelle syst\u00e8me canonique un syst\u00e8me o\u00f9 un algorithme glouton donne toujours le rendu optimal. Exercice 17 : En observant les r\u00e9ponses fournies par votre algorithme, pensez-vous que le syst\u00e8me en euros soit canonique ? R\u00e9ponse Il semblerait que oui. Montrons de mani\u00e8re th\u00e9orique que le syst\u00e8me euro est canonique : Exercice 18 : Montrer que dans un syst\u00e8me de rendu optimal : Les pi\u00e8ces ou coupures de 1, 5, 10, 50 et 100 \u20ac ne peuvent \u00eatre utilis\u00e9es qu'une seule fois ; Les pi\u00e8ces ou coupures de 2 et 20 \u20ac ne peuvent \u00eatre chacun utilis\u00e9s que deux fois ; On ne peut rendre \u00e0 la fois 2 pi\u00e8ces de 2 \u20ac et 1 pi\u00e8ce de 1 \u20ac (ou 2 billets de 20 \u20ac et 1 billet de 10 \u20ac) ; La somme totale des billets ou coupures de moins de 200 \u20ac ne peut d\u00e9passer la somme de 199 \u20ac (au-del\u00e0 de cette somme, un billet de 200 \u20ac sera alors choisi par l'algorithme glouton) ; La somme totale des billets ou coupures de moins de 100 \u20ac ne peuvent d\u00e9passer la somme de 99 \u20ac (au-del\u00e0 de cette somme, un billet de 100 \u20ac sera alors choisi par l'algorithme glouton) ; On peut poursuivre ce raisonnement avec les autres coupures\u2026 R\u00e9ponse Les pi\u00e8ces ou coupures de 1, 5, 10, 50 et 100 \u20ac ne peuvent \u00eatre utilis\u00e9es qu'une seule fois ; Si 2 pi\u00e8ces de 1\u20ac, alors on en utilise une de 2\u20ac Si 2 pi\u00e8ces de 5\u20ac, alors on en utilise un billet de 10\u20ac Si 2 billets de 10\u20ac, alors on en utilise un de 20\u20ac Si 2 billets de 50\u20ac, alors on en utilise un de 100\u20ac Si 2 billets de 100\u20ac, alors on en utilise un de 200\u20ac Les pi\u00e8ces ou coupures de 2 et 20 \u20ac ne peuvent \u00eatre chacun utilis\u00e9s que deux fois ; Si 3 pi\u00e8ces de 2\u20ac, alors on utilise 1 pi\u00e8ces de 1\u20ac et 1 billet de 5\u20ac Si 3 billets de 20\u20ac, alors on utilise 1 de 10\u20ac et 1 de 50\u20ac On ne peut rendre \u00e0 la fois 2 pi\u00e8ces de 2 \u20ac et 1 pi\u00e8ce de 1 \u20ac (ou 2 billets de 20 \u20ac et 1 billet de 10 \u20ac) ; La somme totale des billets ou coupures de moins de 200 \u20ac ne peut d\u00e9passer la somme de 199 \u20ac (au-del\u00e0 de cette somme, un billet de 200 \u20ac sera alors choisi par l'algorithme glouton) ; La somme totale des billets ou coupures de moins de 100 \u20ac ne peuvent d\u00e9passer la somme de 99 \u20ac (au-del\u00e0 de cette somme, un billet de 100 \u20ac sera alors choisi par l'algorithme glouton) ; On peut poursuivre ce raisonnement avec les autres coupures\u2026 Exercice 19 : Appliquer votre algorithme glouton \u00e0 un syst\u00e8me mon\u00e9taire dans lequel les pi\u00e8ces ou coupures auraient les valeurs suivantes : 1, 6, 10 et 22 \u20ac. Montrer sur un exemple que le rendu de monnaie n'est pas optimal et donc que ce syst\u00e8me n'est pas canonique. R\u00e9ponse Sur 18\u20ac l\u2019algorithme va rendre 10\u20ac, 6\u20ac et 2 \u00d7 1\u20ac (4 pi\u00e8ces). Or il y a plus simple : 3 pi\u00e8ces de 6\u20ac Sur 12\u20ac l\u2019algorithme va rendre 10\u20ac, 2 \u00d7 1\u20ac (3 pi\u00e8ces). Or il y a plus simple : 2 pi\u00e8ces de 6\u20ac","title":"Algorithmes gloutons"},{"location":"Premiere/Algorithmique/gloutons/#algorithmes-gloutons","text":"","title":"Algorithmes gloutons"},{"location":"Premiere/Algorithmique/gloutons/#le-probleme-du-voyageur","text":"","title":"Le probl\u00e8me du voyageur"},{"location":"Premiere/Algorithmique/gloutons/#problematique","text":"Un voyageur se fixe un certain nombre de villes \u00e0 visiter imp\u00e9rativement : Paris, Reims, Troyes, Nancy, Metz. Il devra \u00e9laborer un trajet en partant d'une des villes de la liste (ville de d\u00e9part), devra organiser son trajet pour visiter une seule fois toutes les autres villes de la liste et revenir en fin de parcours \u00e0 la ville de d\u00e9part. Pour des raisons budg\u00e9taires, il souhaite optimiser la longueur de son trajet A l'aide du site https://geoportail.gouv.fr , il d\u00e9termine les distances minimales entres ces diff\u00e9rentes villes : distance Nancy Metz Paris Reims Troyes Nancy 0 55 303 188 183 Metz 55 0 306 176 203 Paris 303 306 0 142 153 Reims 188 176 142 0 123 Troyes 183 203 153 123 0","title":"Probl\u00e9matique"},{"location":"Premiere/Algorithmique/gloutons/#le-nombre-de-possibilites","text":"Exercice 1 : A compl\u00e9ter : Pour la ville de d\u00e9part, le voyageur a __ choix possibles ; Pour le choix de la \\(2^{nde}\\) ville, il lui reste __ possibilit\u00e9s ; Pour le choix de la \\(3^{\u00e8me}\\) ville, il lui reste __ possibilit\u00e9s ; Pour le choix de la \\(4^{\u00e8me}\\) ville, il lui reste __ possibilit\u00e9s ; Pour le choix de la \\(5^{\u00e8me}\\) ville, il lui reste __ possibilit\u00e9s ; R\u00e9ponse Pour la ville de d\u00e9part, le voyageur a 5 choix possibles ; Pour le choix de la \\(2^{nde}\\) ville, il lui reste 4 possibilit\u00e9s ; Pour le choix de la \\(3^{\u00e8me}\\) ville, il lui reste 3 possibilit\u00e9s ; Pour le choix de la \\(4^{\u00e8me}\\) ville, il lui reste 2 possibilit\u00e9s ; Pour le choix de la \\(5^{\u00e8me}\\) ville, il lui reste 1 possibilit\u00e9. Exercice 2 : Au final, d\u00e9terminer le nombre de trajets possibles pour 5 villes puis pour \\(n\\) villes. R\u00e9ponse Pour 5 villes, on aura donc : 5\u00d74\u00d73\u00d72\u00d71 = 120 possibilit\u00e9s math\u00e9matiquement cela correspond \u00e0 la factorielle 5, not\u00e9e 5 ! Pour n villes, on aura n ! = n\u00d7(n-1) \u00d7(n-2) \u00d7\u2026 3 \u00d72 \u00d71 Exercice 3 : Parmi les diff\u00e9rents trajets possibles, y en aura-t-il qui auront syst\u00e9matiquement la m\u00eame distance ? En d\u00e9duire le nombre de distances possibles pour n villes. Calculer ce nombre pour 10 villes, 20 villes... R\u00e9ponse Oui le trajet dans un sens puis le m\u00eame trajet dans le sens contraire auront la m\u00eame distance. Cela divise donc le nombre de distances possibles par 2, \u00e0 savoir \ud835\udc5b!/2. Pour 10 villes : 10!/ 2 = 1 814 400 possibilit\u00e9s et pour 20 villes : 20 ! / 2 = \\(1,2.10^{18}\\) possibilit\u00e9s","title":"Le nombre de possibilit\u00e9s"},{"location":"Premiere/Algorithmique/gloutons/#necessite-dalgorithmes-gloutons","text":"Les algorithmiciens qui se sont pench\u00e9s sur ce probl\u00e8me ont de solides raisons de penser qu'il n'existe aucun algorithme qui donnera une solution optimale en un temps optimal lorsque \\(n\\) est grand. Cependant, certains algorithmes, dit gloutons, sont capables de donner rapidement une solution acceptable. R\u00e9solution approch\u00e9e : L'id\u00e9e est de d\u00e9composer le probl\u00e8me global dont la solution optimale est quasiment impossible \u00e0 d\u00e9terminer en raison de son co\u00fbt machine par une succession d'\u00e9tapes durant lesquelles ont fera un choix local et optimal (rapide en co\u00fbt machine). Sur notre exemple, \u00e0 chaque \u00e9tape, on va se poser la question suivante : Quelle est la ville la plus proche ? Le meilleur choix est facile \u00e0 d\u00e9terminer et rapide. Puis on proc\u00e8de ainsi jusqu'\u00e0 avoir parcouru toutes les villes. La question est de savoir si en faisant une s\u00e9rie de choix localement optimaux, on fini par aboutir \u00e0 une solution optimale. C'est parfois le cas mais pas toujours !","title":"N\u00e9cessit\u00e9 d'algorithmes gloutons"},{"location":"Premiere/Algorithmique/gloutons/#algorithme-du-voyageur","text":"Exercice 4 : Dans un premier temps, cr\u00e9er une liste (de chaines de caract\u00e8res) des villes \u00e0 visiter : 1 villes = [ \"Nancy\" , \"Metz\" , \"Paris\" , \"Reims\" , \"Troyes\" ] Exercice 5 : Cr\u00e9er \u00e9galement le tableau des distances ci-dessous (liste de listes d'entiers) : 1 2 3 4 5 distance = [ [ 0 , 55 , 303 , 188 , 183 ], [ 55 , 0 , 306 , 176 , 203 ], [ 303 , 306 , 0 , 142 , 153 ], [ 188 , 176 , 142 , 0 , 123 ], [ 183 , 203 , 153 , 123 , 0 ] ] Exercice 6 : Lancer le programme puis depuis la console python \u00e9crire l'instruction qui permet d'afficher \u00e0 partir des 2 listes ci-dessus : \"Paris\" , instruction : \"Nancy\" , instruction : La distance Paris-Nancy, instruction : La distance Paris-Metz, instruction : R\u00e9ponse Paris\" instruction : villes[2] \"Nancy\" instruction : villes[3] La distance Paris-Nancy instruction : distance[0][2] ou distance[2][0] La distance Paris-Metz instruction : distance[1][2] ou distance[2][1] Exercice 7 : Existe-t-il un lien entre la liste villes et la liste de listes distance (dans la liste villes, peut on inverser 2 \u00e9l\u00e9ments sans retoucher la liste distance ?) R\u00e9ponse Oui, les 2 listes sont intimement li\u00e9es. Si l\u2019on en modifie une, il faut modifier l\u2019autre. Exercice 8 : Cr\u00e9er un tableau de bool\u00e9en nomm\u00e9 visitees qui indiquera si la ville a \u00e9t\u00e9 visit\u00e9e (True) ou non (False). Au d\u00e9part, comment faut-il initialiser les \u00e9l\u00e9ments de la liste ? R\u00e9ponse Au d\u00e9part, aucune ville n\u2019a \u00e9t\u00e9 visit\u00e9e, on rempli donc le tableau \\(n\\) fois avec False . 1 2 n = len ( villes ) visitees = [ False ] * n Exercice 9 : \u00c9crire une fonction nomm\u00e9e plusProche, qui prend en arguments l'indice de la ville, la liste visitees et le tableau distance et qui va retourner l'indice de la ville la plus proche. Attention \u00e0 bien initialiser le tableau visitees pour tester la fonction, la ville choisie est suppos\u00e9e avoir \u00e9t\u00e9 visit\u00e9e. On utilisera une variable locale nomm\u00e9e pp, initialement initialis\u00e9e avec la valeur None, et \u00e0 qui l'on assignera ensuite l'indice de la ville la plus proche. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 villes = [ \"Nancy\" , \"Metz\" , \"Paris\" , \"Reims\" , \"Troyes\" ] distance = [ [ 0 , 55 , 303 , 188 , 183 ], [ 55 , 0 , 306 , 176 , 203 ], [ 303 , 306 , 0 , 142 , 153 ], [ 188 , 176 , 142 , 0 , 123 ], [ 183 , 203 , 153 , 123 , 0 ] ] def plus_proche ( ville : int , distance : list , visitees : list ) -> int : pp = None for i in range ( len ( visitees )) : if visitees [ i ] == False : if pp == None or distance [ ville ][ i ] < distance [ ville ][ pp ] : pp = i return pp # programme principal visitees = [ False ] * len ( villes ) # recherche de la ville la plus proche de Paris (indice 2) visitees [ 2 ] = True # Paris est consid\u00e9r\u00e9e comme visit\u00e9e print ( plus_proche ( 2 , distance , visitees )) Exercice 10 : \u00c9crire maintenant une fonction nomm\u00e9e voyage, qui prend en arguments l'indice de la ville de d\u00e9part, le tableau distance et la liste villes), affiche les distances parcourues entre chaque ville et retourne la distance totale parcourue. On utilisera 2 variables locales courante et suivante \u00e0 qui l'on assignera l'indice de la ville en cours de visite et de la ville suivante. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 villes = [ \"Nancy\" , \"Metz\" , \"Paris\" , \"Reims\" , \"Troyes\" ] distance = [ [ 0 , 55 , 303 , 188 , 183 ], [ 55 , 0 , 306 , 176 , 203 ], [ 303 , 306 , 0 , 142 , 153 ], [ 188 , 176 , 142 , 0 , 123 ], [ 183 , 203 , 153 , 123 , 0 ] ] def plus_proche ( ville : int , distance : list , visitees : list ) -> int : pp = None for i in range ( len ( visitees )) : if visitees [ i ] == False : if pp == None or distance [ ville ][ i ] < distance [ ville ][ pp ] : pp = i return pp def voyage ( depart , distance , villes ) : n = len ( villes ) distanceParcourue = 0 visitees = [ False ] * n courante = depart for i in range ( n - 1 ): visitees [ courante ] = True suivante = plusProche ( courante , distance , visitees ) print ( villes [ courante ], \" - \" , villes [ suivante ], \" : \" , distance [ courante ][ suivante ], \" km\" ) distanceParcourue += distance [ courante ][ suivante ] courante = suivante print ( villes [ courante ], \" - \" , villes [ depart ], \" : \" , distance [ courante ][ depart ], \"km\" ) distanceParcourue += distance [ courante ][ depart ] return distanceParcourue # programme principal print ( \"distance totale parcourue = \" , voyage ( 0 , distance , villes ), \" km\" ) Exercice 11 : Tester maintenant la globalit\u00e9 du programme en prenant comme ville de d\u00e9part Nancy. Le tableau ci-dessous donne l'ensemble des trajets avec comme ville de d\u00e9part Nancy. V\u00e9rifier que votre algorithme glouton n'a pas donn\u00e9 la solution optimale mais malgr\u00e9 toute une solution tr\u00e8s satisfaisante.","title":"Algorithme du voyageur"},{"location":"Premiere/Algorithmique/gloutons/#le-probleme-du-sac-a-dos","text":"","title":"Le probl\u00e8me du sac \u00e0 dos"},{"location":"Premiere/Algorithmique/gloutons/#problematique_1","text":"Un voleur souhaite emporter des objets d'une valeur totale maximale dans son sac \u00e0 dos qui ne peut supporter plus d'une certaine masse, \u00e0 d\u00e9finir. Objet Valeur (\u20ac) Masse (kg) Objet 1 500 15 Objet 2 320 2 Objet 3 20 5 Objet 4 500 7 Objet 5 180 6 Objet 6 80 8","title":"Probl\u00e8matique"},{"location":"Premiere/Algorithmique/gloutons/#strategies-gloutonnes","text":"Exercice 11 : Proposer 3 strat\u00e9gies gloutonnes pour r\u00e9soudre cette probl\u00e9matique. R\u00e9ponse Soit on s\u00e9lectionne les objets du plus l\u00e9ger au plus lourd (on aura alors un maximum d\u2019objets) sans d\u00e9passer la masse maximale. Soit on s\u00e9lectionne les objets de celui de plus grande valeur \u00e0 celui de plus faible valeur sans d\u00e9passer la masse maximale. Soit on calcul le rapport valeur/masse et on s\u00e9lectionne les objets de rapport le plus grand au rapport le plus petit sans d\u00e9passer la masse maximale. La strat\u00e9gie la plus int\u00e9ressante est sans doute la derni\u00e8re.","title":"Strat\u00e9gies gloutonnes"},{"location":"Premiere/Algorithmique/gloutons/#algorithme-glouton","text":"Suivant la strat\u00e9gie gloutonne adopt\u00e9e, il sera sans doute n\u00e9cessaire de rajouter une colonne au tableau et de trier le tableau suivant un ordre croissant ou d\u00e9croissant d'une des colonnes. Afin de trier le tableau, on utilisera la fonction sorted() d\u00e9j\u00e0 utilis\u00e9e dans le chapitre pr\u00e9c\u00e9dent. Exercice 12 : \u00c9crire une fonction nomm\u00e9e sac_dos_glouton qui prend en argument le tableau d'objets, la masse maximale support\u00e9e par le sac \u00e0 dos, l'indice de la colonne \u00e0 trier, un bool\u00e9en qui prend la valeur True pour un tri d\u00e9croissant sinon la valeur False pour un tri croissant, et qui retourne un tableau dont le 1 \u00e9l\u00e9ments et le tableau des objets choisis, le 2nd \u00e9l\u00e9ment la masse totale des objets emport\u00e9s et le 3\u00e8me \u00e9l\u00e9ment la valeur totale des objets emport\u00e9s. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 def sac_dos_glouton ( objets , masse_max , indice , boolean ) : objets = sorted ( objets , key = lambda colonne : colonne [ indice ], reverse = boolean ) valeur_totale = 0 masse_totale = 0 reponse = [] i = 0 while i < len ( objets ) and masse_totale < masse_max : nom , valeur , masse , rapport = objets [ i ] if masse_totale + masse <= masse_max : reponse . append ( nom ) masse_totale += masse valeur_totale += valeur i += 1 return reponse , masse_totale , valeur_totale #PROGRAMME PRINCIPAL objets = [ [ \"objet1\" , 500 , 15 ], [ \"objet2\" , 320 , 2 ], [ \"objet3\" , 20 , 5 ], [ \"objet4\" , 500 , 7 ], [ \"objet5\" , 180 , 6 ], [ \"objet6\" , 80 , 8 ] ] for i in objets : i . append ( i [ 1 ] / i [ 2 ]) print ( \"strat\u00e9gie 1\" , SacDosGlouton ( objets , 15 , 2 , False )) print ( \"strat\u00e9gie 2\" , SacDosGlouton ( objets , 15 , 1 , True )) print ( \"strat\u00e9gie 3\" , SacDosGlouton ( objets , 15 , 3 , True )) Exercice 13 : Appliquer vos diff\u00e9rentes strat\u00e9gies et v\u00e9rifier la coh\u00e9rence des r\u00e9ponses. R\u00e9ponse 1 2 3 strat\u00e9gie 1 ([ 'objet2' , 'objet3' , 'objet5' ], 13 , 520 ) strat\u00e9gie 2 ([ 'objet1' ], 15 , 500 ) strat\u00e9gie 3 ([ 'objet2' , 'objet4' , 'objet5' ], 15 , 1000 )","title":"Algorithme glouton"},{"location":"Premiere/Algorithmique/gloutons/#probleme-du-rendu-de-monnaie","text":"","title":"Probl\u00e8me du rendu de monnaie"},{"location":"Premiere/Algorithmique/gloutons/#algorithme-glouton_1","text":"Consid\u00e9rons le probl\u00e8me d'un commer\u00e7ant devant rendre de la monnaie \u00e0 l'un de ses clients. Il souhaite le faire en utilisant le moins de pi\u00e8ces et de billets possibles. On suppose que l'on manipule les pi\u00e8ces et coupures habituelles des euros (1\u20ac, 2\u20ac, 5\u20ac, 10 \u20ac, 20\u20ac, 50\u20ac, 100\u20ac et 200\u20ac, oublions les centimes) et que le commer\u00e7ant dispose d'une r\u00e9serve suffisamment importante de chaque esp\u00e8ce. Exercice 14 : Donner les combinaisons possibles de rendu de monnaie sur 9 \u20ac. \u00c9tablir un tableau. R\u00e9ponse Exercice 15 : A l'aide du tableau pr\u00e9c\u00e9dent, proposer une strat\u00e9gie gloutonne pour rendre la monnaie. R\u00e9ponse On rend les pi\u00e8ces en commen\u00e7ant syst\u00e9matiquement par les plus grosse. Exercice 16 : \u00c9crire une fonction qui prend en argument la somme \u00e0 rendre (nombre entier) et retourne le tableau des pi\u00e8ces ou coupures. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 def rendu_monnaie ( somme ) : euros = [ 200 , 100 , 50 , 20 , 10 , 5 , 2 , 1 ] rendu = [] i = 0 while ( somme > 0 and i < 8 ) : if ( somme - euros [ i ]) >= 0 : somme -= euros [ i ] rendu . append ( euros [ i ]) else : i += 1 return rendu print ( rendu_monnaie ( 9 ))","title":"Algorithme glouton"},{"location":"Premiere/Algorithmique/gloutons/#systemes-canoniques","text":"On appelle syst\u00e8me canonique un syst\u00e8me o\u00f9 un algorithme glouton donne toujours le rendu optimal. Exercice 17 : En observant les r\u00e9ponses fournies par votre algorithme, pensez-vous que le syst\u00e8me en euros soit canonique ? R\u00e9ponse Il semblerait que oui. Montrons de mani\u00e8re th\u00e9orique que le syst\u00e8me euro est canonique : Exercice 18 : Montrer que dans un syst\u00e8me de rendu optimal : Les pi\u00e8ces ou coupures de 1, 5, 10, 50 et 100 \u20ac ne peuvent \u00eatre utilis\u00e9es qu'une seule fois ; Les pi\u00e8ces ou coupures de 2 et 20 \u20ac ne peuvent \u00eatre chacun utilis\u00e9s que deux fois ; On ne peut rendre \u00e0 la fois 2 pi\u00e8ces de 2 \u20ac et 1 pi\u00e8ce de 1 \u20ac (ou 2 billets de 20 \u20ac et 1 billet de 10 \u20ac) ; La somme totale des billets ou coupures de moins de 200 \u20ac ne peut d\u00e9passer la somme de 199 \u20ac (au-del\u00e0 de cette somme, un billet de 200 \u20ac sera alors choisi par l'algorithme glouton) ; La somme totale des billets ou coupures de moins de 100 \u20ac ne peuvent d\u00e9passer la somme de 99 \u20ac (au-del\u00e0 de cette somme, un billet de 100 \u20ac sera alors choisi par l'algorithme glouton) ; On peut poursuivre ce raisonnement avec les autres coupures\u2026 R\u00e9ponse Les pi\u00e8ces ou coupures de 1, 5, 10, 50 et 100 \u20ac ne peuvent \u00eatre utilis\u00e9es qu'une seule fois ; Si 2 pi\u00e8ces de 1\u20ac, alors on en utilise une de 2\u20ac Si 2 pi\u00e8ces de 5\u20ac, alors on en utilise un billet de 10\u20ac Si 2 billets de 10\u20ac, alors on en utilise un de 20\u20ac Si 2 billets de 50\u20ac, alors on en utilise un de 100\u20ac Si 2 billets de 100\u20ac, alors on en utilise un de 200\u20ac Les pi\u00e8ces ou coupures de 2 et 20 \u20ac ne peuvent \u00eatre chacun utilis\u00e9s que deux fois ; Si 3 pi\u00e8ces de 2\u20ac, alors on utilise 1 pi\u00e8ces de 1\u20ac et 1 billet de 5\u20ac Si 3 billets de 20\u20ac, alors on utilise 1 de 10\u20ac et 1 de 50\u20ac On ne peut rendre \u00e0 la fois 2 pi\u00e8ces de 2 \u20ac et 1 pi\u00e8ce de 1 \u20ac (ou 2 billets de 20 \u20ac et 1 billet de 10 \u20ac) ; La somme totale des billets ou coupures de moins de 200 \u20ac ne peut d\u00e9passer la somme de 199 \u20ac (au-del\u00e0 de cette somme, un billet de 200 \u20ac sera alors choisi par l'algorithme glouton) ; La somme totale des billets ou coupures de moins de 100 \u20ac ne peuvent d\u00e9passer la somme de 99 \u20ac (au-del\u00e0 de cette somme, un billet de 100 \u20ac sera alors choisi par l'algorithme glouton) ; On peut poursuivre ce raisonnement avec les autres coupures\u2026 Exercice 19 : Appliquer votre algorithme glouton \u00e0 un syst\u00e8me mon\u00e9taire dans lequel les pi\u00e8ces ou coupures auraient les valeurs suivantes : 1, 6, 10 et 22 \u20ac. Montrer sur un exemple que le rendu de monnaie n'est pas optimal et donc que ce syst\u00e8me n'est pas canonique. R\u00e9ponse Sur 18\u20ac l\u2019algorithme va rendre 10\u20ac, 6\u20ac et 2 \u00d7 1\u20ac (4 pi\u00e8ces). Or il y a plus simple : 3 pi\u00e8ces de 6\u20ac Sur 12\u20ac l\u2019algorithme va rendre 10\u20ac, 2 \u00d7 1\u20ac (3 pi\u00e8ces). Or il y a plus simple : 2 pi\u00e8ces de 6\u20ac","title":"Syst\u00e8mes canoniques"},{"location":"Premiere/Algorithmique/kppv/","text":"Algorithme des plus proches voisins # Introduction # Dans ce chapitre, nous allons travailler avec un algorithme d'apprentissage automatique, souvent appel\u00e9 un algorithme de machine learning. Le principe de ces algorithmes est d'utiliser un grand nombre de donn\u00e9es afin \"d'apprendre \u00e0 la machine\" \u00e0 r\u00e9soudre des probl\u00e8mes. Bien que cette id\u00e9e d'apprentissage automatique date de la fin des ann\u00e9es 1950, le machine learning a pris toute son importance avec la mont\u00e9e en puissance du Big Data, offrant des quantit\u00e9s de donn\u00e9es \u00e0 analyser sur d'innombrables sujets. \u00c0 noter aussi l'importance des strat\u00e9gies mises en place par les GAFAM (Google, Apple, Facebook, Amazon et Microsoft) afin de r\u00e9cup\u00e9rer un grand nombre de donn\u00e9es concernant leurs clients. Ces donn\u00e9es sont tr\u00e8s souvent utilis\u00e9es pour alimenter des algorithmes de machine learning. Historique Trouver sur le web les dates des \u00e9v\u00e9nements marquants de l'histoire de l'intelligence artificielle qui sont donn\u00e9s ci-dessous dans le d\u00e9sordre : test de Turing victoire d'Alpha-Go sur le meilleur joueur humain de jeu de Go premier neurone artificiel imagin\u00e9 par Mc Culloch et Pitts victoire de Watson (IBM) sur les meilleurs joueurs humains au jeu Jeopardy victoire de Deep Blue (IBM) sur le champion du monde d'\u00e9chec Gary Kasparov invention du perceptron par Frank Rosenblatt conf\u00e9rence de Darmouth prix Turing d\u00e9cern\u00e9 \u00e0 Yann Le Cun pour ses travaux sur le Deep Learning Probl\u00e8me de classification des iris # Les donn\u00e9es d'Edgar Anderson relatives aux diff\u00e9rentes esp\u00e8ces d'iris En 1936, Edgar Anderson a collect\u00e9 des donn\u00e9es sur 3 esp\u00e8ces d'iris : \"iris setosa\", \"iris virginica\" et \"iris versicolor\". Pour chaque iris \u00e9tudi\u00e9, Anderson a mesur\u00e9 la largeur et la longueur des s\u00e9pales, la largeur et la longueur des p\u00e9tales. Par souci de simplification, nous nous int\u00e9resserons uniquement \u00e0 la largeur et \u00e0 la longueur des p\u00e9tales. 50 de ces mesures se trouvent dans le fichier iris.csv t\u00e9l\u00e9chargeable depuis le groupe de travail sur l'ENT. Il est inclus \u00e9galement dans le fichier Capytale de l'activit\u00e9. Ce jeu de donn\u00e9es pr\u00e9sente aujourd'hui un int\u00e9r\u00eat essentiellement p\u00e9dagogique. En effet, il est exclusivement utilis\u00e9 par des personnes d\u00e9sirant s'initier aux algorithmes de machine learning. Les valeurs du champ \"species\"(\"esp\u00e8ces\")sont 0 pour l'esp\u00e8ce \"setosa\", 1 pour \"virginica\" et 2 pour\"versicolor\". Nous allons dans un premier temps r\u00e9aliser une repr\u00e9sentation graphique des donn\u00e9es contenues dans le fichier \u00e0 l'aide du script python suivant : Programme 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import pandas import matplotlib.pyplot as plt plt . figure () iris = pandas . read_csv ( \"iris.csv\" ) #lecture du fichier iris.csc x = iris . loc [:, \"petal_length\" ] #extraction de la longueur du p\u00e9tale y = iris . loc [:, \"petal_width\" ] #extraction de la largeur du p\u00e9tale espece = iris . loc [:, \"species\" ] plt . scatter ( x [ espece == 0 ], y [ espece == 0 ], color = 'g' , label = 'setosa' ) #trac\u00e9 pour la setosa plt . scatter ( x [ espece == 1 ], y [ espece == 1 ], color = 'r' , label = 'versicolor' ) plt . scatter ( x [ espece == 2 ], y [ espece == 2 ], color = 'b' , label = 'virginica' ) plt . legend () #affichage de la l\u00e9gende plt . show () # affichage du graphique On constate que ces points sont regroup\u00e9s par esp\u00e8ces d'iris. Exercice 1 : Ouvrir l'activit\u00e9 Capytale n\u00b0 : c0d5-1738910 ; Copier/coller le code pr\u00e9c\u00e9dent et ex\u00e9cuter-le. Modifier ce code et observer. Consid\u00e9rons maintenant une iris dont les p\u00e9tales mesurent 0,5 cm de large et 2 cm de long. Comment d\u00e9terminer l'esp\u00e8ce \u00e0 laquelle cette iris appartient ? Afin de r\u00e9pondre \u00e0 cette probl\u00e9matique, nous allons placer cette nouvelle donn\u00e9e sur le graphique: 1 plt . scatter ( 2.0 , 0.5 , color = \"black\" ) Exercice 2 : R\u00e9aliser sur cette activit\u00e9 capytale le code pour ins\u00e9rer l'iris inconnu. Dans ce cas, on voit clairement qu'il y a de fortes chances pour que l'iris soit de l'esp\u00e8ce \"setosa\". Cependant, il existe des cas o\u00f9 il est beaucoup plus difficile de r\u00e9pondre, par exemple pour une iris dont les p\u00e9tales mesurent 0,75 cm de large et 2,5 cm de long. Afin de d\u00e9terminer si l'iris appartient \u00e0 l'esp\u00e8ce \"s\u00e9tosa\" ou \u00e0 l'esp\u00e8ce \"virginica\", nous allons devoir utiliser l'algorithme des k plus proches voisins. Algorithme des k plus proches voisins # Principe # On calcule la distance entre le point correspondant \u00e0 l'iris d'esp\u00e8ce inconnue et chaque point correspondant \u00e0 chaque \"iris\" ; On s\u00e9lectionne les \\(k\\) distances les plus petites (les \\(k\\) plus proches voisins) ; Parmi les k plus proches voisins, on d\u00e9termine quelle est l'esp\u00e8ce majoritaire, et on attribue \u00e0 notre iris inconnu cette esp\u00e8ce majoritaire. Prenons \\(k = 3\\) : Les 3 plus proches voisins sont deux \"setosa\" et un \"virginica\". D'apr\u00e8s l'algorithme des \"k plus proches voisins\", notre iris inconnue appartient \u00e0 l'esp\u00e8ce \"setosa\". Exemple avec les iris d'Anderson # La biblioth\u00e8que Python Scikit Learn propose un grand nombre d'algorithmes li\u00e9 au machine learning (c'est sans aucun doute la biblioth\u00e8que la plus utilis\u00e9e en machine learning). Parmi tous ces algorithmes, Scikit Learn propose l'algorithme des k plus proches voisins. Premi\u00e8re \u00e9tape Importer la biblioth\u00e8que: 1 from sklearn.neighbors import KNeighborsClassifier Deuxi\u00e8me \u00e9tape Recopier le programme 1 Troisi\u00e8me \u00e9tape Ins\u00e9rer le programme 2 \u00e0 la ligne 14 du programme 1 : programme 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 k = 3 #nbre de plus proches voisins #donn\u00e9es concernant l'iris inconnu longueur = 2.5 largeur = 0.75 plt . scatter ( longueur , largeur , color = \"black\" ) #algo knn d = list ( zip ( x , y )) #permet de passer des 2 listes x et y (x = [1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, ...] #y = [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.4,....] \u00e0 une liste de tuples #d = [(1.4, 0.2), (1.4, 0.2), (1.3, 0.2) (1.5, 0.2), (1.4, 0.2), (1.7, 0.2), (1.4, 0.4), ...] model = KNeighborsClassifier ( n_neighbors = k ) #\"KNeighborsClassifier\" est une m\u00e9thode issue #de la biblioth\u00e8que scikit-learn model . fit ( d , espece ) prediction = model . predict ([[ longueur , largeur ]]) #fin algo knn #Affichage r\u00e9sultats txt = \"R\u00e9sultat : \" if prediction [ 0 ] == 0 : txt = txt + \"setosa\" if prediction [ 0 ] == 2 : txt = txt + \"virginica\" if prediction [ 0 ] == 1 : txt = txt + \"versicolor\" plt . text ( 4 , 0.5 , txt , fontsize = 12 ) Exercice 3 : Sur cette activit\u00e9 Capytale, r\u00e9aliser le script afin de d\u00e9terminer l'esp\u00e8ce de l'iris inconnu. Exercice 4 : Le r\u00e9sultat d\u00e9pend-t-il du nombre de voisins ? Pour r\u00e9pondre \u00e0 cette question, relancer le script en prenant toujours le m\u00eame iris inconnu mais en faisant varier le nombre de voisins. Que constatez-vous ? Comment peut-on calculer une distance en informatique ? # Soit deux points : A (58,65) et B (80,58). On peut calculer la distance AB de plusieurs fa\u00e7ons, comme par exemple : La distance euclidienne qui correspond \u00e0 celle de la r\u00e8gle gradu\u00e9e : \\(AB = \\sqrt{(x_B - x_A)^2 + (y_B-y_A)^2} = \\sqrt{(80-58)^2 + (58-65)^2}\\approx 23,087\\) La distance de Manhattan qui correspond \u00e0 la longueur du chemin parcouru pour aller de A \u00e0 B en se d\u00e9pla\u00e7ant le long des ar\u00eates d'un quadrillage g\u00e9n\u00e9r\u00e9 par un rep\u00e8re orthonorm\u00e9 du plan, comme dans le plan d'une ville o\u00f9 les rues se coupent \u00e0 angle droit : \\(AB = |x_B - x_A| + |y_B - y_A| = |80-58| +|58-69|\\) Remarque : nous pouvons g\u00e9n\u00e9raliser \u00e0 3, 4 ou \\(n\\) dimensions.","title":"kppv"},{"location":"Premiere/Algorithmique/kppv/#algorithme-des-plus-proches-voisins","text":"","title":"Algorithme des plus proches voisins"},{"location":"Premiere/Algorithmique/kppv/#introduction","text":"Dans ce chapitre, nous allons travailler avec un algorithme d'apprentissage automatique, souvent appel\u00e9 un algorithme de machine learning. Le principe de ces algorithmes est d'utiliser un grand nombre de donn\u00e9es afin \"d'apprendre \u00e0 la machine\" \u00e0 r\u00e9soudre des probl\u00e8mes. Bien que cette id\u00e9e d'apprentissage automatique date de la fin des ann\u00e9es 1950, le machine learning a pris toute son importance avec la mont\u00e9e en puissance du Big Data, offrant des quantit\u00e9s de donn\u00e9es \u00e0 analyser sur d'innombrables sujets. \u00c0 noter aussi l'importance des strat\u00e9gies mises en place par les GAFAM (Google, Apple, Facebook, Amazon et Microsoft) afin de r\u00e9cup\u00e9rer un grand nombre de donn\u00e9es concernant leurs clients. Ces donn\u00e9es sont tr\u00e8s souvent utilis\u00e9es pour alimenter des algorithmes de machine learning. Historique Trouver sur le web les dates des \u00e9v\u00e9nements marquants de l'histoire de l'intelligence artificielle qui sont donn\u00e9s ci-dessous dans le d\u00e9sordre : test de Turing victoire d'Alpha-Go sur le meilleur joueur humain de jeu de Go premier neurone artificiel imagin\u00e9 par Mc Culloch et Pitts victoire de Watson (IBM) sur les meilleurs joueurs humains au jeu Jeopardy victoire de Deep Blue (IBM) sur le champion du monde d'\u00e9chec Gary Kasparov invention du perceptron par Frank Rosenblatt conf\u00e9rence de Darmouth prix Turing d\u00e9cern\u00e9 \u00e0 Yann Le Cun pour ses travaux sur le Deep Learning","title":"Introduction"},{"location":"Premiere/Algorithmique/kppv/#probleme-de-classification-des-iris","text":"Les donn\u00e9es d'Edgar Anderson relatives aux diff\u00e9rentes esp\u00e8ces d'iris En 1936, Edgar Anderson a collect\u00e9 des donn\u00e9es sur 3 esp\u00e8ces d'iris : \"iris setosa\", \"iris virginica\" et \"iris versicolor\". Pour chaque iris \u00e9tudi\u00e9, Anderson a mesur\u00e9 la largeur et la longueur des s\u00e9pales, la largeur et la longueur des p\u00e9tales. Par souci de simplification, nous nous int\u00e9resserons uniquement \u00e0 la largeur et \u00e0 la longueur des p\u00e9tales. 50 de ces mesures se trouvent dans le fichier iris.csv t\u00e9l\u00e9chargeable depuis le groupe de travail sur l'ENT. Il est inclus \u00e9galement dans le fichier Capytale de l'activit\u00e9. Ce jeu de donn\u00e9es pr\u00e9sente aujourd'hui un int\u00e9r\u00eat essentiellement p\u00e9dagogique. En effet, il est exclusivement utilis\u00e9 par des personnes d\u00e9sirant s'initier aux algorithmes de machine learning. Les valeurs du champ \"species\"(\"esp\u00e8ces\")sont 0 pour l'esp\u00e8ce \"setosa\", 1 pour \"virginica\" et 2 pour\"versicolor\". Nous allons dans un premier temps r\u00e9aliser une repr\u00e9sentation graphique des donn\u00e9es contenues dans le fichier \u00e0 l'aide du script python suivant : Programme 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import pandas import matplotlib.pyplot as plt plt . figure () iris = pandas . read_csv ( \"iris.csv\" ) #lecture du fichier iris.csc x = iris . loc [:, \"petal_length\" ] #extraction de la longueur du p\u00e9tale y = iris . loc [:, \"petal_width\" ] #extraction de la largeur du p\u00e9tale espece = iris . loc [:, \"species\" ] plt . scatter ( x [ espece == 0 ], y [ espece == 0 ], color = 'g' , label = 'setosa' ) #trac\u00e9 pour la setosa plt . scatter ( x [ espece == 1 ], y [ espece == 1 ], color = 'r' , label = 'versicolor' ) plt . scatter ( x [ espece == 2 ], y [ espece == 2 ], color = 'b' , label = 'virginica' ) plt . legend () #affichage de la l\u00e9gende plt . show () # affichage du graphique On constate que ces points sont regroup\u00e9s par esp\u00e8ces d'iris. Exercice 1 : Ouvrir l'activit\u00e9 Capytale n\u00b0 : c0d5-1738910 ; Copier/coller le code pr\u00e9c\u00e9dent et ex\u00e9cuter-le. Modifier ce code et observer. Consid\u00e9rons maintenant une iris dont les p\u00e9tales mesurent 0,5 cm de large et 2 cm de long. Comment d\u00e9terminer l'esp\u00e8ce \u00e0 laquelle cette iris appartient ? Afin de r\u00e9pondre \u00e0 cette probl\u00e9matique, nous allons placer cette nouvelle donn\u00e9e sur le graphique: 1 plt . scatter ( 2.0 , 0.5 , color = \"black\" ) Exercice 2 : R\u00e9aliser sur cette activit\u00e9 capytale le code pour ins\u00e9rer l'iris inconnu. Dans ce cas, on voit clairement qu'il y a de fortes chances pour que l'iris soit de l'esp\u00e8ce \"setosa\". Cependant, il existe des cas o\u00f9 il est beaucoup plus difficile de r\u00e9pondre, par exemple pour une iris dont les p\u00e9tales mesurent 0,75 cm de large et 2,5 cm de long. Afin de d\u00e9terminer si l'iris appartient \u00e0 l'esp\u00e8ce \"s\u00e9tosa\" ou \u00e0 l'esp\u00e8ce \"virginica\", nous allons devoir utiliser l'algorithme des k plus proches voisins.","title":"Probl\u00e8me de classification des iris"},{"location":"Premiere/Algorithmique/kppv/#algorithme-des-k-plus-proches-voisins","text":"","title":"Algorithme des k plus proches voisins"},{"location":"Premiere/Algorithmique/kppv/#principe","text":"On calcule la distance entre le point correspondant \u00e0 l'iris d'esp\u00e8ce inconnue et chaque point correspondant \u00e0 chaque \"iris\" ; On s\u00e9lectionne les \\(k\\) distances les plus petites (les \\(k\\) plus proches voisins) ; Parmi les k plus proches voisins, on d\u00e9termine quelle est l'esp\u00e8ce majoritaire, et on attribue \u00e0 notre iris inconnu cette esp\u00e8ce majoritaire. Prenons \\(k = 3\\) : Les 3 plus proches voisins sont deux \"setosa\" et un \"virginica\". D'apr\u00e8s l'algorithme des \"k plus proches voisins\", notre iris inconnue appartient \u00e0 l'esp\u00e8ce \"setosa\".","title":"Principe"},{"location":"Premiere/Algorithmique/kppv/#exemple-avec-les-iris-danderson","text":"La biblioth\u00e8que Python Scikit Learn propose un grand nombre d'algorithmes li\u00e9 au machine learning (c'est sans aucun doute la biblioth\u00e8que la plus utilis\u00e9e en machine learning). Parmi tous ces algorithmes, Scikit Learn propose l'algorithme des k plus proches voisins. Premi\u00e8re \u00e9tape Importer la biblioth\u00e8que: 1 from sklearn.neighbors import KNeighborsClassifier Deuxi\u00e8me \u00e9tape Recopier le programme 1 Troisi\u00e8me \u00e9tape Ins\u00e9rer le programme 2 \u00e0 la ligne 14 du programme 1 : programme 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 k = 3 #nbre de plus proches voisins #donn\u00e9es concernant l'iris inconnu longueur = 2.5 largeur = 0.75 plt . scatter ( longueur , largeur , color = \"black\" ) #algo knn d = list ( zip ( x , y )) #permet de passer des 2 listes x et y (x = [1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, ...] #y = [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.4,....] \u00e0 une liste de tuples #d = [(1.4, 0.2), (1.4, 0.2), (1.3, 0.2) (1.5, 0.2), (1.4, 0.2), (1.7, 0.2), (1.4, 0.4), ...] model = KNeighborsClassifier ( n_neighbors = k ) #\"KNeighborsClassifier\" est une m\u00e9thode issue #de la biblioth\u00e8que scikit-learn model . fit ( d , espece ) prediction = model . predict ([[ longueur , largeur ]]) #fin algo knn #Affichage r\u00e9sultats txt = \"R\u00e9sultat : \" if prediction [ 0 ] == 0 : txt = txt + \"setosa\" if prediction [ 0 ] == 2 : txt = txt + \"virginica\" if prediction [ 0 ] == 1 : txt = txt + \"versicolor\" plt . text ( 4 , 0.5 , txt , fontsize = 12 ) Exercice 3 : Sur cette activit\u00e9 Capytale, r\u00e9aliser le script afin de d\u00e9terminer l'esp\u00e8ce de l'iris inconnu. Exercice 4 : Le r\u00e9sultat d\u00e9pend-t-il du nombre de voisins ? Pour r\u00e9pondre \u00e0 cette question, relancer le script en prenant toujours le m\u00eame iris inconnu mais en faisant varier le nombre de voisins. Que constatez-vous ?","title":"Exemple avec les iris d'Anderson"},{"location":"Premiere/Algorithmique/kppv/#comment-peut-on-calculer-une-distance-en-informatique","text":"Soit deux points : A (58,65) et B (80,58). On peut calculer la distance AB de plusieurs fa\u00e7ons, comme par exemple : La distance euclidienne qui correspond \u00e0 celle de la r\u00e8gle gradu\u00e9e : \\(AB = \\sqrt{(x_B - x_A)^2 + (y_B-y_A)^2} = \\sqrt{(80-58)^2 + (58-65)^2}\\approx 23,087\\) La distance de Manhattan qui correspond \u00e0 la longueur du chemin parcouru pour aller de A \u00e0 B en se d\u00e9pla\u00e7ant le long des ar\u00eates d'un quadrillage g\u00e9n\u00e9r\u00e9 par un rep\u00e8re orthonorm\u00e9 du plan, comme dans le plan d'une ville o\u00f9 les rues se coupent \u00e0 angle droit : \\(AB = |x_B - x_A| + |y_B - y_A| = |80-58| +|58-69|\\) Remarque : nous pouvons g\u00e9n\u00e9raliser \u00e0 3, 4 ou \\(n\\) dimensions.","title":"Comment peut-on calculer une distance en informatique ?"},{"location":"Premiere/Algorithmique/outil_algo/","text":"Outils pour l'analyse algorithmique # Trace d'un programme # Cf chapitre 4 Variant de boucle # D\u00e9finition # On appelle variant d\u2019une boucle une expression dont la valeur varie \u00e0 chacune des it\u00e9rations de la boucle. Un variant de boucle bien choisi permet par exemple de prouver qu\u2019une boucle while se terminera bien. Exemple # Calcul de la plus petite puissance de deux sup\u00e9rieure ou \u00e9gale \u00e0 un entier n. Exemple : variant 1 2 3 4 5 def puissance ( n : int ) -> int : p = 1 while p < n : p = 2 * p return p Dans l\u2019algorithme ci-dessus, p est un variant de la boucle while car sa valeur (non nulle) est multipli\u00e9e par 2 \u00e0 chacune des it\u00e9rations. Dans l\u2019algorithme pr\u00e9c\u00e9dent, le variant de boucle non nul p est multipli\u00e9 par 2 \u00e0 chaque it\u00e9ration, il finit donc par devenir sup\u00e9rieur ou \u00e9gal \u00e0 n et la boucle while se terminera bien. Invariant de boucle # D\u00e9finition # On appelle invariant d\u2019une boucle une propri\u00e9t\u00e9 qui, si elle est vraie avant l\u2019ex\u00e9cution d\u2019une it\u00e9ration, le demeure pendant et apr\u00e8s l\u2019ex\u00e9cution de l\u2019it\u00e9ration. Exemple # La fonction suivante calcule 2 \u00e0 la puissance \\(n\\) . Invariant : exemple 1 2 3 4 5 6 7 def puissance ( n : int ) -> int : r = 1 for i in range ( 1 , n + 1 ): r = r * 2 return r print ( puissance ( 3 )) Exercice 1 : R\u00e9aliser la trace de l'algorithme pr\u00e9c\u00e9dent.. Exercice 2 : V\u00e9rifier que, \u00e0 chaque ex\u00e9cution du corps de boucle, la propri\u00e9t\u00e9 \\(r=2^i\\) est vraie. \\(r=2^i\\) est-il un invariant de boucle ? Exercice # On consid\u00e8re la fonction suivante qui permet de calculer le quotient et le reste de la division euclidienne d\u2019un entier positif par un entier strictement positif : Exercice 1 2 3 4 5 6 7 def division_euclidienne ( a : int , b : int ) -> int : q = 0 r = a while r >= b : q = q + 1 #on peut aussi \u00e9crire q +=1 r = r - b #on peut aussi \u00e9crire r -= b return q , r Exercice 3 : \u00c9crire la trace de l\u2019algorithme pour l\u2019entr\u00e9e (a= 17, b= 5) ; Montrer que la boucle while se termine en utilisant un variant de boucle ; Montrer que la propri\u00e9t\u00e9 a = q \u00d7b+r est un invariant de la boucle while ; En d\u00e9duire que l\u2019algorithme produit le r\u00e9sultat attendu. Une premi\u00e8re approche de la complexit\u00e9 # D\u00e9finition # La notion de complexit\u00e9 d\u2019un algorithme va rendre compte de l\u2019efficacit\u00e9 de cet algorithme. Pour un m\u00eame probl\u00e8me, par exemple trier un tableau, il existe plusieurs algorithmes. Certains algorithmes sont plus efficaces que d\u2019autres (par exemple un algorithme A mettra moins de temps qu\u2019un algorithme B pour r\u00e9soudre exactement le m\u00eame probl\u00e8me, sur la m\u00eame machine). Il existe 2 types de complexit\u00e9 : une complexit\u00e9 en temps et une complexit\u00e9 en m\u00e9moire. Nous nous int\u00e9resserons ici uniquement \u00e0 la complexit\u00e9 en temps. La complexit\u00e9 en temps est directement li\u00e9e au nombre d\u2019op\u00e9rations \u00e9l\u00e9mentaires qui doivent \u00eatre ex\u00e9cut\u00e9es afin de r\u00e9soudre un probl\u00e8me donn\u00e9. L\u2019\u00e9valuation de ce nombre d\u2019op\u00e9rations \u00e9l\u00e9mentaires n\u2019est pas chose facile, on rencontre souvent des cas litigieux. Calcul de la complexit\u00e9 # R\u00e8gles g\u00e9n\u00e9rales # Pour calculer la complexit\u00e9, nous allons devoir examiner chaque ligne de code et y attribuer un co\u00fbt en temps. Le co\u00fbt ainsi obtenu n\u2019aura pas d\u2019unit\u00e9, il s\u2019agit d\u2019un nombre d\u2019op\u00e9rations dont chacune aurait le m\u00eame temps d\u2019ex\u00e9cution, \u00e0 savoir 1. Les op\u00e9rations qui vont devoir \u00eatre comptabilis\u00e9es sont : Les affectations qui comptent pour 1 unit\u00e9, par exemple : a = 2 ; Les comparaisons qui comptent pour 1 unit\u00e9, par exemple : 2 < 3 ; Les acc\u00e8s aux m\u00e9moires qui comptent pour une 1 unit\u00e9 ; Les op\u00e9rations \u00e9l\u00e9mentaires qui comptent pour 1 unit\u00e9, par exemple : 2 + 3 . Exemple : D\u00e9terminons le co\u00fbt de la ligne suivante que l\u2019on notera \\(T(n)\\) : 1 a = a + 1 \\(T(n)\\) = 1 (acc\u00e8s \u00e0 la m\u00e9moire) +1 (addition) + 1 (affectation) Algorithme avec une boucle for # 1 2 3 4 5 def somme_entiers ( n : int ) -> int : somme = 0 for i in range ( n + 1 ): somme += i return somme Exercice 3 : D\u00e9terminer la complexit\u00e9 \\(T(n)\\) de cet algorithme. La complexit\u00e9 de cet algorithme est dite lin\u00e9aire. Ce sera le cas de tous les algorithmes avec \\(T(n) = a \u00d7 n + b\\) o\u00f9 \\(a\\) et \\(b\\) sont des r\u00e9els. Algorithmes avec deux boucles for imbriqu\u00e9es # 1 2 3 4 5 def tables_multiplication (): for i in range ( n ): for j in range ( n ): print ( i * j ) return None Exercice 4 : D\u00e9terminer la complexit\u00e9 \\(T(n)\\) de cet algorithme. La complexit\u00e9 des algorithmes contenant deux boucles for est dite quadratique. Ce sera le cas de tous les algorithmes avec \\(T(n) = a \u00d7 n^2 + b \u00d7 n + c\\) o\u00f9 \\(a\\) , \\(b\\) et \\(c\\) sont des r\u00e9els.","title":"Outils"},{"location":"Premiere/Algorithmique/outil_algo/#outils-pour-lanalyse-algorithmique","text":"","title":"Outils pour l'analyse algorithmique"},{"location":"Premiere/Algorithmique/outil_algo/#trace-dun-programme","text":"Cf chapitre 4","title":"Trace d'un programme"},{"location":"Premiere/Algorithmique/outil_algo/#variant-de-boucle","text":"","title":"Variant de boucle"},{"location":"Premiere/Algorithmique/outil_algo/#definition","text":"On appelle variant d\u2019une boucle une expression dont la valeur varie \u00e0 chacune des it\u00e9rations de la boucle. Un variant de boucle bien choisi permet par exemple de prouver qu\u2019une boucle while se terminera bien.","title":"D\u00e9finition"},{"location":"Premiere/Algorithmique/outil_algo/#exemple","text":"Calcul de la plus petite puissance de deux sup\u00e9rieure ou \u00e9gale \u00e0 un entier n. Exemple : variant 1 2 3 4 5 def puissance ( n : int ) -> int : p = 1 while p < n : p = 2 * p return p Dans l\u2019algorithme ci-dessus, p est un variant de la boucle while car sa valeur (non nulle) est multipli\u00e9e par 2 \u00e0 chacune des it\u00e9rations. Dans l\u2019algorithme pr\u00e9c\u00e9dent, le variant de boucle non nul p est multipli\u00e9 par 2 \u00e0 chaque it\u00e9ration, il finit donc par devenir sup\u00e9rieur ou \u00e9gal \u00e0 n et la boucle while se terminera bien.","title":"Exemple"},{"location":"Premiere/Algorithmique/outil_algo/#invariant-de-boucle","text":"","title":"Invariant de boucle"},{"location":"Premiere/Algorithmique/outil_algo/#definition_1","text":"On appelle invariant d\u2019une boucle une propri\u00e9t\u00e9 qui, si elle est vraie avant l\u2019ex\u00e9cution d\u2019une it\u00e9ration, le demeure pendant et apr\u00e8s l\u2019ex\u00e9cution de l\u2019it\u00e9ration.","title":"D\u00e9finition"},{"location":"Premiere/Algorithmique/outil_algo/#exemple_1","text":"La fonction suivante calcule 2 \u00e0 la puissance \\(n\\) . Invariant : exemple 1 2 3 4 5 6 7 def puissance ( n : int ) -> int : r = 1 for i in range ( 1 , n + 1 ): r = r * 2 return r print ( puissance ( 3 )) Exercice 1 : R\u00e9aliser la trace de l'algorithme pr\u00e9c\u00e9dent.. Exercice 2 : V\u00e9rifier que, \u00e0 chaque ex\u00e9cution du corps de boucle, la propri\u00e9t\u00e9 \\(r=2^i\\) est vraie. \\(r=2^i\\) est-il un invariant de boucle ?","title":"Exemple"},{"location":"Premiere/Algorithmique/outil_algo/#exercice","text":"On consid\u00e8re la fonction suivante qui permet de calculer le quotient et le reste de la division euclidienne d\u2019un entier positif par un entier strictement positif : Exercice 1 2 3 4 5 6 7 def division_euclidienne ( a : int , b : int ) -> int : q = 0 r = a while r >= b : q = q + 1 #on peut aussi \u00e9crire q +=1 r = r - b #on peut aussi \u00e9crire r -= b return q , r Exercice 3 : \u00c9crire la trace de l\u2019algorithme pour l\u2019entr\u00e9e (a= 17, b= 5) ; Montrer que la boucle while se termine en utilisant un variant de boucle ; Montrer que la propri\u00e9t\u00e9 a = q \u00d7b+r est un invariant de la boucle while ; En d\u00e9duire que l\u2019algorithme produit le r\u00e9sultat attendu.","title":"Exercice"},{"location":"Premiere/Algorithmique/outil_algo/#une-premiere-approche-de-la-complexite","text":"","title":"Une premi\u00e8re approche de la complexit\u00e9"},{"location":"Premiere/Algorithmique/outil_algo/#definition_2","text":"La notion de complexit\u00e9 d\u2019un algorithme va rendre compte de l\u2019efficacit\u00e9 de cet algorithme. Pour un m\u00eame probl\u00e8me, par exemple trier un tableau, il existe plusieurs algorithmes. Certains algorithmes sont plus efficaces que d\u2019autres (par exemple un algorithme A mettra moins de temps qu\u2019un algorithme B pour r\u00e9soudre exactement le m\u00eame probl\u00e8me, sur la m\u00eame machine). Il existe 2 types de complexit\u00e9 : une complexit\u00e9 en temps et une complexit\u00e9 en m\u00e9moire. Nous nous int\u00e9resserons ici uniquement \u00e0 la complexit\u00e9 en temps. La complexit\u00e9 en temps est directement li\u00e9e au nombre d\u2019op\u00e9rations \u00e9l\u00e9mentaires qui doivent \u00eatre ex\u00e9cut\u00e9es afin de r\u00e9soudre un probl\u00e8me donn\u00e9. L\u2019\u00e9valuation de ce nombre d\u2019op\u00e9rations \u00e9l\u00e9mentaires n\u2019est pas chose facile, on rencontre souvent des cas litigieux.","title":"D\u00e9finition"},{"location":"Premiere/Algorithmique/outil_algo/#calcul-de-la-complexite","text":"","title":"Calcul de la complexit\u00e9"},{"location":"Premiere/Algorithmique/outil_algo/#regles-generales","text":"Pour calculer la complexit\u00e9, nous allons devoir examiner chaque ligne de code et y attribuer un co\u00fbt en temps. Le co\u00fbt ainsi obtenu n\u2019aura pas d\u2019unit\u00e9, il s\u2019agit d\u2019un nombre d\u2019op\u00e9rations dont chacune aurait le m\u00eame temps d\u2019ex\u00e9cution, \u00e0 savoir 1. Les op\u00e9rations qui vont devoir \u00eatre comptabilis\u00e9es sont : Les affectations qui comptent pour 1 unit\u00e9, par exemple : a = 2 ; Les comparaisons qui comptent pour 1 unit\u00e9, par exemple : 2 < 3 ; Les acc\u00e8s aux m\u00e9moires qui comptent pour une 1 unit\u00e9 ; Les op\u00e9rations \u00e9l\u00e9mentaires qui comptent pour 1 unit\u00e9, par exemple : 2 + 3 . Exemple : D\u00e9terminons le co\u00fbt de la ligne suivante que l\u2019on notera \\(T(n)\\) : 1 a = a + 1 \\(T(n)\\) = 1 (acc\u00e8s \u00e0 la m\u00e9moire) +1 (addition) + 1 (affectation)","title":"R\u00e8gles g\u00e9n\u00e9rales"},{"location":"Premiere/Algorithmique/outil_algo/#algorithme-avec-une-boucle-for","text":"1 2 3 4 5 def somme_entiers ( n : int ) -> int : somme = 0 for i in range ( n + 1 ): somme += i return somme Exercice 3 : D\u00e9terminer la complexit\u00e9 \\(T(n)\\) de cet algorithme. La complexit\u00e9 de cet algorithme est dite lin\u00e9aire. Ce sera le cas de tous les algorithmes avec \\(T(n) = a \u00d7 n + b\\) o\u00f9 \\(a\\) et \\(b\\) sont des r\u00e9els.","title":"Algorithme avec une boucle for"},{"location":"Premiere/Algorithmique/outil_algo/#algorithmes-avec-deux-boucles-for-imbriquees","text":"1 2 3 4 5 def tables_multiplication (): for i in range ( n ): for j in range ( n ): print ( i * j ) return None Exercice 4 : D\u00e9terminer la complexit\u00e9 \\(T(n)\\) de cet algorithme. La complexit\u00e9 des algorithmes contenant deux boucles for est dite quadratique. Ce sera le cas de tous les algorithmes avec \\(T(n) = a \u00d7 n^2 + b \u00d7 n + c\\) o\u00f9 \\(a\\) , \\(b\\) et \\(c\\) sont des r\u00e9els.","title":"Algorithmes avec deux boucles for imbriqu\u00e9es"},{"location":"Premiere/Algorithmique/tris/","text":"Algorithmes de tri # Pourquoi trier les valeurs # Les tris sont une des op\u00e9rations les plus souvent effectu\u00e9es par les ordinateurs, que ce soit dans les applications professionnelles (gestion des bases de donn\u00e9es, des op\u00e9rations bancaires...), la compression des donn\u00e9es ou les jeux vid\u00e9o. On estime qu\u2019un quart des cycles d\u2019horloge des ordinateurs sont consacr\u00e9s \u00e0 des op\u00e9rations de tri. Le co\u00fbt \u00e9nerg\u00e9tique de ces op\u00e9rations de tris repr\u00e9sente pr\u00e8s de 2% de la consommation totale d\u2019\u00e9lectricit\u00e9 en Europe. Sur des effectifs de plusieurs millions de donn\u00e9es, les temps d\u2019ex\u00e9cution des diff\u00e9rents algorithmes de tris varient entre une dizaine de secondes et une dizaine de jours. D\u2019o\u00f9 l\u2019importance d\u2019optimiser l\u2019efficacit\u00e9 de ces algorithmes. Bien que la plupart des algorithmes de tri soient connus depuis longtemps, la recherche sur leur optimisation est encore tr\u00e8s active. La derni\u00e8re am\u00e9lioration de l\u2019algorithme de tri \"Quicksort\" par Bentley & Sedgewick, consid\u00e9r\u00e9 comme ind\u00e9passable au niveau des tris par comparaison, date seulement de 2002. Les algorithmes de tri se divisent en deux grandes cat\u00e9gories de complexit\u00e9 : Les tris lents parmi lesquels on trouve : tri par insertion, le tri par s\u00e9lection, le tri \u00e0 bulles. Les tris rapides parmi lesquels on d\u00e9nombre : le tri fusion, le tri rapide (Quick Sort) ... Travail pr\u00e9paratoire sur les listes # G\u00e9n\u00e9ration d\u2019une liste al\u00e9atoire # Exercice 1 : \u00c9crire une fonction liste_al\u00e9atoire qui prend en argument le nombre d\u2019\u00e9l\u00e9ments entiers que l\u2019on veut g\u00e9n\u00e9rer ainsi que la valeur minimale et la valeur maximale prise par ces \u00e9l\u00e9ments. On nommera les param\u00e8tres de cette fonction nb , val_min et val_max . Cette fonction retournera la liste d\u2019entiers L g\u00e9n\u00e9r\u00e9e. Recherche du plus petit \u00e9l\u00e9ment dans une liste # Exercice 2 : \u00c9crire une fonction minimum qui retourne la plus petite valeur d\u2019une liste d\u2019entiers pass\u00e9e en argument. On supposera que la liste ne contient que des entiers et qu\u2019elle n\u2019est pas vide. Bien entendu, on n\u2019utilisera pas ici la m\u00e9thode min de Python. Recherche de la position de la plus petite valeur # Exercice 3 : \u00c9crire une fonction index_minimum qui cette fois-ci retourne la position de la plus petite valeur d\u2019une liste d\u2019entiers pass\u00e9e en argument. Recherche de la position de la plus petite valeur \u00e0 partir d\u2019un indice de position donn\u00e9 # Exercice 4 : \u00c9crire une fonction index_minimum_depuis qui retourne la position du plus petit \u00e9l\u00e9ment d\u2019une liste donn\u00e9e en argument, \u00e0 partir d\u2019un indice de position donn\u00e9 \u00e9galement en argument facultatif et dont la valeur par d\u00e9faut sera 0. On supposera que la liste pass\u00e9e en argument n\u2019est pas vide et que l\u2019indice de position existe bien dans la liste. \u00c9change de deux cases dans une liste # Exercice 5 : \u00c9crire une fonction echange qui re\u00e7oit en param\u00e8tre une liste et deux entiers correspondant \u00e0 deux indices de position dans cette liste. Cette fonction retourne la liste apr\u00e8s avoir \u00e9chang\u00e9 les \u00e9l\u00e9ments correspondant aux deux indices pass\u00e9s en argument. L\u00e0 encore, on supposera ici que les 2 indices pass\u00e9s en argument ne sont pas en dehors de la liste. Diff\u00e9rents algorithmes de tri # Tri par s\u00e9lection # Principe # Le principe est simple : pour un tri par valeurs croissantes de n \u00e9l\u00e9ments dans une liste : \u00c9tape 1 (premi\u00e8re it\u00e9ration) : On rechercher le plus petit \u00e9l\u00e9ment de la liste. Si c\u2019est le 1 er \u00e9l\u00e9ment, on ne fait rien ; Sinon on inverse ce plus petit \u00e9l\u00e9ment avec le 1 er \u00e9l\u00e9ment de la liste ; A l\u2019issue de cette \u00e9tape, le plus petit \u00e9l\u00e9ment est bien en d\u00e9but de la liste (indice 0). \u00c9tape 2 (deuxi\u00e8me it\u00e9ration) : On recherche ensuite le plus petit \u00e9l\u00e9ment dans la liste \u00e0 partir du deuxi\u00e8me \u00e9l\u00e9ment (le 1 er \u00e9tant d\u00e9j\u00e0 \u00e0 la bonne place). Si c\u2019est le 2 nd \u00e9l\u00e9ment de la liste, on ne fait rien, il est \u00e0 la bonne place ; Sinon on l\u2019inverse avec le 2 nd \u00e9l\u00e9ment de la liste. A l\u2019issue de cette \u00e9tape, le second plus petit \u00e9l\u00e9ment est en seconde position et n\u2019a plus \u00e0 \u00eatre d\u00e9plac\u00e9. On poursuit ainsi les it\u00e9rations jusqu\u2019\u00e0 ce que le tableau soit totalement tri\u00e9 Cela correspond \u00e0 l'animation suivante : Algorithme du tri par s\u00e9lection # Exercice 6 : \u00c9crire une fonction tri_selection_fct qui prend en argument un tableau d\u2019entiers et retourne le tableau tri\u00e9. On pourra bien entendu utiliser les fonctions r\u00e9alis\u00e9es auparavant. L'algorithme du tri par selection est donc le suivant : tri selection 1 2 3 4 5 6 7 8 9 10 11 def tri_selection ( lst : list ) -> list : \"\"\" trie la liste lst donn\u00e9e en argument \"\"\" for j in range ( len ( lst )): index_min = j min_val = lst [ j ] for i in range ( j + 1 , len ( lst )): if lst [ i ] < min_val : index_min = i min_val = lst [ i ] lst [ index_min ], lst [ j ] = lst [ j ], lst [ index_min ] return lst Preuve de la terminaison de l'algorithme # Est-on s\u00fbr que notre algorithme va s'arr\u00eater ? \u00c0 l'observation du programme, il est constitu\u00e9 de deux boucles for imbriqu\u00e9es, il n'y a pas d'ambigu\u00eft\u00e9 : on ne peut pas rentrer dans une boucle infinie. Le programme s'arr\u00eate forc\u00e9ment au bout de d'un nombre fixe d'op\u00e9rations. Complexit\u00e9 de l'algorithme # Exercice 7 : \u00c9valuer la complexit\u00e9 de l'algorithmes de tri par insertion. Tri par insertion # Principe # Le tri par insertion est un algorithme de tri classique dont le principe est tr\u00e8s simple. C'est le tri que la plupart des personnes utilisent naturellement pour trier des cartes : prendre les cartes m\u00e9lang\u00e9es une \u00e0 une sur la table, et former une main en ins\u00e9rant chaque carte \u00e0 sa place. Algorithme du tri par insertion # tri insertion 1 2 3 4 5 6 7 def tri_insertion ( lst : list ) -> list : for i in range ( 1 , len ( lst )): j = i while j > 0 and lst [ j - 1 ] > lst [ j ] : lst [ j ], lst [ j - 1 ] = lst [ j - 1 ], lst [ j ] j = j - 1 return lst Exercice 8 : Effectuer la trace de cette fonction qui prend en argument la liste [ 10, 2, 8, 3, 1] . Ex\u00e9cuter le script afin de v\u00e9rifier qu\u2019elle r\u00e9alise bien la t\u00e2che demand\u00e9e. Invariant de boucle : terminaison # Apr\u00e8s avoir d\u00e9fini un invariant de boucle, nous devons montrer trois choses : Initialisation : Il est vrai avant la premi\u00e8re it\u00e9ration de la boucle. Conservation : S\u2019il est vrai avant une it\u00e9ration de la boucle, il le reste avant l\u2019it\u00e9ration suivante. Terminaison : Une fois termin\u00e9e la boucle, l\u2019invariant fournit une propri\u00e9t\u00e9 utile qui aide \u00e0 montrer la validit\u00e9 de l\u2019algorithme. Si les deux premi\u00e8res propri\u00e9t\u00e9s sont v\u00e9rifi\u00e9es, alors l\u2019invariant est vrai avant chaque it\u00e9ration de la boucle. La troisi\u00e8me propri\u00e9t\u00e9 est utilis\u00e9e pour prouver la validit\u00e9 de l\u2019algorithme. On constate qu\u2019en d\u00e9but de chaque it\u00e9ration de la boucle for , la sous-liste lst [0\u2026 j-1] est tri\u00e9e . Nous allons consid\u00e9rer cette propri\u00e9t\u00e9 comme invariant de boucle. Initialisation : Exercice 9 : Montrer que l\u2019invariant de boucle est vrai avant la 1 \u00e8re it\u00e9ration. Conservation : Exercice 10 : Montrer que chaque it\u00e9ration conserve l\u2019invariant. Terminaison : Exercice 11 : Montrer que l\u2019invariant est v\u00e9rifi\u00e9 en fin de boucle. Tri \u00e0 bulles # Principe # Le tri \u00e0 bulles est un algorithme de tri qui consiste \u00e0 comparer r\u00e9p\u00e9titivement les \u00e9l\u00e9ments cons\u00e9cutifs d\u2019un tableau 2 \u00e0 2 et \u00e0 les permuter lorsqu'ils sont mal tri\u00e9s. Il doit son nom au fait qu'il d\u00e9place rapidement les plus grands \u00e9l\u00e9ments en fin de tableau, comme des bulles d'air qui remonteraient rapidement \u00e0 la surface d'un liquide. \u00c9tape 1 (1 \u00e8re it\u00e9ration) : On balaye tous les \u00e9l\u00e9ments de la liste en les comparant 2 \u00e0 2 et on les permute s\u2019ils ne sont pas dans le bon ordre. On remarque que le plus grand \u00e9l\u00e9ment est bien remont\u00e9 en fin de liste. \u00c9tape 2 (2 \u00e8me it\u00e9ration) : On recommence de nouveau en partant du 1 er \u00e9l\u00e9ment du tableau mais le dernier \u00e9l\u00e9ment de la liste n\u2019est pas compar\u00e9 car il se trouve d\u00e9j\u00e0 \u00e0 la bonne place. On poursuit ainsi les it\u00e9rations jusqu\u2019\u00e0 ce que le tableau soit totalement tri\u00e9. Algorithme du tri \u00e0 bulle. # Exercice 12 : \u00c9crire une fonction tri_bulles qui prend en argument une liste d\u2019entiers et retourne la liste tri\u00e9e. La tester. Tri par fusion # Principe # Le tri fusion est construit suivant la strat\u00e9gie \"diviser pour r\u00e9gner\", en anglais \"divide and conquer\". Le principe de base de la strat\u00e9gie \"diviser pour r\u00e9gner\" est que pour r\u00e9soudre un gros probl\u00e8me, il est souvent plus facile de le diviser en petits probl\u00e8mes \u00e9l\u00e9mentaires. Une fois chaque petit probl\u00e8me r\u00e9solu, il n\u2019y a plus qu\u2019\u00e0 combiner les diff\u00e9rentes solutions pour r\u00e9soudre le probl\u00e8me global. La m\u00e9thode \"diviser pour r\u00e9gner\" est tout \u00e0 fait applicable au probl\u00e8me de tri. Plut\u00f4t que de trier le tableau complet, il est pr\u00e9f\u00e9rable de trier deux sous tableaux de taille \u00e9gale, puis de fusionner les r\u00e9sultats. Exemple de tri par fusion appliqu\u00e9 \u00e0 un tableau de 7 \u00e9l\u00e9ments Principe du tri fusion Algorithme du tri par fusion # Cet algorithme n\u2019est pas au programme de 1 \u00e8re mais \u00e0 celui de terminale car il fait appel \u00e0 la r\u00e9cursivit\u00e9 (une fonction qui s\u2019appelle elle-m\u00eame). Tri fusion 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 def fusion ( lst1 : list , lst2 : list ) -> list : i1 , i2 , n1 , n2 = 0 , 0 , len ( lst1 ), len ( lst2 ) t = [] while i1 < n1 and i2 < n2 : if lst1 [ i1 ] < lst2 [ i2 ]: t . append ( lst1 [ i1 ]) i1 += 1 else : t . append ( lst2 [ i2 ]) i2 += 1 if i1 == n1 and i2 < n2 : t . extend ( lst2 [ i2 :]) if i2 == n2 and i1 < n1 : t . extend ( lst1 [ i1 :]) return t def tri_fusion ( L : list ) -> list : n = len ( L ) if n < 2 : return L else : m = n // 2 return fusion ( tri_fusion ( L [: m ]), tri_fusion ( L [ m :])) Comparaison du temps d'ex\u00e9cution des diff\u00e9rents algorithmes de tri # Afin de comparer les tems d\u2019ex\u00e9cution des diff\u00e9rents algorithmes de tri, nous allons utiliser la fonction time de la biblioth\u00e8que time . Cette fonction renvoie l\u2019heure UNIX, c\u2019est-\u00e0-dire le nombre de secondes \u00e9coul\u00e9es depuis un instant de r\u00e9f\u00e9rence : le premier janvier 1970 \u00e0 minuit. Cette fonction s\u2019utilise de la mani\u00e8re suivante : 1 2 3 4 5 6 import time t1 = time . time () # instructions \u00e0 chronom\u00e9trer t2 = time . time () dt = t2 - t1 print ( dt ) Exercice 13 : R\u00e9aliser un programme qui g\u00e9n\u00e8re al\u00e9atoirement une liste L de n entiers \u00e0 trier (dont les valeurs sont comprises entre 0 et 100000). Cette liste sera dupliqu\u00e9e en 4 listes L1, L2, L3 et L4. Les 4 listes dupliqu\u00e9es seront tri\u00e9es respectivement par s\u00e9lection, par insertion, par tri \u00e0 bulles et par fusion et ces 4 tris seront chronom\u00e9tr\u00e9s. n prendra les valeurs 100, 1000, 5000, 10000, 20000 et 30000 et on superposera 4 courbes (1 pour chaque tri) repr\u00e9sentant le temps de calcul en fonction du nombre d\u2019\u00e9l\u00e9ments \u00e0 trier. Conclure. Exercice 14 : Si le programme pr\u00e9c\u00e9dent est lanc\u00e9 plusieurs fois, les algorithmes de tri ont-ils toujours le m\u00eame classement au niveau de leur temps d'ex\u00e9cution ? Proposer une explication. Bibliographie # Le site de David Roche Le site des enseignants du lyc\u00e9e Blaise Pascal \u00e0 Saint-Dizier Le site de Gilles Lassus Le livre Num\u00e9rique et Sciences Informatiques aux \u00e9ditions ellipses de Thibaut Balabonski, Sylvain Conchon, Jean-Christophe Filli\u00e2tre et Kim Nguyen.","title":"Algorithmes de tri"},{"location":"Premiere/Algorithmique/tris/#algorithmes-de-tri","text":"","title":"Algorithmes de tri"},{"location":"Premiere/Algorithmique/tris/#pourquoi-trier-les-valeurs","text":"Les tris sont une des op\u00e9rations les plus souvent effectu\u00e9es par les ordinateurs, que ce soit dans les applications professionnelles (gestion des bases de donn\u00e9es, des op\u00e9rations bancaires...), la compression des donn\u00e9es ou les jeux vid\u00e9o. On estime qu\u2019un quart des cycles d\u2019horloge des ordinateurs sont consacr\u00e9s \u00e0 des op\u00e9rations de tri. Le co\u00fbt \u00e9nerg\u00e9tique de ces op\u00e9rations de tris repr\u00e9sente pr\u00e8s de 2% de la consommation totale d\u2019\u00e9lectricit\u00e9 en Europe. Sur des effectifs de plusieurs millions de donn\u00e9es, les temps d\u2019ex\u00e9cution des diff\u00e9rents algorithmes de tris varient entre une dizaine de secondes et une dizaine de jours. D\u2019o\u00f9 l\u2019importance d\u2019optimiser l\u2019efficacit\u00e9 de ces algorithmes. Bien que la plupart des algorithmes de tri soient connus depuis longtemps, la recherche sur leur optimisation est encore tr\u00e8s active. La derni\u00e8re am\u00e9lioration de l\u2019algorithme de tri \"Quicksort\" par Bentley & Sedgewick, consid\u00e9r\u00e9 comme ind\u00e9passable au niveau des tris par comparaison, date seulement de 2002. Les algorithmes de tri se divisent en deux grandes cat\u00e9gories de complexit\u00e9 : Les tris lents parmi lesquels on trouve : tri par insertion, le tri par s\u00e9lection, le tri \u00e0 bulles. Les tris rapides parmi lesquels on d\u00e9nombre : le tri fusion, le tri rapide (Quick Sort) ...","title":"Pourquoi trier les valeurs"},{"location":"Premiere/Algorithmique/tris/#travail-preparatoire-sur-les-listes","text":"","title":"Travail pr\u00e9paratoire sur les listes"},{"location":"Premiere/Algorithmique/tris/#generation-dune-liste-aleatoire","text":"Exercice 1 : \u00c9crire une fonction liste_al\u00e9atoire qui prend en argument le nombre d\u2019\u00e9l\u00e9ments entiers que l\u2019on veut g\u00e9n\u00e9rer ainsi que la valeur minimale et la valeur maximale prise par ces \u00e9l\u00e9ments. On nommera les param\u00e8tres de cette fonction nb , val_min et val_max . Cette fonction retournera la liste d\u2019entiers L g\u00e9n\u00e9r\u00e9e.","title":"G\u00e9n\u00e9ration d\u2019une liste al\u00e9atoire"},{"location":"Premiere/Algorithmique/tris/#recherche-du-plus-petit-element-dans-une-liste","text":"Exercice 2 : \u00c9crire une fonction minimum qui retourne la plus petite valeur d\u2019une liste d\u2019entiers pass\u00e9e en argument. On supposera que la liste ne contient que des entiers et qu\u2019elle n\u2019est pas vide. Bien entendu, on n\u2019utilisera pas ici la m\u00e9thode min de Python.","title":"Recherche du plus petit \u00e9l\u00e9ment dans une liste"},{"location":"Premiere/Algorithmique/tris/#recherche-de-la-position-de-la-plus-petite-valeur","text":"Exercice 3 : \u00c9crire une fonction index_minimum qui cette fois-ci retourne la position de la plus petite valeur d\u2019une liste d\u2019entiers pass\u00e9e en argument.","title":"Recherche de la position de la plus petite valeur"},{"location":"Premiere/Algorithmique/tris/#recherche-de-la-position-de-la-plus-petite-valeur-a-partir-dun-indice-de-position-donne","text":"Exercice 4 : \u00c9crire une fonction index_minimum_depuis qui retourne la position du plus petit \u00e9l\u00e9ment d\u2019une liste donn\u00e9e en argument, \u00e0 partir d\u2019un indice de position donn\u00e9 \u00e9galement en argument facultatif et dont la valeur par d\u00e9faut sera 0. On supposera que la liste pass\u00e9e en argument n\u2019est pas vide et que l\u2019indice de position existe bien dans la liste.","title":"Recherche de la position de la plus petite valeur \u00e0 partir d\u2019un indice de position donn\u00e9"},{"location":"Premiere/Algorithmique/tris/#echange-de-deux-cases-dans-une-liste","text":"Exercice 5 : \u00c9crire une fonction echange qui re\u00e7oit en param\u00e8tre une liste et deux entiers correspondant \u00e0 deux indices de position dans cette liste. Cette fonction retourne la liste apr\u00e8s avoir \u00e9chang\u00e9 les \u00e9l\u00e9ments correspondant aux deux indices pass\u00e9s en argument. L\u00e0 encore, on supposera ici que les 2 indices pass\u00e9s en argument ne sont pas en dehors de la liste.","title":"\u00c9change de deux cases dans une liste"},{"location":"Premiere/Algorithmique/tris/#differents-algorithmes-de-tri","text":"","title":"Diff\u00e9rents algorithmes de tri"},{"location":"Premiere/Algorithmique/tris/#tri-par-selection","text":"","title":"Tri par s\u00e9lection"},{"location":"Premiere/Algorithmique/tris/#principe","text":"Le principe est simple : pour un tri par valeurs croissantes de n \u00e9l\u00e9ments dans une liste : \u00c9tape 1 (premi\u00e8re it\u00e9ration) : On rechercher le plus petit \u00e9l\u00e9ment de la liste. Si c\u2019est le 1 er \u00e9l\u00e9ment, on ne fait rien ; Sinon on inverse ce plus petit \u00e9l\u00e9ment avec le 1 er \u00e9l\u00e9ment de la liste ; A l\u2019issue de cette \u00e9tape, le plus petit \u00e9l\u00e9ment est bien en d\u00e9but de la liste (indice 0). \u00c9tape 2 (deuxi\u00e8me it\u00e9ration) : On recherche ensuite le plus petit \u00e9l\u00e9ment dans la liste \u00e0 partir du deuxi\u00e8me \u00e9l\u00e9ment (le 1 er \u00e9tant d\u00e9j\u00e0 \u00e0 la bonne place). Si c\u2019est le 2 nd \u00e9l\u00e9ment de la liste, on ne fait rien, il est \u00e0 la bonne place ; Sinon on l\u2019inverse avec le 2 nd \u00e9l\u00e9ment de la liste. A l\u2019issue de cette \u00e9tape, le second plus petit \u00e9l\u00e9ment est en seconde position et n\u2019a plus \u00e0 \u00eatre d\u00e9plac\u00e9. On poursuit ainsi les it\u00e9rations jusqu\u2019\u00e0 ce que le tableau soit totalement tri\u00e9 Cela correspond \u00e0 l'animation suivante :","title":"Principe"},{"location":"Premiere/Algorithmique/tris/#algorithme-du-tri-par-selection","text":"Exercice 6 : \u00c9crire une fonction tri_selection_fct qui prend en argument un tableau d\u2019entiers et retourne le tableau tri\u00e9. On pourra bien entendu utiliser les fonctions r\u00e9alis\u00e9es auparavant. L'algorithme du tri par selection est donc le suivant : tri selection 1 2 3 4 5 6 7 8 9 10 11 def tri_selection ( lst : list ) -> list : \"\"\" trie la liste lst donn\u00e9e en argument \"\"\" for j in range ( len ( lst )): index_min = j min_val = lst [ j ] for i in range ( j + 1 , len ( lst )): if lst [ i ] < min_val : index_min = i min_val = lst [ i ] lst [ index_min ], lst [ j ] = lst [ j ], lst [ index_min ] return lst","title":"Algorithme du tri par s\u00e9lection"},{"location":"Premiere/Algorithmique/tris/#preuve-de-la-terminaison-de-lalgorithme","text":"Est-on s\u00fbr que notre algorithme va s'arr\u00eater ? \u00c0 l'observation du programme, il est constitu\u00e9 de deux boucles for imbriqu\u00e9es, il n'y a pas d'ambigu\u00eft\u00e9 : on ne peut pas rentrer dans une boucle infinie. Le programme s'arr\u00eate forc\u00e9ment au bout de d'un nombre fixe d'op\u00e9rations.","title":"Preuve de la terminaison de l'algorithme"},{"location":"Premiere/Algorithmique/tris/#complexite-de-lalgorithme","text":"Exercice 7 : \u00c9valuer la complexit\u00e9 de l'algorithmes de tri par insertion.","title":"Complexit\u00e9 de l'algorithme"},{"location":"Premiere/Algorithmique/tris/#tri-par-insertion","text":"","title":"Tri par insertion"},{"location":"Premiere/Algorithmique/tris/#principe_1","text":"Le tri par insertion est un algorithme de tri classique dont le principe est tr\u00e8s simple. C'est le tri que la plupart des personnes utilisent naturellement pour trier des cartes : prendre les cartes m\u00e9lang\u00e9es une \u00e0 une sur la table, et former une main en ins\u00e9rant chaque carte \u00e0 sa place.","title":"Principe"},{"location":"Premiere/Algorithmique/tris/#algorithme-du-tri-par-insertion","text":"tri insertion 1 2 3 4 5 6 7 def tri_insertion ( lst : list ) -> list : for i in range ( 1 , len ( lst )): j = i while j > 0 and lst [ j - 1 ] > lst [ j ] : lst [ j ], lst [ j - 1 ] = lst [ j - 1 ], lst [ j ] j = j - 1 return lst Exercice 8 : Effectuer la trace de cette fonction qui prend en argument la liste [ 10, 2, 8, 3, 1] . Ex\u00e9cuter le script afin de v\u00e9rifier qu\u2019elle r\u00e9alise bien la t\u00e2che demand\u00e9e.","title":"Algorithme du tri par insertion"},{"location":"Premiere/Algorithmique/tris/#invariant-de-boucle-terminaison","text":"Apr\u00e8s avoir d\u00e9fini un invariant de boucle, nous devons montrer trois choses : Initialisation : Il est vrai avant la premi\u00e8re it\u00e9ration de la boucle. Conservation : S\u2019il est vrai avant une it\u00e9ration de la boucle, il le reste avant l\u2019it\u00e9ration suivante. Terminaison : Une fois termin\u00e9e la boucle, l\u2019invariant fournit une propri\u00e9t\u00e9 utile qui aide \u00e0 montrer la validit\u00e9 de l\u2019algorithme. Si les deux premi\u00e8res propri\u00e9t\u00e9s sont v\u00e9rifi\u00e9es, alors l\u2019invariant est vrai avant chaque it\u00e9ration de la boucle. La troisi\u00e8me propri\u00e9t\u00e9 est utilis\u00e9e pour prouver la validit\u00e9 de l\u2019algorithme. On constate qu\u2019en d\u00e9but de chaque it\u00e9ration de la boucle for , la sous-liste lst [0\u2026 j-1] est tri\u00e9e . Nous allons consid\u00e9rer cette propri\u00e9t\u00e9 comme invariant de boucle. Initialisation : Exercice 9 : Montrer que l\u2019invariant de boucle est vrai avant la 1 \u00e8re it\u00e9ration. Conservation : Exercice 10 : Montrer que chaque it\u00e9ration conserve l\u2019invariant. Terminaison : Exercice 11 : Montrer que l\u2019invariant est v\u00e9rifi\u00e9 en fin de boucle.","title":"Invariant de boucle : terminaison"},{"location":"Premiere/Algorithmique/tris/#tri-a-bulles","text":"","title":"Tri \u00e0 bulles"},{"location":"Premiere/Algorithmique/tris/#principe_2","text":"Le tri \u00e0 bulles est un algorithme de tri qui consiste \u00e0 comparer r\u00e9p\u00e9titivement les \u00e9l\u00e9ments cons\u00e9cutifs d\u2019un tableau 2 \u00e0 2 et \u00e0 les permuter lorsqu'ils sont mal tri\u00e9s. Il doit son nom au fait qu'il d\u00e9place rapidement les plus grands \u00e9l\u00e9ments en fin de tableau, comme des bulles d'air qui remonteraient rapidement \u00e0 la surface d'un liquide. \u00c9tape 1 (1 \u00e8re it\u00e9ration) : On balaye tous les \u00e9l\u00e9ments de la liste en les comparant 2 \u00e0 2 et on les permute s\u2019ils ne sont pas dans le bon ordre. On remarque que le plus grand \u00e9l\u00e9ment est bien remont\u00e9 en fin de liste. \u00c9tape 2 (2 \u00e8me it\u00e9ration) : On recommence de nouveau en partant du 1 er \u00e9l\u00e9ment du tableau mais le dernier \u00e9l\u00e9ment de la liste n\u2019est pas compar\u00e9 car il se trouve d\u00e9j\u00e0 \u00e0 la bonne place. On poursuit ainsi les it\u00e9rations jusqu\u2019\u00e0 ce que le tableau soit totalement tri\u00e9.","title":"Principe"},{"location":"Premiere/Algorithmique/tris/#algorithme-du-tri-a-bulle","text":"Exercice 12 : \u00c9crire une fonction tri_bulles qui prend en argument une liste d\u2019entiers et retourne la liste tri\u00e9e. La tester.","title":"Algorithme du tri \u00e0 bulle."},{"location":"Premiere/Algorithmique/tris/#tri-par-fusion","text":"","title":"Tri par fusion"},{"location":"Premiere/Algorithmique/tris/#principe_3","text":"Le tri fusion est construit suivant la strat\u00e9gie \"diviser pour r\u00e9gner\", en anglais \"divide and conquer\". Le principe de base de la strat\u00e9gie \"diviser pour r\u00e9gner\" est que pour r\u00e9soudre un gros probl\u00e8me, il est souvent plus facile de le diviser en petits probl\u00e8mes \u00e9l\u00e9mentaires. Une fois chaque petit probl\u00e8me r\u00e9solu, il n\u2019y a plus qu\u2019\u00e0 combiner les diff\u00e9rentes solutions pour r\u00e9soudre le probl\u00e8me global. La m\u00e9thode \"diviser pour r\u00e9gner\" est tout \u00e0 fait applicable au probl\u00e8me de tri. Plut\u00f4t que de trier le tableau complet, il est pr\u00e9f\u00e9rable de trier deux sous tableaux de taille \u00e9gale, puis de fusionner les r\u00e9sultats. Exemple de tri par fusion appliqu\u00e9 \u00e0 un tableau de 7 \u00e9l\u00e9ments Principe du tri fusion","title":"Principe"},{"location":"Premiere/Algorithmique/tris/#algorithme-du-tri-par-fusion","text":"Cet algorithme n\u2019est pas au programme de 1 \u00e8re mais \u00e0 celui de terminale car il fait appel \u00e0 la r\u00e9cursivit\u00e9 (une fonction qui s\u2019appelle elle-m\u00eame). Tri fusion 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 def fusion ( lst1 : list , lst2 : list ) -> list : i1 , i2 , n1 , n2 = 0 , 0 , len ( lst1 ), len ( lst2 ) t = [] while i1 < n1 and i2 < n2 : if lst1 [ i1 ] < lst2 [ i2 ]: t . append ( lst1 [ i1 ]) i1 += 1 else : t . append ( lst2 [ i2 ]) i2 += 1 if i1 == n1 and i2 < n2 : t . extend ( lst2 [ i2 :]) if i2 == n2 and i1 < n1 : t . extend ( lst1 [ i1 :]) return t def tri_fusion ( L : list ) -> list : n = len ( L ) if n < 2 : return L else : m = n // 2 return fusion ( tri_fusion ( L [: m ]), tri_fusion ( L [ m :]))","title":"Algorithme du tri par fusion"},{"location":"Premiere/Algorithmique/tris/#comparaison-du-temps-dexecution-des-differents-algorithmes-de-tri","text":"Afin de comparer les tems d\u2019ex\u00e9cution des diff\u00e9rents algorithmes de tri, nous allons utiliser la fonction time de la biblioth\u00e8que time . Cette fonction renvoie l\u2019heure UNIX, c\u2019est-\u00e0-dire le nombre de secondes \u00e9coul\u00e9es depuis un instant de r\u00e9f\u00e9rence : le premier janvier 1970 \u00e0 minuit. Cette fonction s\u2019utilise de la mani\u00e8re suivante : 1 2 3 4 5 6 import time t1 = time . time () # instructions \u00e0 chronom\u00e9trer t2 = time . time () dt = t2 - t1 print ( dt ) Exercice 13 : R\u00e9aliser un programme qui g\u00e9n\u00e8re al\u00e9atoirement une liste L de n entiers \u00e0 trier (dont les valeurs sont comprises entre 0 et 100000). Cette liste sera dupliqu\u00e9e en 4 listes L1, L2, L3 et L4. Les 4 listes dupliqu\u00e9es seront tri\u00e9es respectivement par s\u00e9lection, par insertion, par tri \u00e0 bulles et par fusion et ces 4 tris seront chronom\u00e9tr\u00e9s. n prendra les valeurs 100, 1000, 5000, 10000, 20000 et 30000 et on superposera 4 courbes (1 pour chaque tri) repr\u00e9sentant le temps de calcul en fonction du nombre d\u2019\u00e9l\u00e9ments \u00e0 trier. Conclure. Exercice 14 : Si le programme pr\u00e9c\u00e9dent est lanc\u00e9 plusieurs fois, les algorithmes de tri ont-ils toujours le m\u00eame classement au niveau de leur temps d'ex\u00e9cution ? Proposer une explication.","title":"Comparaison du temps d'ex\u00e9cution des diff\u00e9rents algorithmes de tri"},{"location":"Premiere/Algorithmique/tris/#bibliographie","text":"Le site de David Roche Le site des enseignants du lyc\u00e9e Blaise Pascal \u00e0 Saint-Dizier Le site de Gilles Lassus Le livre Num\u00e9rique et Sciences Informatiques aux \u00e9ditions ellipses de Thibaut Balabonski, Sylvain Conchon, Jean-Christophe Filli\u00e2tre et Kim Nguyen.","title":"Bibliographie"},{"location":"Premiere/Algorithmique/tris_correction/","text":"Algorithmes de tri # Pourquoi trier les valeurs # Les tris sont une des op\u00e9rations les plus souvent effectu\u00e9es par les ordinateurs, que ce soit dans les applications professionnelles (gestion des bases de donn\u00e9es, des op\u00e9rations bancaires...), la compression des donn\u00e9es ou les jeux vid\u00e9o. On estime qu\u2019un quart des cycles d\u2019horloge des ordinateurs sont consacr\u00e9s \u00e0 des op\u00e9rations de tri. Le co\u00fbt \u00e9nerg\u00e9tique de ces op\u00e9rations de tris repr\u00e9sente pr\u00e8s de 2% de la consommation totale d\u2019\u00e9lectricit\u00e9 en Europe. Sur des effectifs de plusieurs millions de donn\u00e9es, les temps d\u2019ex\u00e9cution des diff\u00e9rents algorithmes de tris varient entre une dizaine de secondes et une dizaine de jours. D\u2019o\u00f9 l\u2019importance d\u2019optimiser l\u2019efficacit\u00e9 de ces algorithmes. Bien que la plupart des algorithmes de tri soient connus depuis longtemps, la recherche sur leur optimisation est encore tr\u00e8s active. La derni\u00e8re am\u00e9lioration de l\u2019algorithme de tri \"Quicksort\" par Bentley & Sedgewick, consid\u00e9r\u00e9 comme ind\u00e9passable au niveau des tris par comparaison, date seulement de 2002. Les algorithmes de tri se divisent en deux grandes cat\u00e9gories de complexit\u00e9 : Les tris lents parmi lesquels on trouve : tri par insertion, le tri par s\u00e9lection, le tri \u00e0 bulles. Les tris rapides parmi lesquels on d\u00e9nombre : le tri fusion, le tri rapide (Quick Sort) ... Travail pr\u00e9paratoire sur les listes # G\u00e9n\u00e9ration d\u2019une liste al\u00e9atoire # Exercice 1 : \u00c9crire une fonction liste_al\u00e9atoire qui prend en argument le nombre d\u2019\u00e9l\u00e9ments entiers que l\u2019on veut g\u00e9n\u00e9rer ainsi que la valeur minimale et la valeur maximale prise par ces \u00e9l\u00e9ments. On nommera les param\u00e8tres de cette fonction nb , val_min et val_max . Cette fonction retournera la liste d\u2019entiers L g\u00e9n\u00e9r\u00e9e. R\u00e9ponse 1 2 3 4 5 6 7 8 from random import * def liste_aleatoire ( nb : int , val_min : int , val_max : int ) -> int : L = [] for i in range ( nb ): x = randint ( val_min , val_max ) L . append ( x ) return L Recherche du plus petit \u00e9l\u00e9ment dans une liste # Exercice 2 : \u00c9crire une fonction minimum qui retourne la plus petite valeur d\u2019une liste d\u2019entiers pass\u00e9e en argument. On supposera que la liste ne contient que des entiers et qu\u2019elle n\u2019est pas vide. Bien entendu, on n\u2019utilisera pas ici la m\u00e9thode min de Python. R\u00e9ponse 1 2 3 4 5 6 def minimum ( L : list ) -> int : minimum = L [ 0 ] for i in range ( 1 , len ( L )): if L [ i ] < minimum : minimum = L [ i ] return minimum Recherche de la position de la plus petite valeur # Exercice 3 : \u00c9crire une fonction index_minimum qui cette fois-ci retourne la position de la plus petite valeur d\u2019une liste d\u2019entiers pass\u00e9e en argument. R\u00e9ponse 1 2 3 4 5 6 7 8 def index_minimum ( L : list ) -> int : index_min = 0 minimum = L [ 0 ] for i in range ( 1 , len ( L )): if L [ i ] < minimum : minimum = L [ i ] index_min = i return index_min Recherche de la position de la plus petite valeur \u00e0 partir d\u2019un indice de position donn\u00e9 # Exercice 4 : \u00c9crire une fonction index_minimum_depuis qui retourne la position du plus petit \u00e9l\u00e9ment d\u2019une liste donn\u00e9e en argument, \u00e0 partir d\u2019un indice de position donn\u00e9 \u00e9galement en argument facultatif et dont la valeur par d\u00e9faut sera 0. On supposera que la liste pass\u00e9e en argument n\u2019est pas vide et que l\u2019indice de position existe bien dans la liste. R\u00e9ponse 1 2 3 4 5 6 7 8 def index_minimum_depuis ( L : list , n = 0 ) -> int : index_min = n minimum = L [ n ] for i in range ( n , len ( L )): if L [ i ] < minimum : minimum = L [ i ] index_min = i return index_min \u00c9change de deux cases dans une liste # Exercice 5 : \u00c9crire une fonction echange qui re\u00e7oit en param\u00e8tre une liste et deux entiers correspondant \u00e0 deux indices de position dans cette liste. Cette fonction retourne la liste apr\u00e8s avoir \u00e9chang\u00e9 les \u00e9l\u00e9ments correspondant aux deux indices pass\u00e9s en argument. L\u00e0 encore, on supposera ici que les 2 indices pass\u00e9s en argument ne sont pas en dehors de la liste. R\u00e9ponse 1 2 3 4 5 def echange ( L : list , i1 : int , i2 : int ) -> list : a = L [ i1 ] L [ i1 ] = L [ i2 ] L [ i2 ] = a return L ou en python 1 2 3 def echange ( L : list , i1 : int , i2 : int ) -> list : L [ i1 ], L [ i2 ] = L [ i2 ], L [ i1 ] return L Diff\u00e9rents algorithmes de tri # Tri par s\u00e9lection # Principe # Le principe est simple : pour un tri par valeurs croissantes de n \u00e9l\u00e9ments dans une liste : \u00c9tape 1 (premi\u00e8re it\u00e9ration) : On rechercher le plus petit \u00e9l\u00e9ment de la liste. Si c\u2019est le 1 er \u00e9l\u00e9ment, on ne fait rien ; Sinon on inverse ce plus petit \u00e9l\u00e9ment avec le 1 er \u00e9l\u00e9ment de la liste ; A l\u2019issue de cette \u00e9tape, le plus petit \u00e9l\u00e9ment est bien en d\u00e9but de la liste (indice 0). \u00c9tape 2 (deuxi\u00e8me it\u00e9ration) : On recherche ensuite le plus petit \u00e9l\u00e9ment dans la liste \u00e0 partir du deuxi\u00e8me \u00e9l\u00e9ment (le 1 er \u00e9tant d\u00e9j\u00e0 \u00e0 la bonne place). Si c\u2019est le 2 nd \u00e9l\u00e9ment de la liste, on ne fait rien, il est \u00e0 la bonne place ; Sinon on l\u2019inverse avec le 2 nd \u00e9l\u00e9ment de la liste. A l\u2019issue de cette \u00e9tape, le second plus petit \u00e9l\u00e9ment est en seconde position et n\u2019a plus \u00e0 \u00eatre d\u00e9plac\u00e9. On poursuit ainsi les it\u00e9rations jusqu\u2019\u00e0 ce que le tableau soit totalement tri\u00e9 Cela correspond \u00e0 l'animation suivante : Algorithme du tri par s\u00e9lection # Exercice 6 : \u00c9crire une fonction tri_selection_fct qui prend en argument un tableau d\u2019entiers et retourne le tableau tri\u00e9. On pourra bien entendu utiliser les fonctions r\u00e9alis\u00e9es auparavant. R\u00e9ponse 1 2 3 4 5 def tri_selection_fct ( lst ): for i in range ( len ( lst )): index_min = get_index_min_since ( lst , i ) echange ( lst , index_min , i ) return lst L'algorithme du tri par selection est donc le suivant : tri selection 1 2 3 4 5 6 7 8 9 10 11 def tri_selection ( lst : list ) -> list : \"\"\" trie la liste lst donn\u00e9e en argument \"\"\" for j in range ( len ( lst )): index_min = j min_val = lst [ j ] for i in range ( j + 1 , len ( lst )): if lst [ i ] < min_val : index_min = i min_val = lst [ i ] lst [ index_min ], lst [ j ] = lst [ j ], lst [ index_min ] return lst Preuve de la terminaison de l'algorithme # Est-on s\u00fbr que notre algorithme va s'arr\u00eater ? \u00c0 l'observation du programme, il est constitu\u00e9 de deux boucles for imbriqu\u00e9es, il n'y a pas d'ambigu\u00eft\u00e9 : on ne peut pas rentrer dans une boucle infinie. Le programme s'arr\u00eate forc\u00e9ment au bout de d'un nombre fixe d'op\u00e9rations. Complexit\u00e9 de l'algorithme # Exercice 7 : \u00c9valuer la complexit\u00e9 de l'algorithmes de tri par insertion. R\u00e9ponse Le tri par s\u00e9lection a une complexit\u00e9 quadratique. Tri par insertion # Principe # Le tri par insertion est un algorithme de tri classique dont le principe est tr\u00e8s simple. C'est le tri que la plupart des personnes utilisent naturellement pour trier des cartes : prendre les cartes m\u00e9lang\u00e9es une \u00e0 une sur la table, et former une main en ins\u00e9rant chaque carte \u00e0 sa place. Algorithme du tri par insertion # tri insertion 1 2 3 4 5 6 7 def tri_insertion ( lst : list ) -> list : for i in range ( 1 , len ( lst )): j = i while j > 0 and lst [ j - 1 ] > lst [ j ] : lst [ j ], lst [ j - 1 ] = lst [ j - 1 ], lst [ j ] j = j - 1 return lst Exercice 8 : Effectuer la trace de cette fonction qui prend en argument la liste [ 10, 2, 8, 3, 1] . Ex\u00e9cuter le script afin de v\u00e9rifier qu\u2019elle r\u00e9alise bien la t\u00e2che demand\u00e9e. R\u00e9ponse Ligne I J Lst[0] Lst[1] Lst[2] Lst[3] Lst[4] Commentaire 1 10 2 8 3 1 2 1 10 2 8 3 1 I < 5 3 1 1 10 2 8 3 1 4 1 1 10 2 8 3 1 J>0 10>2 5 1 1 2 10 8 3 1 6 1 0 2 10 8 3 1 4 1 0 2 10 8 3 1 J=0 2 2 0 2 10 8 3 1 I < 5 3 2 2 2 10 8 3 1 4 2 2 2 10 8 3 1 J>0 10>8 5 2 2 2 8 10 3 1 6 2 1 2 8 10 3 1 4 2 1 2 8 10 3 1 J>0 2<8 2 3 1 2 8 10 3 1 I < 5 3 3 3 2 8 10 3 1 4 3 3 2 8 10 3 1 J > 0 10 > 3 5 3 3 2 8 3 10 1 6 3 2 2 8 3 10 1 4 3 2 2 8 3 10 1 J > 0 8 > 3 5 3 2 2 3 8 10 1 6 3 1 2 3 8 10 1 4 3 1 2 3 8 10 1 J > 0 2<3 2 4 1 2 3 8 10 1 I<5 3 4 4 2 3 8 10 1 4 4 4 2 3 8 10 1 J > 0 10 > 1 5 4 4 2 3 8 1 10 6 4 3 2 3 8 1 10 4 4 3 2 3 8 1 10 J>0 8>1 5 4 3 2 3 1 8 10 6 4 2 2 3 1 8 10 4 4 2 2 3 1 8 10 J>0 3>1 5 4 2 2 1 3 8 10 6 4 1 2 1 3 8 10 4 4 1 2 1 3 8 10 J>0 2>1 5 4 1 1 2 3 8 10 6 4 0 1 2 3 8 10 4 4 0 1 2 3 8 10 J<0 2 5 0 1 2 3 8 10 I=5 7 4 0 1 2 3 8 10 Invariant de boucle : terminaison # Apr\u00e8s avoir d\u00e9fini un invariant de boucle, nous devons montrer trois choses : Initialisation : Il est vrai avant la premi\u00e8re it\u00e9ration de la boucle. Conservation : S\u2019il est vrai avant une it\u00e9ration de la boucle, il le reste avant l\u2019it\u00e9ration suivante. Terminaison : Une fois termin\u00e9e la boucle, l\u2019invariant fournit une propri\u00e9t\u00e9 utile qui aide \u00e0 montrer la validit\u00e9 de l\u2019algorithme. Si les deux premi\u00e8res propri\u00e9t\u00e9s sont v\u00e9rifi\u00e9es, alors l\u2019invariant est vrai avant chaque it\u00e9ration de la boucle. La troisi\u00e8me propri\u00e9t\u00e9 est utilis\u00e9e pour prouver la validit\u00e9 de l\u2019algorithme. On constate qu\u2019en d\u00e9but de chaque it\u00e9ration de la boucle for , la sous-liste lst [0\u2026 j-1] est tri\u00e9e . Nous allons consid\u00e9rer cette propri\u00e9t\u00e9 comme invariant de boucle. Initialisation : Exercice 9 : Montrer que l\u2019invariant de boucle est vrai avant la 1 \u00e8re it\u00e9ration. R\u00e9ponse La 1\u00e8re it\u00e9ration d\u00e9marre \u00e0 i = 1 . Le sous-tableau se compose donc uniquement de l\u2019\u00e9l\u00e9ment lst[0] qui est bien \u00e9videmment tri\u00e9. L\u2019invariant est donc bien v\u00e9rifi\u00e9 avant la premi\u00e8re it\u00e9ration de la boucle. Conservation : Exercice 10 : Montrer que chaque it\u00e9ration conserve l\u2019invariant. R\u00e9ponse \u00c0 l\u2019it\u00e9ration i : elt = L[i] est l\u2019\u00e9l\u00e9ment \u00e0 positionner et la sous-liste L[0]...L[i-1] est d\u00e9j\u00e0 tri\u00e9e. On balaye cette sous-liste en partant de de la droite vers la gauche, en comparant \u00e0 chaque fois les \u00e9l\u00e9ments de la sous-liste avec elt . Lorsque la bonne position est trouv\u00e9e (dans le pire des cas en L[0] ) on lui affecte la valeur elt . La nouvelle sous-liste L[0]...L[i] est alors tri\u00e9e. Terminaison : Exercice 11 : Montrer que l\u2019invariant est v\u00e9rifi\u00e9 en fin de boucle. R\u00e9ponse \u00c0 la derni\u00e8re it\u00e9ration i prend la valeur len(lst)-1 et \u00e0 la fin de cette it\u00e9ration le dernier \u00e9l\u00e9ment lst[len(list)-1] de la liste est positionn\u00e9 \u00e0 la bonne place. La liste est alors totalement tri\u00e9e. Lorsque i prend la valeur len(lst) alors le programme sort de la boucle for , la liste demeure bien tri\u00e9e. Tri \u00e0 bulles # Principe # Le tri \u00e0 bulles est un algorithme de tri qui consiste \u00e0 comparer r\u00e9p\u00e9titivement les \u00e9l\u00e9ments cons\u00e9cutifs d\u2019un tableau 2 \u00e0 2 et \u00e0 les permuter lorsqu'ils sont mal tri\u00e9s. Il doit son nom au fait qu'il d\u00e9place rapidement les plus grands \u00e9l\u00e9ments en fin de tableau, comme des bulles d'air qui remonteraient rapidement \u00e0 la surface d'un liquide. \u00c9tape 1 (1 \u00e8re it\u00e9ration) : On balaye tous les \u00e9l\u00e9ments de la liste en les comparant 2 \u00e0 2 et on les permute s\u2019ils ne sont pas dans le bon ordre. On remarque que le plus grand \u00e9l\u00e9ment est bien remont\u00e9 en fin de liste. \u00c9tape 2 (2 \u00e8me it\u00e9ration) : On recommence de nouveau en partant du 1 er \u00e9l\u00e9ment du tableau mais le dernier \u00e9l\u00e9ment de la liste n\u2019est pas compar\u00e9 car il se trouve d\u00e9j\u00e0 \u00e0 la bonne place. On poursuit ainsi les it\u00e9rations jusqu\u2019\u00e0 ce que le tableau soit totalement tri\u00e9. Algorithme du tri \u00e0 bulle. # Exercice 12 : \u00c9crire une fonction tri_bulles qui prend en argument une liste d\u2019entiers et retourne la liste tri\u00e9e. La tester. R\u00e9ponse tri \u00e0 bulle 1 2 3 4 5 6 7 8 9 10 def tri_bulle ( lst ): for i in range ( len ( lst )): for j in range ( 0 , len ( lst ) - i - 1 ): if lst [ j ] > lst [ j + 1 ]: lst [ j ], lst [ j + 1 ] = lst [ j + 1 ], lst [ j ] return lst #pgm principal tab = [ 4 , 2 , 1 , 9 , 8 , 5 , 3 , 6 , 7 ] print ( tri_bulles ( tab )) Tri par fusion # Principe # Le tri fusion est construit suivant la strat\u00e9gie \"diviser pour r\u00e9gner\", en anglais \"divide and conquer\". Le principe de base de la strat\u00e9gie \"diviser pour r\u00e9gner\" est que pour r\u00e9soudre un gros probl\u00e8me, il est souvent plus facile de le diviser en petits probl\u00e8mes \u00e9l\u00e9mentaires. Une fois chaque petit probl\u00e8me r\u00e9solu, il n\u2019y a plus qu\u2019\u00e0 combiner les diff\u00e9rentes solutions pour r\u00e9soudre le probl\u00e8me global. La m\u00e9thode \"diviser pour r\u00e9gner\" est tout \u00e0 fait applicable au probl\u00e8me de tri. Plut\u00f4t que de trier le tableau complet, il est pr\u00e9f\u00e9rable de trier deux sous tableaux de taille \u00e9gale, puis de fusionner les r\u00e9sultats. Exemple de tri par fusion appliqu\u00e9 \u00e0 un tableau de 7 \u00e9l\u00e9ments Principe du tri fusion Algorithme du tri par fusion # Cet algorithme n\u2019est pas au programme de 1 \u00e8re mais \u00e0 celui de terminale car il fait appel \u00e0 la r\u00e9cursivit\u00e9 (une fonction qui s\u2019appelle elle-m\u00eame). Tri fusion 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 def fusion ( lst1 : list , lst2 : list ) -> list : i1 , i2 , n1 , n2 = 0 , 0 , len ( lst1 ), len ( lst2 ) t = [] while i1 < n1 and i2 < n2 : if lst1 [ i1 ] < lst2 [ i2 ]: t . append ( lst1 [ i1 ]) i1 += 1 else : t . append ( lst2 [ i2 ]) i2 += 1 if i1 == n1 and i2 < n2 : t . extend ( lst2 [ i2 :]) if i2 == n2 and i1 < n1 : t . extend ( lst1 [ i1 :]) return t def tri_fusion ( L : list ) -> list : n = len ( L ) if n < 2 : return L else : m = n // 2 return fusion ( tri_fusion ( L [: m ]), tri_fusion ( L [ m :])) Comparaison du temps d'ex\u00e9cution des diff\u00e9rents algorithmes de tri # Afin de comparer les tems d\u2019ex\u00e9cution des diff\u00e9rents algorithmes de tri, nous allons utiliser la fonction time de la biblioth\u00e8que time . Cette fonction renvoie l\u2019heure UNIX, c\u2019est-\u00e0-dire le nombre de secondes \u00e9coul\u00e9es depuis un instant de r\u00e9f\u00e9rence : le premier janvier 1970 \u00e0 minuit. Cette fonction s\u2019utilise de la mani\u00e8re suivante : 1 2 3 4 5 6 import time t1 = time . time () # instructions \u00e0 chronom\u00e9trer t2 = time . time () dt = t2 - t1 print ( dt ) Exercice 13 : R\u00e9aliser un programme qui g\u00e9n\u00e8re al\u00e9atoirement une liste L de n entiers \u00e0 trier (dont les valeurs sont comprises entre 0 et 100000). Cette liste sera dupliqu\u00e9e en 4 listes L1, L2, L3 et L4. Les 4 listes dupliqu\u00e9es seront tri\u00e9es respectivement par s\u00e9lection, par insertion, par tri \u00e0 bulles et par fusion et ces 4 tris seront chronom\u00e9tr\u00e9s. n prendra les valeurs 100, 1000, 5000, 10000, 20000 et 30000 et on superposera 4 courbes (1 pour chaque tri) repr\u00e9sentant le temps de calcul en fonction du nombre d\u2019\u00e9l\u00e9ments \u00e0 trier. Conclure. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 nbre_element = [ 10 , 20 , 30 , 50 , 100 , 200 , 300 , 400 , 500 ] temps_selection = [] temps_insertion = [] temps_bulle = [] temps_fusion = [] for i in nbre_element : L = get_random_list ( i , - 1000 , 1000 ) L1 = L . copy () L2 = L . copy () L3 = L . copy () L4 = L . copy () t1 = time . time () tri_selection ( L1 ) t2 = time . time () temps_selection . append ( t2 - t1 ) t1 = time . time () tri_insertion ( L2 ) t2 = time . time () temps_insertion . append ( t2 - t1 ) t1 = time . time () tri_bulle ( L3 ) t2 = time . time () temps_bulle . append ( t2 - t1 ) t1 = time . time () tri_fusion ( L4 ) t2 = time . time () temps_fusion . append ( t2 - t1 ) plt . plot ( nbre_element , temps_selection , \"g-\" , label = \"selection\" ) plt . plot ( nbre_element , temps_insertion , \"b-\" , label = \"insertion\" ) plt . plot ( nbre_element , temps_bulle , \"orange\" , label = \"bulle\" ) plt . plot ( nbre_element , temps_fusion , \"r-\" , label = \"fusion\" ) plt . xlabel ( \"Nombre d'\u00e9l\u00e9ments $n$ dans les tableaux\" ) plt . ylabel ( \"temps mis par les diff\u00e9rents algoritmes (s)\" ) plt . title ( \"temps en fonction de $n$\" ) plt . grid () plt . legend () plt . show () [width=75%] Bibliographie # Le site de David Roche Le site des enseignants du lyc\u00e9e Blaise Pascal \u00e0 Saint-Dizier Le site de Gilles Lassus Le livre Num\u00e9rique et Sciences Informatiques aux \u00e9ditions ellipses de Thibaut Balabonski, Sylvain Conchon, Jean-Christophe Filli\u00e2tre et Kim Nguyen.","title":"Algo de tri"},{"location":"Premiere/Algorithmique/tris_correction/#algorithmes-de-tri","text":"","title":"Algorithmes de tri"},{"location":"Premiere/Algorithmique/tris_correction/#pourquoi-trier-les-valeurs","text":"Les tris sont une des op\u00e9rations les plus souvent effectu\u00e9es par les ordinateurs, que ce soit dans les applications professionnelles (gestion des bases de donn\u00e9es, des op\u00e9rations bancaires...), la compression des donn\u00e9es ou les jeux vid\u00e9o. On estime qu\u2019un quart des cycles d\u2019horloge des ordinateurs sont consacr\u00e9s \u00e0 des op\u00e9rations de tri. Le co\u00fbt \u00e9nerg\u00e9tique de ces op\u00e9rations de tris repr\u00e9sente pr\u00e8s de 2% de la consommation totale d\u2019\u00e9lectricit\u00e9 en Europe. Sur des effectifs de plusieurs millions de donn\u00e9es, les temps d\u2019ex\u00e9cution des diff\u00e9rents algorithmes de tris varient entre une dizaine de secondes et une dizaine de jours. D\u2019o\u00f9 l\u2019importance d\u2019optimiser l\u2019efficacit\u00e9 de ces algorithmes. Bien que la plupart des algorithmes de tri soient connus depuis longtemps, la recherche sur leur optimisation est encore tr\u00e8s active. La derni\u00e8re am\u00e9lioration de l\u2019algorithme de tri \"Quicksort\" par Bentley & Sedgewick, consid\u00e9r\u00e9 comme ind\u00e9passable au niveau des tris par comparaison, date seulement de 2002. Les algorithmes de tri se divisent en deux grandes cat\u00e9gories de complexit\u00e9 : Les tris lents parmi lesquels on trouve : tri par insertion, le tri par s\u00e9lection, le tri \u00e0 bulles. Les tris rapides parmi lesquels on d\u00e9nombre : le tri fusion, le tri rapide (Quick Sort) ...","title":"Pourquoi trier les valeurs"},{"location":"Premiere/Algorithmique/tris_correction/#travail-preparatoire-sur-les-listes","text":"","title":"Travail pr\u00e9paratoire sur les listes"},{"location":"Premiere/Algorithmique/tris_correction/#generation-dune-liste-aleatoire","text":"Exercice 1 : \u00c9crire une fonction liste_al\u00e9atoire qui prend en argument le nombre d\u2019\u00e9l\u00e9ments entiers que l\u2019on veut g\u00e9n\u00e9rer ainsi que la valeur minimale et la valeur maximale prise par ces \u00e9l\u00e9ments. On nommera les param\u00e8tres de cette fonction nb , val_min et val_max . Cette fonction retournera la liste d\u2019entiers L g\u00e9n\u00e9r\u00e9e. R\u00e9ponse 1 2 3 4 5 6 7 8 from random import * def liste_aleatoire ( nb : int , val_min : int , val_max : int ) -> int : L = [] for i in range ( nb ): x = randint ( val_min , val_max ) L . append ( x ) return L","title":"G\u00e9n\u00e9ration d\u2019une liste al\u00e9atoire"},{"location":"Premiere/Algorithmique/tris_correction/#recherche-du-plus-petit-element-dans-une-liste","text":"Exercice 2 : \u00c9crire une fonction minimum qui retourne la plus petite valeur d\u2019une liste d\u2019entiers pass\u00e9e en argument. On supposera que la liste ne contient que des entiers et qu\u2019elle n\u2019est pas vide. Bien entendu, on n\u2019utilisera pas ici la m\u00e9thode min de Python. R\u00e9ponse 1 2 3 4 5 6 def minimum ( L : list ) -> int : minimum = L [ 0 ] for i in range ( 1 , len ( L )): if L [ i ] < minimum : minimum = L [ i ] return minimum","title":"Recherche du plus petit \u00e9l\u00e9ment dans une liste"},{"location":"Premiere/Algorithmique/tris_correction/#recherche-de-la-position-de-la-plus-petite-valeur","text":"Exercice 3 : \u00c9crire une fonction index_minimum qui cette fois-ci retourne la position de la plus petite valeur d\u2019une liste d\u2019entiers pass\u00e9e en argument. R\u00e9ponse 1 2 3 4 5 6 7 8 def index_minimum ( L : list ) -> int : index_min = 0 minimum = L [ 0 ] for i in range ( 1 , len ( L )): if L [ i ] < minimum : minimum = L [ i ] index_min = i return index_min","title":"Recherche de la position de la plus petite valeur"},{"location":"Premiere/Algorithmique/tris_correction/#recherche-de-la-position-de-la-plus-petite-valeur-a-partir-dun-indice-de-position-donne","text":"Exercice 4 : \u00c9crire une fonction index_minimum_depuis qui retourne la position du plus petit \u00e9l\u00e9ment d\u2019une liste donn\u00e9e en argument, \u00e0 partir d\u2019un indice de position donn\u00e9 \u00e9galement en argument facultatif et dont la valeur par d\u00e9faut sera 0. On supposera que la liste pass\u00e9e en argument n\u2019est pas vide et que l\u2019indice de position existe bien dans la liste. R\u00e9ponse 1 2 3 4 5 6 7 8 def index_minimum_depuis ( L : list , n = 0 ) -> int : index_min = n minimum = L [ n ] for i in range ( n , len ( L )): if L [ i ] < minimum : minimum = L [ i ] index_min = i return index_min","title":"Recherche de la position de la plus petite valeur \u00e0 partir d\u2019un indice de position donn\u00e9"},{"location":"Premiere/Algorithmique/tris_correction/#echange-de-deux-cases-dans-une-liste","text":"Exercice 5 : \u00c9crire une fonction echange qui re\u00e7oit en param\u00e8tre une liste et deux entiers correspondant \u00e0 deux indices de position dans cette liste. Cette fonction retourne la liste apr\u00e8s avoir \u00e9chang\u00e9 les \u00e9l\u00e9ments correspondant aux deux indices pass\u00e9s en argument. L\u00e0 encore, on supposera ici que les 2 indices pass\u00e9s en argument ne sont pas en dehors de la liste. R\u00e9ponse 1 2 3 4 5 def echange ( L : list , i1 : int , i2 : int ) -> list : a = L [ i1 ] L [ i1 ] = L [ i2 ] L [ i2 ] = a return L ou en python 1 2 3 def echange ( L : list , i1 : int , i2 : int ) -> list : L [ i1 ], L [ i2 ] = L [ i2 ], L [ i1 ] return L","title":"\u00c9change de deux cases dans une liste"},{"location":"Premiere/Algorithmique/tris_correction/#differents-algorithmes-de-tri","text":"","title":"Diff\u00e9rents algorithmes de tri"},{"location":"Premiere/Algorithmique/tris_correction/#tri-par-selection","text":"","title":"Tri par s\u00e9lection"},{"location":"Premiere/Algorithmique/tris_correction/#principe","text":"Le principe est simple : pour un tri par valeurs croissantes de n \u00e9l\u00e9ments dans une liste : \u00c9tape 1 (premi\u00e8re it\u00e9ration) : On rechercher le plus petit \u00e9l\u00e9ment de la liste. Si c\u2019est le 1 er \u00e9l\u00e9ment, on ne fait rien ; Sinon on inverse ce plus petit \u00e9l\u00e9ment avec le 1 er \u00e9l\u00e9ment de la liste ; A l\u2019issue de cette \u00e9tape, le plus petit \u00e9l\u00e9ment est bien en d\u00e9but de la liste (indice 0). \u00c9tape 2 (deuxi\u00e8me it\u00e9ration) : On recherche ensuite le plus petit \u00e9l\u00e9ment dans la liste \u00e0 partir du deuxi\u00e8me \u00e9l\u00e9ment (le 1 er \u00e9tant d\u00e9j\u00e0 \u00e0 la bonne place). Si c\u2019est le 2 nd \u00e9l\u00e9ment de la liste, on ne fait rien, il est \u00e0 la bonne place ; Sinon on l\u2019inverse avec le 2 nd \u00e9l\u00e9ment de la liste. A l\u2019issue de cette \u00e9tape, le second plus petit \u00e9l\u00e9ment est en seconde position et n\u2019a plus \u00e0 \u00eatre d\u00e9plac\u00e9. On poursuit ainsi les it\u00e9rations jusqu\u2019\u00e0 ce que le tableau soit totalement tri\u00e9 Cela correspond \u00e0 l'animation suivante :","title":"Principe"},{"location":"Premiere/Algorithmique/tris_correction/#algorithme-du-tri-par-selection","text":"Exercice 6 : \u00c9crire une fonction tri_selection_fct qui prend en argument un tableau d\u2019entiers et retourne le tableau tri\u00e9. On pourra bien entendu utiliser les fonctions r\u00e9alis\u00e9es auparavant. R\u00e9ponse 1 2 3 4 5 def tri_selection_fct ( lst ): for i in range ( len ( lst )): index_min = get_index_min_since ( lst , i ) echange ( lst , index_min , i ) return lst L'algorithme du tri par selection est donc le suivant : tri selection 1 2 3 4 5 6 7 8 9 10 11 def tri_selection ( lst : list ) -> list : \"\"\" trie la liste lst donn\u00e9e en argument \"\"\" for j in range ( len ( lst )): index_min = j min_val = lst [ j ] for i in range ( j + 1 , len ( lst )): if lst [ i ] < min_val : index_min = i min_val = lst [ i ] lst [ index_min ], lst [ j ] = lst [ j ], lst [ index_min ] return lst","title":"Algorithme du tri par s\u00e9lection"},{"location":"Premiere/Algorithmique/tris_correction/#preuve-de-la-terminaison-de-lalgorithme","text":"Est-on s\u00fbr que notre algorithme va s'arr\u00eater ? \u00c0 l'observation du programme, il est constitu\u00e9 de deux boucles for imbriqu\u00e9es, il n'y a pas d'ambigu\u00eft\u00e9 : on ne peut pas rentrer dans une boucle infinie. Le programme s'arr\u00eate forc\u00e9ment au bout de d'un nombre fixe d'op\u00e9rations.","title":"Preuve de la terminaison de l'algorithme"},{"location":"Premiere/Algorithmique/tris_correction/#complexite-de-lalgorithme","text":"Exercice 7 : \u00c9valuer la complexit\u00e9 de l'algorithmes de tri par insertion. R\u00e9ponse Le tri par s\u00e9lection a une complexit\u00e9 quadratique.","title":"Complexit\u00e9 de l'algorithme"},{"location":"Premiere/Algorithmique/tris_correction/#tri-par-insertion","text":"","title":"Tri par insertion"},{"location":"Premiere/Algorithmique/tris_correction/#principe_1","text":"Le tri par insertion est un algorithme de tri classique dont le principe est tr\u00e8s simple. C'est le tri que la plupart des personnes utilisent naturellement pour trier des cartes : prendre les cartes m\u00e9lang\u00e9es une \u00e0 une sur la table, et former une main en ins\u00e9rant chaque carte \u00e0 sa place.","title":"Principe"},{"location":"Premiere/Algorithmique/tris_correction/#algorithme-du-tri-par-insertion","text":"tri insertion 1 2 3 4 5 6 7 def tri_insertion ( lst : list ) -> list : for i in range ( 1 , len ( lst )): j = i while j > 0 and lst [ j - 1 ] > lst [ j ] : lst [ j ], lst [ j - 1 ] = lst [ j - 1 ], lst [ j ] j = j - 1 return lst Exercice 8 : Effectuer la trace de cette fonction qui prend en argument la liste [ 10, 2, 8, 3, 1] . Ex\u00e9cuter le script afin de v\u00e9rifier qu\u2019elle r\u00e9alise bien la t\u00e2che demand\u00e9e. R\u00e9ponse Ligne I J Lst[0] Lst[1] Lst[2] Lst[3] Lst[4] Commentaire 1 10 2 8 3 1 2 1 10 2 8 3 1 I < 5 3 1 1 10 2 8 3 1 4 1 1 10 2 8 3 1 J>0 10>2 5 1 1 2 10 8 3 1 6 1 0 2 10 8 3 1 4 1 0 2 10 8 3 1 J=0 2 2 0 2 10 8 3 1 I < 5 3 2 2 2 10 8 3 1 4 2 2 2 10 8 3 1 J>0 10>8 5 2 2 2 8 10 3 1 6 2 1 2 8 10 3 1 4 2 1 2 8 10 3 1 J>0 2<8 2 3 1 2 8 10 3 1 I < 5 3 3 3 2 8 10 3 1 4 3 3 2 8 10 3 1 J > 0 10 > 3 5 3 3 2 8 3 10 1 6 3 2 2 8 3 10 1 4 3 2 2 8 3 10 1 J > 0 8 > 3 5 3 2 2 3 8 10 1 6 3 1 2 3 8 10 1 4 3 1 2 3 8 10 1 J > 0 2<3 2 4 1 2 3 8 10 1 I<5 3 4 4 2 3 8 10 1 4 4 4 2 3 8 10 1 J > 0 10 > 1 5 4 4 2 3 8 1 10 6 4 3 2 3 8 1 10 4 4 3 2 3 8 1 10 J>0 8>1 5 4 3 2 3 1 8 10 6 4 2 2 3 1 8 10 4 4 2 2 3 1 8 10 J>0 3>1 5 4 2 2 1 3 8 10 6 4 1 2 1 3 8 10 4 4 1 2 1 3 8 10 J>0 2>1 5 4 1 1 2 3 8 10 6 4 0 1 2 3 8 10 4 4 0 1 2 3 8 10 J<0 2 5 0 1 2 3 8 10 I=5 7 4 0 1 2 3 8 10","title":"Algorithme du tri par insertion"},{"location":"Premiere/Algorithmique/tris_correction/#invariant-de-boucle-terminaison","text":"Apr\u00e8s avoir d\u00e9fini un invariant de boucle, nous devons montrer trois choses : Initialisation : Il est vrai avant la premi\u00e8re it\u00e9ration de la boucle. Conservation : S\u2019il est vrai avant une it\u00e9ration de la boucle, il le reste avant l\u2019it\u00e9ration suivante. Terminaison : Une fois termin\u00e9e la boucle, l\u2019invariant fournit une propri\u00e9t\u00e9 utile qui aide \u00e0 montrer la validit\u00e9 de l\u2019algorithme. Si les deux premi\u00e8res propri\u00e9t\u00e9s sont v\u00e9rifi\u00e9es, alors l\u2019invariant est vrai avant chaque it\u00e9ration de la boucle. La troisi\u00e8me propri\u00e9t\u00e9 est utilis\u00e9e pour prouver la validit\u00e9 de l\u2019algorithme. On constate qu\u2019en d\u00e9but de chaque it\u00e9ration de la boucle for , la sous-liste lst [0\u2026 j-1] est tri\u00e9e . Nous allons consid\u00e9rer cette propri\u00e9t\u00e9 comme invariant de boucle. Initialisation : Exercice 9 : Montrer que l\u2019invariant de boucle est vrai avant la 1 \u00e8re it\u00e9ration. R\u00e9ponse La 1\u00e8re it\u00e9ration d\u00e9marre \u00e0 i = 1 . Le sous-tableau se compose donc uniquement de l\u2019\u00e9l\u00e9ment lst[0] qui est bien \u00e9videmment tri\u00e9. L\u2019invariant est donc bien v\u00e9rifi\u00e9 avant la premi\u00e8re it\u00e9ration de la boucle. Conservation : Exercice 10 : Montrer que chaque it\u00e9ration conserve l\u2019invariant. R\u00e9ponse \u00c0 l\u2019it\u00e9ration i : elt = L[i] est l\u2019\u00e9l\u00e9ment \u00e0 positionner et la sous-liste L[0]...L[i-1] est d\u00e9j\u00e0 tri\u00e9e. On balaye cette sous-liste en partant de de la droite vers la gauche, en comparant \u00e0 chaque fois les \u00e9l\u00e9ments de la sous-liste avec elt . Lorsque la bonne position est trouv\u00e9e (dans le pire des cas en L[0] ) on lui affecte la valeur elt . La nouvelle sous-liste L[0]...L[i] est alors tri\u00e9e. Terminaison : Exercice 11 : Montrer que l\u2019invariant est v\u00e9rifi\u00e9 en fin de boucle. R\u00e9ponse \u00c0 la derni\u00e8re it\u00e9ration i prend la valeur len(lst)-1 et \u00e0 la fin de cette it\u00e9ration le dernier \u00e9l\u00e9ment lst[len(list)-1] de la liste est positionn\u00e9 \u00e0 la bonne place. La liste est alors totalement tri\u00e9e. Lorsque i prend la valeur len(lst) alors le programme sort de la boucle for , la liste demeure bien tri\u00e9e.","title":"Invariant de boucle : terminaison"},{"location":"Premiere/Algorithmique/tris_correction/#tri-a-bulles","text":"","title":"Tri \u00e0 bulles"},{"location":"Premiere/Algorithmique/tris_correction/#principe_2","text":"Le tri \u00e0 bulles est un algorithme de tri qui consiste \u00e0 comparer r\u00e9p\u00e9titivement les \u00e9l\u00e9ments cons\u00e9cutifs d\u2019un tableau 2 \u00e0 2 et \u00e0 les permuter lorsqu'ils sont mal tri\u00e9s. Il doit son nom au fait qu'il d\u00e9place rapidement les plus grands \u00e9l\u00e9ments en fin de tableau, comme des bulles d'air qui remonteraient rapidement \u00e0 la surface d'un liquide. \u00c9tape 1 (1 \u00e8re it\u00e9ration) : On balaye tous les \u00e9l\u00e9ments de la liste en les comparant 2 \u00e0 2 et on les permute s\u2019ils ne sont pas dans le bon ordre. On remarque que le plus grand \u00e9l\u00e9ment est bien remont\u00e9 en fin de liste. \u00c9tape 2 (2 \u00e8me it\u00e9ration) : On recommence de nouveau en partant du 1 er \u00e9l\u00e9ment du tableau mais le dernier \u00e9l\u00e9ment de la liste n\u2019est pas compar\u00e9 car il se trouve d\u00e9j\u00e0 \u00e0 la bonne place. On poursuit ainsi les it\u00e9rations jusqu\u2019\u00e0 ce que le tableau soit totalement tri\u00e9.","title":"Principe"},{"location":"Premiere/Algorithmique/tris_correction/#algorithme-du-tri-a-bulle","text":"Exercice 12 : \u00c9crire une fonction tri_bulles qui prend en argument une liste d\u2019entiers et retourne la liste tri\u00e9e. La tester. R\u00e9ponse tri \u00e0 bulle 1 2 3 4 5 6 7 8 9 10 def tri_bulle ( lst ): for i in range ( len ( lst )): for j in range ( 0 , len ( lst ) - i - 1 ): if lst [ j ] > lst [ j + 1 ]: lst [ j ], lst [ j + 1 ] = lst [ j + 1 ], lst [ j ] return lst #pgm principal tab = [ 4 , 2 , 1 , 9 , 8 , 5 , 3 , 6 , 7 ] print ( tri_bulles ( tab ))","title":"Algorithme du tri \u00e0 bulle."},{"location":"Premiere/Algorithmique/tris_correction/#tri-par-fusion","text":"","title":"Tri par fusion"},{"location":"Premiere/Algorithmique/tris_correction/#principe_3","text":"Le tri fusion est construit suivant la strat\u00e9gie \"diviser pour r\u00e9gner\", en anglais \"divide and conquer\". Le principe de base de la strat\u00e9gie \"diviser pour r\u00e9gner\" est que pour r\u00e9soudre un gros probl\u00e8me, il est souvent plus facile de le diviser en petits probl\u00e8mes \u00e9l\u00e9mentaires. Une fois chaque petit probl\u00e8me r\u00e9solu, il n\u2019y a plus qu\u2019\u00e0 combiner les diff\u00e9rentes solutions pour r\u00e9soudre le probl\u00e8me global. La m\u00e9thode \"diviser pour r\u00e9gner\" est tout \u00e0 fait applicable au probl\u00e8me de tri. Plut\u00f4t que de trier le tableau complet, il est pr\u00e9f\u00e9rable de trier deux sous tableaux de taille \u00e9gale, puis de fusionner les r\u00e9sultats. Exemple de tri par fusion appliqu\u00e9 \u00e0 un tableau de 7 \u00e9l\u00e9ments Principe du tri fusion","title":"Principe"},{"location":"Premiere/Algorithmique/tris_correction/#algorithme-du-tri-par-fusion","text":"Cet algorithme n\u2019est pas au programme de 1 \u00e8re mais \u00e0 celui de terminale car il fait appel \u00e0 la r\u00e9cursivit\u00e9 (une fonction qui s\u2019appelle elle-m\u00eame). Tri fusion 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 def fusion ( lst1 : list , lst2 : list ) -> list : i1 , i2 , n1 , n2 = 0 , 0 , len ( lst1 ), len ( lst2 ) t = [] while i1 < n1 and i2 < n2 : if lst1 [ i1 ] < lst2 [ i2 ]: t . append ( lst1 [ i1 ]) i1 += 1 else : t . append ( lst2 [ i2 ]) i2 += 1 if i1 == n1 and i2 < n2 : t . extend ( lst2 [ i2 :]) if i2 == n2 and i1 < n1 : t . extend ( lst1 [ i1 :]) return t def tri_fusion ( L : list ) -> list : n = len ( L ) if n < 2 : return L else : m = n // 2 return fusion ( tri_fusion ( L [: m ]), tri_fusion ( L [ m :]))","title":"Algorithme du tri par fusion"},{"location":"Premiere/Algorithmique/tris_correction/#comparaison-du-temps-dexecution-des-differents-algorithmes-de-tri","text":"Afin de comparer les tems d\u2019ex\u00e9cution des diff\u00e9rents algorithmes de tri, nous allons utiliser la fonction time de la biblioth\u00e8que time . Cette fonction renvoie l\u2019heure UNIX, c\u2019est-\u00e0-dire le nombre de secondes \u00e9coul\u00e9es depuis un instant de r\u00e9f\u00e9rence : le premier janvier 1970 \u00e0 minuit. Cette fonction s\u2019utilise de la mani\u00e8re suivante : 1 2 3 4 5 6 import time t1 = time . time () # instructions \u00e0 chronom\u00e9trer t2 = time . time () dt = t2 - t1 print ( dt ) Exercice 13 : R\u00e9aliser un programme qui g\u00e9n\u00e8re al\u00e9atoirement une liste L de n entiers \u00e0 trier (dont les valeurs sont comprises entre 0 et 100000). Cette liste sera dupliqu\u00e9e en 4 listes L1, L2, L3 et L4. Les 4 listes dupliqu\u00e9es seront tri\u00e9es respectivement par s\u00e9lection, par insertion, par tri \u00e0 bulles et par fusion et ces 4 tris seront chronom\u00e9tr\u00e9s. n prendra les valeurs 100, 1000, 5000, 10000, 20000 et 30000 et on superposera 4 courbes (1 pour chaque tri) repr\u00e9sentant le temps de calcul en fonction du nombre d\u2019\u00e9l\u00e9ments \u00e0 trier. Conclure. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 nbre_element = [ 10 , 20 , 30 , 50 , 100 , 200 , 300 , 400 , 500 ] temps_selection = [] temps_insertion = [] temps_bulle = [] temps_fusion = [] for i in nbre_element : L = get_random_list ( i , - 1000 , 1000 ) L1 = L . copy () L2 = L . copy () L3 = L . copy () L4 = L . copy () t1 = time . time () tri_selection ( L1 ) t2 = time . time () temps_selection . append ( t2 - t1 ) t1 = time . time () tri_insertion ( L2 ) t2 = time . time () temps_insertion . append ( t2 - t1 ) t1 = time . time () tri_bulle ( L3 ) t2 = time . time () temps_bulle . append ( t2 - t1 ) t1 = time . time () tri_fusion ( L4 ) t2 = time . time () temps_fusion . append ( t2 - t1 ) plt . plot ( nbre_element , temps_selection , \"g-\" , label = \"selection\" ) plt . plot ( nbre_element , temps_insertion , \"b-\" , label = \"insertion\" ) plt . plot ( nbre_element , temps_bulle , \"orange\" , label = \"bulle\" ) plt . plot ( nbre_element , temps_fusion , \"r-\" , label = \"fusion\" ) plt . xlabel ( \"Nombre d'\u00e9l\u00e9ments $n$ dans les tableaux\" ) plt . ylabel ( \"temps mis par les diff\u00e9rents algoritmes (s)\" ) plt . title ( \"temps en fonction de $n$\" ) plt . grid () plt . legend () plt . show () [width=75%]","title":"Comparaison du temps d'ex\u00e9cution des diff\u00e9rents algorithmes de tri"},{"location":"Premiere/Algorithmique/tris_correction/#bibliographie","text":"Le site de David Roche Le site des enseignants du lyc\u00e9e Blaise Pascal \u00e0 Saint-Dizier Le site de Gilles Lassus Le livre Num\u00e9rique et Sciences Informatiques aux \u00e9ditions ellipses de Thibaut Balabonski, Sylvain Conchon, Jean-Christophe Filli\u00e2tre et Kim Nguyen.","title":"Bibliographie"},{"location":"Premiere/ArchitectureMaterielle/OS/","text":"Les syst\u00e8mes d'exploitation # Introduction aux syst\u00e8mes d'exploitation # D\u00e9finition d'un syst\u00e8me d'exploitation # Un syst\u00e8me d\u2019exploitation est un logiciel, ou ensemble de programmes, qui sert d\u2019interface entre les programmes ex\u00e9cut\u00e9s par l\u2019utilisateur et les ressources mat\u00e9rielles d\u2019un ordinateur. Le syst\u00e8me d\u2019exploitation : fournit une interface entre l\u2019humain et la machine g\u00e8re les ressources de l\u2019ordinateur (m\u00e9moire, processeur, p\u00e9riph\u00e9riques, \u00e9nergie \u2026) g\u00e8re les utilisateurs ainsi que leurs droits d\u2019acc\u00e8s est ind\u00e9pendant du mat\u00e9riel Couches d'un syst\u00e8me d'exploitation # Le syst\u00e8me d\u2019exploitation se s\u00e9pare en deux grandes parties : Le noyau (kernel) : g\u00e8re les ressources de l\u2019ordinateur et permet aux diff\u00e9rents composants - mat\u00e9riels et logiciels - de communiquer entre eux. Le noyau n\u2019est g\u00e9n\u00e9ralement pas accessible directement par l\u2019utilisateur. Sa derni\u00e8re version stable (6.8.4 ) date du 4 avril 2024. Les applications : utilisent l\u2019interface propos\u00e9e par le noyau et sont accessibles aux utilisateurs. En \u00e9tant un peu plus pr\u00e9cis, on rencontre, du plus bas au plus haut niveau : Le mat\u00e9riel : (signaux \u00e9lectriques) Le noyau (kernel) : proche du m\u00e9tal. Lance la machine, g\u00e8re la carte graphique, le r\u00e9seau etc. La coquille (shell) : programme qui permet d\u2019ex\u00e9cuter des utilitaires et d\u2019int\u00e9ragir (via les fen\u00eatres ou le terminal) les applications (ls, firefox) : les programmes qu\u2019on fait tourner gr\u00e2ce au shell Grandes familles de syst\u00e8mes d\u2019exploitation # On en rencontre massivement deux : Windows et ses d\u00e9riv\u00e9s (MSDOS (~1985), Windows NT (1999), windows 7->10 (2008)). Domine le march\u00e9 du PC \u201cpersonnel\u201d UNIX et ses d\u00e9riv\u00e9s : bsd (syst\u00e8mes embarqu\u00e9s, r\u00e9seaux d\u2019entreprises), linux (partout dont android, super calculateurs, PC personnels, serveur web), OSX & iOS(produits apple). Linux # Pr\u00e9sentation de Linux # Linux et les syst\u00e8mes libres Linux ou GNU/Linux est une famille de syst\u00e8mes d\u2019exploitation open source de type UNIX fond\u00e9 sur le noyau Linux, cr\u00e9e en 1991 par Linus Torvald. Un syst\u00e8me d\u2019exploitiation de \u201ctype UNIX\u201d v\u00e9rifie quelques caract\u00e9ristiques parmi lesquelles : multi-utilisateur et multit\u00e2che s\u00e9curis\u00e9 vis-\u00e0-vis des manipulations illicites des utilisateurs disposant d\u2019un syst\u00e8me de fichiers abouti UNIX \u00e9tait un syst\u00e8me d\u2019exploitation apparu dans les ann\u00e9es 60, cr\u00e9e au Bell-Labs par Ken Thompson, Dennis Ritchie et Brian Kernighan. Les deux premiers sont les inventeurs du langage C qu\u2019ils ont d\u00e9velopp\u00e9 pour programmer UNIX. La majorit\u00e9 des \u201cmachines\u201d modernes (t\u00e9l\u00e9phones, serveurs, super ordinateurs, informatique embarqu\u00e9e etc.) fonctionnent avec un syst\u00e8me de type UNIX L\u2019exception notable concerne les PC personnels et de bureau qui fonctionnent majoritairement sous windows. Remarque : GNU/Linux Cet acronynime d\u00e9signe : Le noyau linux lui m\u00eame La couche logicielle GNU qu\u2019on trouve dans tous les syst\u00e8mes UNIX. d\u00e9finition : Un logiciel libre est un logiciel dont l'utilisation, l'\u00e9tude, la modification et la duplication en vue de sa diffusion sont permises, techniquement et l\u00e9galement. Exercice : d\u00e9couverte des commandes linux # Ce TP a \u00e9t\u00e9 con\u00e7u par Charles Poulmaire. Rendez-vous \u00e0 l'adresse : http://luffah.xyz/bidules/Terminus/ Noter sur un traitement de texte chaque nouvelle commande avec le plus de d\u00e9tails que vous pourrez. Ces notes peuvent prendre la forme suivante : \u00c9crire un plan du jeu au fur et \u00e0 mesure que vous avancez dans votre qu\u00eate. Par exemple : Utilisation du shell # Une interface entre l\u2019utilisateur et le syst\u00e8me d\u2019exploitation s\u2019appelle un shell ou interpr\u00e9teur de commandes. Le r\u00f4le d\u2019un shell est de prendre une entr\u00e9e de l\u2019utilisateur, de la traduire en instructions compr\u00e9hensibles par le syst\u00e8me d\u2019exploitation et de renvoyer la r\u00e9ponse du syst\u00e8me \u00e0 l\u2019utilisateur. Il existe deux grandes cat\u00e9gories de shell : les interfaces textuelles comme bash, le plus commun sur les syst\u00e8mes de la famille UNIX. les interfaces graphiques qu\u2019on retrouve dans les syst\u00e8mes d\u2019exploitation grand public tels que Windows. La syntaxe d\u2019une commande bash est simple : le nom de la commande peut \u00eatre suivi d\u2019options facultatives introduites par un tiret et d\u2019arguments : nom_commande -option1 -option2 argument1 argument2. remarque : A l'ouverture d'un terminal : Nous avons ci-dessus la console de l'utilisateur \"eric\" qui utilise un ordinateur qui se nomme \"kali\" (\"eric@kali\"). Quelques particularit\u00e9s de Linux # Linux est sensible \u00e0 la casse . En effet, il distingue les majuscules des minuscules. Ainsi, pour cr\u00e9er un r\u00e9pertoire, la commande est 'mkdir', ce n'est pas la peine d'essayer MKDIR ou mKdiR, cela ne fonctionnera pas. De m\u00eame, les noms de fichiers et de r\u00e9pertoires sont \u00e9galement sensibles \u00e0 la casse. les chemins sont s\u00e9par\u00e9s par des slash : Exemple : /etc/init/xfs mais jamais \\(\\backslash\\) etc \\(\\backslash\\) init \\(\\backslash\\) xfs. R\u00e9pertoires sp\u00e9ciaux : . repr\u00e9sente le r\u00e9pertoire courant ; .. repr\u00e9sente le r\u00e9pertoire parent ; \\~ (tilde) repr\u00e9sente le r\u00e9pertoire maison (home) de l'utilisateur. Fichiers cach\u00e9s : Sous Unix, les fichiers cach\u00e9s commencent par un point. Par exemple, ~/.bashrc est un fichier cach\u00e9, dans le r\u00e9pertoire maison de l'utilisateur, qui contient la configuration de son shell. Jokers : ? et *: Les caract\u00e8res ? et * dans les noms de fichiers et de r\u00e9pertoires permettent de repr\u00e9senter des caract\u00e8res quelconques. ? repr\u00e9sente un seul caract\u00e8re, tandis que * en repr\u00e9sente un nombre quelconque. Par exemple *.jpg repr\u00e9sente tous les fichiers se terminant par jpg ; *toto* tous les fichiers contenant toto . Il faut \u00e9galement savoir que c'est le shell qui interpr\u00e8te ces caract\u00e8res avant de transmettre la ligne de commande. Par exemple, si vous tapez : rm *.tmp , le shell transformera cette ligne de commande en : rm truc1.tmp truc2.tmp truc3.tmp . Les commandes # Une commande est l\u2019ex\u00e9cution d\u2019un programme dans l\u2019interpr\u00e8te (Shell). Elle prend en entr\u00e9e des options et/ou des param\u00e8tres. Elle peut renvoyer de l\u2019information \u00e0 l\u2019\u00e9cran ou dans un fichier, modifier un fichier, ou produire un message d\u2019erreur. Une description de toutes les commandes est disponible avec la commande man ou help . N\u2019h\u00e9sitez pas \u00e0 l\u2019utiliser. Naviguer cd : se d\u00e9placer dans les r\u00e9pertoires. ls : lister les r\u00e9pertoires et fichiers. pwd : afficher le r\u00e9pertoire o\u00f9 l'on se trouve exactement. D\u00e9placer, copier, renommer : cp : copier des fichiers ou des r\u00e9pertoires. mkdir : cr\u00e9er un dossier. mv : renommer ou d\u00e9placer un fichier ou un dossier. ln : cr\u00e9er des liens durs et liens symboliques. rm : supprimer un fichier ou un dossier. rmdir : supprimer un dossier vide (plus s\u00fbre que rm). touch : cr\u00e9er un fichier. Trouver un fichier find : recherche pointue ! locate : Recherche acc\u00e9l\u00e9r\u00e9e de fichiers ou r\u00e9pertoire. which : Chemin d'une commande d\u00e9termin\u00e9e. Lire un fichier texte cat : lire le contenu d'un fichier texte. Arborescence UNIX # Sur un syst\u00e8me Linux, tout est un fichier, y compris un dossier. Mais pour rester compatible avec l'arborescence classique de windows, nous parlerons donc de : fichier lorsqu'il s'agit d'une feuille de l'arborescence ; dossier lorsqu'on parle d'un noeud ayant des enfants. L\u2019arborescence d\u2019un syst\u00e8me GNU/Linux se pr\u00e9sente sous la forme repr\u00e9sent\u00e9e ci-dessous. Remarque : on voit que sous GNU/Linux, un fichier ne poss\u00e8de pas forcement une extension. Voici une br\u00e8ve description des diff\u00e9rents dossiers : Le syst\u00e8me de fichiers racine (root file system), soit le syst\u00e8me de fichiers primaire est associ\u00e9 au r\u00e9pertoire le plus haut / : / \u2190 root, la racine du syst\u00e8me +-- bin \u2190 Commandes de base du syst\u00e8me +-- dev \u2190 Fichiers repr\u00e9sentant les dispositifs mat\u00e9riels (devices) du syst\u00e8me +-- etc \u2190 Fichiers de configuration du syst\u00e8me +-- home \u2190 R\u00e9pertoire d'accueil (HOME) des utilisateurs +-- lib \u2190 Librairies partag\u00e9es entre les programmes +-- mnt \u2190 Points de montage (cl\u00e9s usb etc.) +-- proc \u2190 \u00c9tat du syst\u00e8me et de ses processus +-- root \u2190 R\u00e9pertoire de l'administrateur syst\u00e8me +-- run \u2190 Variables d'\u00e9tat du syst\u00e8me depuis le boot +-- sys \u2190 Informations sur le noyau et les p\u00e9riph\u00e9riques +-- usr \u2190 Logiciels install\u00e9s avec le syst\u00e8me, base de donn\u00e9es etc. +-- var \u2190 Donn\u00e9es fr\u00e9quemment utilis\u00e9es et modifi\u00e9es Chemin relatif ou chemin absolu # La distinction entre chemin relatif et absolu est valable quelque soit le syst\u00e8me d'exploitation. Les exemples sont donn\u00e9s pour un syst\u00e8me LINUX. L\u2019emplacement de chaque ressource (fichier ou r\u00e9pertoire) dans le syst\u00e8me de fichiers est appel\u00e9 son chemin. Dans un chemin Linux, le s\u00e9parateur dans entre deux r\u00e9pertoires est le caract\u00e8re /. On distingue deux types de chemins : Un chemin absolu identifie une ressource en commen\u00e7ant \u00e0 la racine de l\u2019arborescence, avec le caract\u00e8re /. Un chemin absolu ne d\u00e9pend pas du r\u00e9pertoire courant et est donc valide partout. /home/baptiste/hello.txt et /etc/apache/httpd.conf sont des exemples de chemins absolus. Un chemin relatif identifie une ressource \u00e0 partir du r\u00e9pertoire courant. Il d\u00e9pend donc du r\u00e9pertoire courant et n\u2019est pas valide partout. ../marc/adresses.txt et documents/cours/si1.pdf (sans / au d\u00e9but !) sont des exemples de chemins relatifs. Droits et permissions sous UNIX # Le syst\u00e8me de droits et de permissions sous UNIX est aspects fondamentaux de la gestion de la s\u00e9curit\u00e9 du syst\u00e8me. Droits et groupes # En Linux, tout fichier, et par extension dossier, appartient \u00e0 un propri\u00e9taire ainsi qu'\u00e0 un groupe et un utilisateur quelconque ne pourra pas forc\u00e9ment avoir tous les droits sur un fichier qui ne lui appartient pas. Par exemple, \u00e9tudions la sortie donn\u00e9e par la commande ls -l suivante : drwxr-xr-x 2 eric eric 4096 Apr. 8 23:09 Images d indique qu'il s'agit d'un dossier ; les 9 lettres suivantes indiquent les droits dont disposent les utilisateurs sur ce fichier ; le 2 est pour nous sans int\u00e9r\u00eat (il s'agit d'un compteur de liaison) ; le groupe de lettre suivant est le nom de l'utilisateur propri\u00e9taire du fichier ; le groupe de lettre suivant est le nom du groupe propri\u00e9taire du fichier ; 4096 repr\u00e9sente la taille en octet du dossier ; on trouve ensuite la date et l'heure de la derni\u00e8re modication ; le nom du dossier. Pour un fichier, on distinguera trois types d'utilisateurs : u pour user, c'est-\u00e0-dire le propri\u00e9taire du fichier ; g pour group, le groupe auquel appartient le fichier ; o pour other, tous les autres utilisateurs. Root # Par d\u00e9faut, il existe un super-utilisateur nomm\u00e9 root qui poss\u00e8de tous les droits sur un os Linux. Pour modier des attributs au niveau syst\u00e8me, il faut prendre les droits de super-utilisateur, gr\u00e2ce \u00e0 la commande sudo (super-user do). Cette commande demande syst\u00e9matiquement \u00e0 l'utilisateur faisant partie du groupe des super-utilisateurs (sudoers)de confirmer avec son mot de passe (celui choisi \u00e0 l'installation du syst\u00e8me) toute action de modication effectu\u00e9e au niveau du syt\u00e8me. Les droits # Pour un fichier donn\u00e9, on distinguera 4 permissions : r (read) : droit de lire le fichier ; w (write) : droit de modifier le fichier ; x (execute) : droit d'ex\u00e9cution du fichier ; - : aucun droit sur le fichier. Modification des Droits # Pour donner ou supprimer des permissions sur un fichier mon_texte.txt , on utilise la commande chmod de la mani\u00e8re suivante : pour donner les droits en lecture et \u00e9criture \u00e0 l'utilisateur chmod u+rw mon_texte.txt pour supprimer les droits en modication au groupe : chmod g-w mon_texte.txt pour supprimer tous les droits aux autres utilisateurs : chmod o-rwx mon_texte.txt Notation octale # Il est aussi possible d'utiliser la notation octale pour g\u00e9rer ces droits. Par exemple, la commande suivante : chmod 640 mon_texte.txt en sachant que r = 4 , w = 2 , x = 1 , et que le premier chiffre correspond \u00e0 l'utilisateur, le second au groupe, et le troisi\u00e8me aux autres. Ainsi dans l'exemple propos\u00e9 : l'utilisateur \u00e0 les droits de lecture et d'\u00e9criture (4+2 = 6) ; le groupe \u00e0 le droit de lecture (4) ; les autres n'ont aucun droit (0). Une commande telle que chmod 777 mon_texte.txt donne tous les droits de lecture, \u00e9criture et ex\u00e9cution \u00e0 tous les utilisateurs du syst\u00e8me pour le fichier mon_texte.txt . Exercices # Installation de WSL # Windows Subsystem for Linux (WSL) est une couche de compatibilit\u00e9 permettant d'ex\u00e9cuter des ex\u00e9cutables binaires Linux de mani\u00e8re native sur les derni\u00e8res versions de Windows (\u00e0 partir de windows 10). La version WSL 2, sortie en mai 2019, introduit la pr\u00e9sence d'un v\u00e9ritable noyau Linux. Pour installer la distribution Ubuntu, lancer l'invite de commande windows ( cmd depuis la barre de recherche), puis : wsl -install -d Ubuntu Utilisation de WSL : Une fois install\u00e9, vous avez acc\u00e8s \u00e0 la distribution depuis l'invite de commande windows par l'interm\u00e9diaire de la commande : wsl Remarque : Si wsl ne fonctionne pas, un simulateur existe sur la page web suivante : xlinux Vous acc\u00e9dez alors \u00e0 un terminal Linux tout ce qui est des plus classique. Le prompt est de la forme nom_utilisateur@nom_machine : chemin_dossier_courant $ . Normalement, votre r\u00e9pertoire courant est symbolis\u00e9 par ~ , ce qui est un raccourci pour symboliser le r\u00e9pertoire personnel de l'utilisateur. Partie pratique # R\u00e9pertoire courant et chemin absolu Par d\u00e9faut le terminal s\u2019ouvre dans le r\u00e9pertoire utilisateur. Utilisez la commande pwd pour d\u00e9terminer le nom du r\u00e9pertoire courant et son chemin absolu. Lister les fichiers d\u2019un r\u00e9pertoire Utilisez la commande man ls pour ouvrir le manuel de la commande ls (le site permet d'avoir une traduction). Tester plusieurs options puis r\u00e9pondre aux questions suivantes. 1) Quelle option permet de lister les fichiers et r\u00e9pertoires en donnant leur descriptif complet ? 2) Quelle option permet d\u2019afficher les fichiers et r\u00e9pertoires commen\u00e7ant par . ? 3) Tapez ls /var et lister les fichiers et r\u00e9pertoires du r\u00e9pertoires var se situant \u00e0 la racine du syst\u00e8me de fichier. Construction d\u2019une arborescence On envisage de construire l\u2019arborescence suivante : 1) A quel r\u00e9pertoire se r\u00e9f\u00e8re ~ ? 2) Cr\u00e9er les r\u00e9pertoires et les fichiers repr\u00e9sent\u00e9s par l'arborescence ci-dessus. Exercices sans ordinateur # Exercice 1 type bac L\u2019entreprise capNSI g\u00e8re les contrats de ses clients en cr\u00e9ant pour chacun d\u2019eux un sous-dossier dans le dossier Contrats sur leur ordinateur central. Le syst\u00e8me d\u2019exploitation de cet ordinateur est une distribution linux. Dans la console repr\u00e9sent\u00e9e sur la figure ci-dessous, on peut visualiser les r\u00e9pertoires (ou dossiers) \u00e0 la racine de l\u2019ordinateur central avec l\u2019instruction ls : 1) Donner le nom de l\u2019utilisateur et le nom de l\u2019ordinateur correspondant \u00e0 la capture d\u2019\u00e9cran pr\u00e9c\u00e9dente. 2) \u00c9crire les instructions permettant d\u2019afficher la liste des dossiers clients du r\u00e9pertoire Contrats en partant de la situation ci-dessous : Apr\u00e8s une campagne de d\u00e9marchage, l\u2019entreprise a gagn\u00e9 un nouveau client, Monsieur Alan Turing. Elle souhaite lui cr\u00e9er un sous-dossier nomm\u00e9 TURING_Alan dans le dossier Contrats . De plus, elle souhaite attribuer tous les droits \u00e0 l\u2019utilisateur et au groupe et seulement la permission en lecture pour tous les autres utilisateurs. 3) \u00c9crire les instructions permettant de cr\u00e9er le sous-dossier TURING_Alan \u00e0 partir du r\u00e9pertoire racine. 4) \u00c9crire l\u2019instruction permettant d\u2019attribuer les bons droits au sous-dossier TURING_Alan . Exercice 2 type bac Dans un syst\u00e8me d'exploitation de type UNIX, on consid\u00e8re l'arborescence des fichiers suivante dans laquelle les noms de dossiers sont en italique et ceux des fichiers sont en gras. On suppose, gr\u00e2ce \u00e0 l'utilisation du terminal de commande, explorer et modifier les r\u00e9pertoires et fichiers pr\u00e9sents. On suppose qu'on se trouve actuellement \u00e0 l'emplacement /home/morgane . 1) Donner l'affichage obtenu lors de l'utilisation de la commande ls . 2) \u00c9crire la commande qui permet, \u00e0 partir de cet emplacement, d'atteindre le r\u00e9pertoire lycee . 3) \u00c9crire la commande qui permet de cr\u00e9er \u00e0 cet emplacement un r\u00e9pertoire nomm\u00e9 algorithmique . 4) \u00c9crire la commande qui permet, \u00e0 partir de cet emplacement, de supprimer image1.jpg . Bibliographie # site du Lyc\u00e9e du Parc pixees site qkzk Formatux","title":"OS"},{"location":"Premiere/ArchitectureMaterielle/OS/#les-systemes-dexploitation","text":"","title":"Les syst\u00e8mes d'exploitation"},{"location":"Premiere/ArchitectureMaterielle/OS/#introduction-aux-systemes-dexploitation","text":"","title":"Introduction aux syst\u00e8mes d'exploitation"},{"location":"Premiere/ArchitectureMaterielle/OS/#definition-dun-systeme-dexploitation","text":"Un syst\u00e8me d\u2019exploitation est un logiciel, ou ensemble de programmes, qui sert d\u2019interface entre les programmes ex\u00e9cut\u00e9s par l\u2019utilisateur et les ressources mat\u00e9rielles d\u2019un ordinateur. Le syst\u00e8me d\u2019exploitation : fournit une interface entre l\u2019humain et la machine g\u00e8re les ressources de l\u2019ordinateur (m\u00e9moire, processeur, p\u00e9riph\u00e9riques, \u00e9nergie \u2026) g\u00e8re les utilisateurs ainsi que leurs droits d\u2019acc\u00e8s est ind\u00e9pendant du mat\u00e9riel","title":"D\u00e9finition d'un syst\u00e8me d'exploitation"},{"location":"Premiere/ArchitectureMaterielle/OS/#couches-dun-systeme-dexploitation","text":"Le syst\u00e8me d\u2019exploitation se s\u00e9pare en deux grandes parties : Le noyau (kernel) : g\u00e8re les ressources de l\u2019ordinateur et permet aux diff\u00e9rents composants - mat\u00e9riels et logiciels - de communiquer entre eux. Le noyau n\u2019est g\u00e9n\u00e9ralement pas accessible directement par l\u2019utilisateur. Sa derni\u00e8re version stable (6.8.4 ) date du 4 avril 2024. Les applications : utilisent l\u2019interface propos\u00e9e par le noyau et sont accessibles aux utilisateurs. En \u00e9tant un peu plus pr\u00e9cis, on rencontre, du plus bas au plus haut niveau : Le mat\u00e9riel : (signaux \u00e9lectriques) Le noyau (kernel) : proche du m\u00e9tal. Lance la machine, g\u00e8re la carte graphique, le r\u00e9seau etc. La coquille (shell) : programme qui permet d\u2019ex\u00e9cuter des utilitaires et d\u2019int\u00e9ragir (via les fen\u00eatres ou le terminal) les applications (ls, firefox) : les programmes qu\u2019on fait tourner gr\u00e2ce au shell","title":"Couches d'un syst\u00e8me d'exploitation"},{"location":"Premiere/ArchitectureMaterielle/OS/#grandes-familles-de-systemes-dexploitation","text":"On en rencontre massivement deux : Windows et ses d\u00e9riv\u00e9s (MSDOS (~1985), Windows NT (1999), windows 7->10 (2008)). Domine le march\u00e9 du PC \u201cpersonnel\u201d UNIX et ses d\u00e9riv\u00e9s : bsd (syst\u00e8mes embarqu\u00e9s, r\u00e9seaux d\u2019entreprises), linux (partout dont android, super calculateurs, PC personnels, serveur web), OSX & iOS(produits apple).","title":"Grandes familles de syst\u00e8mes d\u2019exploitation"},{"location":"Premiere/ArchitectureMaterielle/OS/#linux","text":"","title":"Linux"},{"location":"Premiere/ArchitectureMaterielle/OS/#presentation-de-linux","text":"Linux et les syst\u00e8mes libres Linux ou GNU/Linux est une famille de syst\u00e8mes d\u2019exploitation open source de type UNIX fond\u00e9 sur le noyau Linux, cr\u00e9e en 1991 par Linus Torvald. Un syst\u00e8me d\u2019exploitiation de \u201ctype UNIX\u201d v\u00e9rifie quelques caract\u00e9ristiques parmi lesquelles : multi-utilisateur et multit\u00e2che s\u00e9curis\u00e9 vis-\u00e0-vis des manipulations illicites des utilisateurs disposant d\u2019un syst\u00e8me de fichiers abouti UNIX \u00e9tait un syst\u00e8me d\u2019exploitation apparu dans les ann\u00e9es 60, cr\u00e9e au Bell-Labs par Ken Thompson, Dennis Ritchie et Brian Kernighan. Les deux premiers sont les inventeurs du langage C qu\u2019ils ont d\u00e9velopp\u00e9 pour programmer UNIX. La majorit\u00e9 des \u201cmachines\u201d modernes (t\u00e9l\u00e9phones, serveurs, super ordinateurs, informatique embarqu\u00e9e etc.) fonctionnent avec un syst\u00e8me de type UNIX L\u2019exception notable concerne les PC personnels et de bureau qui fonctionnent majoritairement sous windows. Remarque : GNU/Linux Cet acronynime d\u00e9signe : Le noyau linux lui m\u00eame La couche logicielle GNU qu\u2019on trouve dans tous les syst\u00e8mes UNIX. d\u00e9finition : Un logiciel libre est un logiciel dont l'utilisation, l'\u00e9tude, la modification et la duplication en vue de sa diffusion sont permises, techniquement et l\u00e9galement.","title":"Pr\u00e9sentation de Linux"},{"location":"Premiere/ArchitectureMaterielle/OS/#exercice-decouverte-des-commandes-linux","text":"Ce TP a \u00e9t\u00e9 con\u00e7u par Charles Poulmaire. Rendez-vous \u00e0 l'adresse : http://luffah.xyz/bidules/Terminus/ Noter sur un traitement de texte chaque nouvelle commande avec le plus de d\u00e9tails que vous pourrez. Ces notes peuvent prendre la forme suivante : \u00c9crire un plan du jeu au fur et \u00e0 mesure que vous avancez dans votre qu\u00eate. Par exemple :","title":"Exercice : d\u00e9couverte des commandes linux"},{"location":"Premiere/ArchitectureMaterielle/OS/#utilisation-du-shell","text":"Une interface entre l\u2019utilisateur et le syst\u00e8me d\u2019exploitation s\u2019appelle un shell ou interpr\u00e9teur de commandes. Le r\u00f4le d\u2019un shell est de prendre une entr\u00e9e de l\u2019utilisateur, de la traduire en instructions compr\u00e9hensibles par le syst\u00e8me d\u2019exploitation et de renvoyer la r\u00e9ponse du syst\u00e8me \u00e0 l\u2019utilisateur. Il existe deux grandes cat\u00e9gories de shell : les interfaces textuelles comme bash, le plus commun sur les syst\u00e8mes de la famille UNIX. les interfaces graphiques qu\u2019on retrouve dans les syst\u00e8mes d\u2019exploitation grand public tels que Windows. La syntaxe d\u2019une commande bash est simple : le nom de la commande peut \u00eatre suivi d\u2019options facultatives introduites par un tiret et d\u2019arguments : nom_commande -option1 -option2 argument1 argument2. remarque : A l'ouverture d'un terminal : Nous avons ci-dessus la console de l'utilisateur \"eric\" qui utilise un ordinateur qui se nomme \"kali\" (\"eric@kali\").","title":"Utilisation du shell"},{"location":"Premiere/ArchitectureMaterielle/OS/#quelques-particularites-de-linux","text":"Linux est sensible \u00e0 la casse . En effet, il distingue les majuscules des minuscules. Ainsi, pour cr\u00e9er un r\u00e9pertoire, la commande est 'mkdir', ce n'est pas la peine d'essayer MKDIR ou mKdiR, cela ne fonctionnera pas. De m\u00eame, les noms de fichiers et de r\u00e9pertoires sont \u00e9galement sensibles \u00e0 la casse. les chemins sont s\u00e9par\u00e9s par des slash : Exemple : /etc/init/xfs mais jamais \\(\\backslash\\) etc \\(\\backslash\\) init \\(\\backslash\\) xfs. R\u00e9pertoires sp\u00e9ciaux : . repr\u00e9sente le r\u00e9pertoire courant ; .. repr\u00e9sente le r\u00e9pertoire parent ; \\~ (tilde) repr\u00e9sente le r\u00e9pertoire maison (home) de l'utilisateur. Fichiers cach\u00e9s : Sous Unix, les fichiers cach\u00e9s commencent par un point. Par exemple, ~/.bashrc est un fichier cach\u00e9, dans le r\u00e9pertoire maison de l'utilisateur, qui contient la configuration de son shell. Jokers : ? et *: Les caract\u00e8res ? et * dans les noms de fichiers et de r\u00e9pertoires permettent de repr\u00e9senter des caract\u00e8res quelconques. ? repr\u00e9sente un seul caract\u00e8re, tandis que * en repr\u00e9sente un nombre quelconque. Par exemple *.jpg repr\u00e9sente tous les fichiers se terminant par jpg ; *toto* tous les fichiers contenant toto . Il faut \u00e9galement savoir que c'est le shell qui interpr\u00e8te ces caract\u00e8res avant de transmettre la ligne de commande. Par exemple, si vous tapez : rm *.tmp , le shell transformera cette ligne de commande en : rm truc1.tmp truc2.tmp truc3.tmp .","title":"Quelques particularit\u00e9s de Linux"},{"location":"Premiere/ArchitectureMaterielle/OS/#les-commandes","text":"Une commande est l\u2019ex\u00e9cution d\u2019un programme dans l\u2019interpr\u00e8te (Shell). Elle prend en entr\u00e9e des options et/ou des param\u00e8tres. Elle peut renvoyer de l\u2019information \u00e0 l\u2019\u00e9cran ou dans un fichier, modifier un fichier, ou produire un message d\u2019erreur. Une description de toutes les commandes est disponible avec la commande man ou help . N\u2019h\u00e9sitez pas \u00e0 l\u2019utiliser. Naviguer cd : se d\u00e9placer dans les r\u00e9pertoires. ls : lister les r\u00e9pertoires et fichiers. pwd : afficher le r\u00e9pertoire o\u00f9 l'on se trouve exactement. D\u00e9placer, copier, renommer : cp : copier des fichiers ou des r\u00e9pertoires. mkdir : cr\u00e9er un dossier. mv : renommer ou d\u00e9placer un fichier ou un dossier. ln : cr\u00e9er des liens durs et liens symboliques. rm : supprimer un fichier ou un dossier. rmdir : supprimer un dossier vide (plus s\u00fbre que rm). touch : cr\u00e9er un fichier. Trouver un fichier find : recherche pointue ! locate : Recherche acc\u00e9l\u00e9r\u00e9e de fichiers ou r\u00e9pertoire. which : Chemin d'une commande d\u00e9termin\u00e9e. Lire un fichier texte cat : lire le contenu d'un fichier texte.","title":"Les commandes"},{"location":"Premiere/ArchitectureMaterielle/OS/#arborescence-unix","text":"Sur un syst\u00e8me Linux, tout est un fichier, y compris un dossier. Mais pour rester compatible avec l'arborescence classique de windows, nous parlerons donc de : fichier lorsqu'il s'agit d'une feuille de l'arborescence ; dossier lorsqu'on parle d'un noeud ayant des enfants. L\u2019arborescence d\u2019un syst\u00e8me GNU/Linux se pr\u00e9sente sous la forme repr\u00e9sent\u00e9e ci-dessous. Remarque : on voit que sous GNU/Linux, un fichier ne poss\u00e8de pas forcement une extension. Voici une br\u00e8ve description des diff\u00e9rents dossiers : Le syst\u00e8me de fichiers racine (root file system), soit le syst\u00e8me de fichiers primaire est associ\u00e9 au r\u00e9pertoire le plus haut / : / \u2190 root, la racine du syst\u00e8me +-- bin \u2190 Commandes de base du syst\u00e8me +-- dev \u2190 Fichiers repr\u00e9sentant les dispositifs mat\u00e9riels (devices) du syst\u00e8me +-- etc \u2190 Fichiers de configuration du syst\u00e8me +-- home \u2190 R\u00e9pertoire d'accueil (HOME) des utilisateurs +-- lib \u2190 Librairies partag\u00e9es entre les programmes +-- mnt \u2190 Points de montage (cl\u00e9s usb etc.) +-- proc \u2190 \u00c9tat du syst\u00e8me et de ses processus +-- root \u2190 R\u00e9pertoire de l'administrateur syst\u00e8me +-- run \u2190 Variables d'\u00e9tat du syst\u00e8me depuis le boot +-- sys \u2190 Informations sur le noyau et les p\u00e9riph\u00e9riques +-- usr \u2190 Logiciels install\u00e9s avec le syst\u00e8me, base de donn\u00e9es etc. +-- var \u2190 Donn\u00e9es fr\u00e9quemment utilis\u00e9es et modifi\u00e9es","title":"Arborescence UNIX"},{"location":"Premiere/ArchitectureMaterielle/OS/#chemin-relatif-ou-chemin-absolu","text":"La distinction entre chemin relatif et absolu est valable quelque soit le syst\u00e8me d'exploitation. Les exemples sont donn\u00e9s pour un syst\u00e8me LINUX. L\u2019emplacement de chaque ressource (fichier ou r\u00e9pertoire) dans le syst\u00e8me de fichiers est appel\u00e9 son chemin. Dans un chemin Linux, le s\u00e9parateur dans entre deux r\u00e9pertoires est le caract\u00e8re /. On distingue deux types de chemins : Un chemin absolu identifie une ressource en commen\u00e7ant \u00e0 la racine de l\u2019arborescence, avec le caract\u00e8re /. Un chemin absolu ne d\u00e9pend pas du r\u00e9pertoire courant et est donc valide partout. /home/baptiste/hello.txt et /etc/apache/httpd.conf sont des exemples de chemins absolus. Un chemin relatif identifie une ressource \u00e0 partir du r\u00e9pertoire courant. Il d\u00e9pend donc du r\u00e9pertoire courant et n\u2019est pas valide partout. ../marc/adresses.txt et documents/cours/si1.pdf (sans / au d\u00e9but !) sont des exemples de chemins relatifs.","title":"Chemin relatif ou chemin absolu"},{"location":"Premiere/ArchitectureMaterielle/OS/#droits-et-permissions-sous-unix","text":"Le syst\u00e8me de droits et de permissions sous UNIX est aspects fondamentaux de la gestion de la s\u00e9curit\u00e9 du syst\u00e8me.","title":"Droits et permissions sous UNIX"},{"location":"Premiere/ArchitectureMaterielle/OS/#droits-et-groupes","text":"En Linux, tout fichier, et par extension dossier, appartient \u00e0 un propri\u00e9taire ainsi qu'\u00e0 un groupe et un utilisateur quelconque ne pourra pas forc\u00e9ment avoir tous les droits sur un fichier qui ne lui appartient pas. Par exemple, \u00e9tudions la sortie donn\u00e9e par la commande ls -l suivante : drwxr-xr-x 2 eric eric 4096 Apr. 8 23:09 Images d indique qu'il s'agit d'un dossier ; les 9 lettres suivantes indiquent les droits dont disposent les utilisateurs sur ce fichier ; le 2 est pour nous sans int\u00e9r\u00eat (il s'agit d'un compteur de liaison) ; le groupe de lettre suivant est le nom de l'utilisateur propri\u00e9taire du fichier ; le groupe de lettre suivant est le nom du groupe propri\u00e9taire du fichier ; 4096 repr\u00e9sente la taille en octet du dossier ; on trouve ensuite la date et l'heure de la derni\u00e8re modication ; le nom du dossier. Pour un fichier, on distinguera trois types d'utilisateurs : u pour user, c'est-\u00e0-dire le propri\u00e9taire du fichier ; g pour group, le groupe auquel appartient le fichier ; o pour other, tous les autres utilisateurs.","title":"Droits et groupes"},{"location":"Premiere/ArchitectureMaterielle/OS/#root","text":"Par d\u00e9faut, il existe un super-utilisateur nomm\u00e9 root qui poss\u00e8de tous les droits sur un os Linux. Pour modier des attributs au niveau syst\u00e8me, il faut prendre les droits de super-utilisateur, gr\u00e2ce \u00e0 la commande sudo (super-user do). Cette commande demande syst\u00e9matiquement \u00e0 l'utilisateur faisant partie du groupe des super-utilisateurs (sudoers)de confirmer avec son mot de passe (celui choisi \u00e0 l'installation du syst\u00e8me) toute action de modication effectu\u00e9e au niveau du syt\u00e8me.","title":"Root"},{"location":"Premiere/ArchitectureMaterielle/OS/#les-droits","text":"Pour un fichier donn\u00e9, on distinguera 4 permissions : r (read) : droit de lire le fichier ; w (write) : droit de modifier le fichier ; x (execute) : droit d'ex\u00e9cution du fichier ; - : aucun droit sur le fichier.","title":"Les droits"},{"location":"Premiere/ArchitectureMaterielle/OS/#modification-des-droits","text":"Pour donner ou supprimer des permissions sur un fichier mon_texte.txt , on utilise la commande chmod de la mani\u00e8re suivante : pour donner les droits en lecture et \u00e9criture \u00e0 l'utilisateur chmod u+rw mon_texte.txt pour supprimer les droits en modication au groupe : chmod g-w mon_texte.txt pour supprimer tous les droits aux autres utilisateurs : chmod o-rwx mon_texte.txt","title":"Modification des Droits"},{"location":"Premiere/ArchitectureMaterielle/OS/#notation-octale","text":"Il est aussi possible d'utiliser la notation octale pour g\u00e9rer ces droits. Par exemple, la commande suivante : chmod 640 mon_texte.txt en sachant que r = 4 , w = 2 , x = 1 , et que le premier chiffre correspond \u00e0 l'utilisateur, le second au groupe, et le troisi\u00e8me aux autres. Ainsi dans l'exemple propos\u00e9 : l'utilisateur \u00e0 les droits de lecture et d'\u00e9criture (4+2 = 6) ; le groupe \u00e0 le droit de lecture (4) ; les autres n'ont aucun droit (0). Une commande telle que chmod 777 mon_texte.txt donne tous les droits de lecture, \u00e9criture et ex\u00e9cution \u00e0 tous les utilisateurs du syst\u00e8me pour le fichier mon_texte.txt .","title":"Notation octale"},{"location":"Premiere/ArchitectureMaterielle/OS/#exercices","text":"","title":"Exercices"},{"location":"Premiere/ArchitectureMaterielle/OS/#installation-de-wsl","text":"Windows Subsystem for Linux (WSL) est une couche de compatibilit\u00e9 permettant d'ex\u00e9cuter des ex\u00e9cutables binaires Linux de mani\u00e8re native sur les derni\u00e8res versions de Windows (\u00e0 partir de windows 10). La version WSL 2, sortie en mai 2019, introduit la pr\u00e9sence d'un v\u00e9ritable noyau Linux. Pour installer la distribution Ubuntu, lancer l'invite de commande windows ( cmd depuis la barre de recherche), puis : wsl -install -d Ubuntu Utilisation de WSL : Une fois install\u00e9, vous avez acc\u00e8s \u00e0 la distribution depuis l'invite de commande windows par l'interm\u00e9diaire de la commande : wsl Remarque : Si wsl ne fonctionne pas, un simulateur existe sur la page web suivante : xlinux Vous acc\u00e9dez alors \u00e0 un terminal Linux tout ce qui est des plus classique. Le prompt est de la forme nom_utilisateur@nom_machine : chemin_dossier_courant $ . Normalement, votre r\u00e9pertoire courant est symbolis\u00e9 par ~ , ce qui est un raccourci pour symboliser le r\u00e9pertoire personnel de l'utilisateur.","title":"Installation de WSL"},{"location":"Premiere/ArchitectureMaterielle/OS/#partie-pratique","text":"R\u00e9pertoire courant et chemin absolu Par d\u00e9faut le terminal s\u2019ouvre dans le r\u00e9pertoire utilisateur. Utilisez la commande pwd pour d\u00e9terminer le nom du r\u00e9pertoire courant et son chemin absolu. Lister les fichiers d\u2019un r\u00e9pertoire Utilisez la commande man ls pour ouvrir le manuel de la commande ls (le site permet d'avoir une traduction). Tester plusieurs options puis r\u00e9pondre aux questions suivantes. 1) Quelle option permet de lister les fichiers et r\u00e9pertoires en donnant leur descriptif complet ? 2) Quelle option permet d\u2019afficher les fichiers et r\u00e9pertoires commen\u00e7ant par . ? 3) Tapez ls /var et lister les fichiers et r\u00e9pertoires du r\u00e9pertoires var se situant \u00e0 la racine du syst\u00e8me de fichier. Construction d\u2019une arborescence On envisage de construire l\u2019arborescence suivante : 1) A quel r\u00e9pertoire se r\u00e9f\u00e8re ~ ? 2) Cr\u00e9er les r\u00e9pertoires et les fichiers repr\u00e9sent\u00e9s par l'arborescence ci-dessus.","title":"Partie pratique"},{"location":"Premiere/ArchitectureMaterielle/OS/#exercices-sans-ordinateur","text":"Exercice 1 type bac L\u2019entreprise capNSI g\u00e8re les contrats de ses clients en cr\u00e9ant pour chacun d\u2019eux un sous-dossier dans le dossier Contrats sur leur ordinateur central. Le syst\u00e8me d\u2019exploitation de cet ordinateur est une distribution linux. Dans la console repr\u00e9sent\u00e9e sur la figure ci-dessous, on peut visualiser les r\u00e9pertoires (ou dossiers) \u00e0 la racine de l\u2019ordinateur central avec l\u2019instruction ls : 1) Donner le nom de l\u2019utilisateur et le nom de l\u2019ordinateur correspondant \u00e0 la capture d\u2019\u00e9cran pr\u00e9c\u00e9dente. 2) \u00c9crire les instructions permettant d\u2019afficher la liste des dossiers clients du r\u00e9pertoire Contrats en partant de la situation ci-dessous : Apr\u00e8s une campagne de d\u00e9marchage, l\u2019entreprise a gagn\u00e9 un nouveau client, Monsieur Alan Turing. Elle souhaite lui cr\u00e9er un sous-dossier nomm\u00e9 TURING_Alan dans le dossier Contrats . De plus, elle souhaite attribuer tous les droits \u00e0 l\u2019utilisateur et au groupe et seulement la permission en lecture pour tous les autres utilisateurs. 3) \u00c9crire les instructions permettant de cr\u00e9er le sous-dossier TURING_Alan \u00e0 partir du r\u00e9pertoire racine. 4) \u00c9crire l\u2019instruction permettant d\u2019attribuer les bons droits au sous-dossier TURING_Alan . Exercice 2 type bac Dans un syst\u00e8me d'exploitation de type UNIX, on consid\u00e8re l'arborescence des fichiers suivante dans laquelle les noms de dossiers sont en italique et ceux des fichiers sont en gras. On suppose, gr\u00e2ce \u00e0 l'utilisation du terminal de commande, explorer et modifier les r\u00e9pertoires et fichiers pr\u00e9sents. On suppose qu'on se trouve actuellement \u00e0 l'emplacement /home/morgane . 1) Donner l'affichage obtenu lors de l'utilisation de la commande ls . 2) \u00c9crire la commande qui permet, \u00e0 partir de cet emplacement, d'atteindre le r\u00e9pertoire lycee . 3) \u00c9crire la commande qui permet de cr\u00e9er \u00e0 cet emplacement un r\u00e9pertoire nomm\u00e9 algorithmique . 4) \u00c9crire la commande qui permet, \u00e0 partir de cet emplacement, de supprimer image1.jpg .","title":"Exercices sans ordinateur"},{"location":"Premiere/ArchitectureMaterielle/OS/#bibliographie","text":"site du Lyc\u00e9e du Parc pixees site qkzk Formatux","title":"Bibliographie"},{"location":"Premiere/ArchitectureMaterielle/com_Linux_detail/","text":"Droits et permissions sous UNIX # Le syst\u00e8me de droits et de permissions sous UNIX est aspects fondamentaux de la gestion de la s\u00e9curit\u00e9 du syst\u00e8me. Droits et groupes # Les utilisateurs selon UNIX # Unix s\u00e9pare les utilisateurs en trois cat\u00e9gories du point de vue des droits : L\u2019utilisateur (user) ; Le groupe (group) ; Le reste du monde (others). Exemple de lecture de droits # En utilisant la commande ls -l monfic.sh par exemple, on obtient : -rwxr--r-- 1 roza staff 0 6 mai 11:56 monfic.sh La partie -rwxr--r-- , indiquant les droits du fichier, se lit en omettant le tiret du d\u00e9but, puis en d\u00e9composant en trois parties : rwx (utilsateur) ; r-- (groupe) ; r-- (autres). Chaque partie est elle-m\u00eame compos\u00e9e de trois lettres : droit de lecture r ; droit d\u2019\u00e9criteure w ; droit d\u2019ex\u00e9cution x : on peut ex\u00e9cuter le fichier en l\u2019invoquant par son nom, dans cet exemple ./monfic.sh. On sait donc que monfic.sh est accessible en lecture au groupe \u201cStaff\u201d et aux autres. On sait en outre que le fichier appartient \u00e0 l\u2019utilisateur \u201croza\u201d. Les droits d\u2019un r\u00e9pertoire # Cr\u00e9eons un r\u00e9pertoire www dans notre HOME et lisons les droits correspondants avec la commance ls -l www, on obtient par exemple : drwxr-xr-x 2 roza staff 64 6 mai 14:17 www Le d initial signifie qu\u2019il s\u2019agit d\u2019un r\u00e9pertoire. Remarque : le droit x pour un r\u00e9pertoire est le droit de traverser ce r\u00e9pertoire. Changer des droits # La commande chmod # Seul le propri\u00e9taire d\u2019un fichier (ou l\u2019utilisateur \u201croot\u201d) peut changer ses permissions d\u2019acc\u00e8s. Il le fait avec la commande chmod dont voici quelques exemples d\u2019utilisation. Droits Syntaxe Donner les droits de lecteure au groupe g chmod g+r monfic.sh Donner les droits d\u2019\u00e9criture au propri\u00e9taire u chmod u+w monfic.sh Retirer les droits d\u2019ex\u00e9cution aux autres (others) o chmod o-x monfich.sh Donner les droits d\u2019ex\u00e9cution \u00e0 tous chmod ugo+x monfic.sh Remarque : On peut aussi utiliser a (all) \u00e0 la place de ugo. Droits symboliques et num\u00e9riques # Il est \u00e9galement possible d\u2019utiliser un codage octal (base 8) pour les droits. L\u2019\u00e9criture symbolique : rwc r-x r-w Correspond \u00e0 l\u2019\u00e9criture binaire 111 101 101 soit 755 en octal Par exemple chmod 755 monfic.sh donne les droits -rwxr-xr-x au fichier monfic.sh. Lancement d\u2019un script et fichiers ex\u00e9cutables # On peut lancer un script (ou autre) en l\u2019invoquant par son nom s\u2019il est ex\u00e9cutable. On pr\u00e9cise parfois que le script est dans le r\u00e9pertoire courant en le pr\u00e9c\u00e9dant d\u2019un ./ devant son nom : ./monfic.sh Si le script n\u2019est pas ex\u00e9cutable on peut toujours le lancer en tapant : source monfic.sh Ces deux m\u00e9thodes ne sont pas \u00e9quivalentes : dans le premier cas, un nouveau shell est cr\u00e9e tandis que dans le second, les commandes du script s\u2019ex\u00e9cutent dans le shell courant. Remarque : Tous les fichiers ex\u00e9cutables posent des probl\u00e8mes potentiels de s\u00e9curit\u00e9, tout fichier ex\u00e9cutable pouvant se transformer en \u00e9ventuel \u201ccheval de Troie\u201d (logiciel malveillant). Dans un site web par exemple, les fichiers HTML, CSS, images, JavaScript ou PHP n\u2019ont pas \u00e0 \u00eatre ex\u00e9cutables, le droit de lecture suffit.","title":"com Linux detail"},{"location":"Premiere/ArchitectureMaterielle/com_Linux_detail/#droits-et-permissions-sous-unix","text":"Le syst\u00e8me de droits et de permissions sous UNIX est aspects fondamentaux de la gestion de la s\u00e9curit\u00e9 du syst\u00e8me.","title":"Droits et permissions sous UNIX"},{"location":"Premiere/ArchitectureMaterielle/com_Linux_detail/#droits-et-groupes","text":"","title":"Droits et groupes"},{"location":"Premiere/ArchitectureMaterielle/com_Linux_detail/#les-utilisateurs-selon-unix","text":"Unix s\u00e9pare les utilisateurs en trois cat\u00e9gories du point de vue des droits : L\u2019utilisateur (user) ; Le groupe (group) ; Le reste du monde (others).","title":"Les utilisateurs selon UNIX"},{"location":"Premiere/ArchitectureMaterielle/com_Linux_detail/#exemple-de-lecture-de-droits","text":"En utilisant la commande ls -l monfic.sh par exemple, on obtient : -rwxr--r-- 1 roza staff 0 6 mai 11:56 monfic.sh La partie -rwxr--r-- , indiquant les droits du fichier, se lit en omettant le tiret du d\u00e9but, puis en d\u00e9composant en trois parties : rwx (utilsateur) ; r-- (groupe) ; r-- (autres). Chaque partie est elle-m\u00eame compos\u00e9e de trois lettres : droit de lecture r ; droit d\u2019\u00e9criteure w ; droit d\u2019ex\u00e9cution x : on peut ex\u00e9cuter le fichier en l\u2019invoquant par son nom, dans cet exemple ./monfic.sh. On sait donc que monfic.sh est accessible en lecture au groupe \u201cStaff\u201d et aux autres. On sait en outre que le fichier appartient \u00e0 l\u2019utilisateur \u201croza\u201d. Les droits d\u2019un r\u00e9pertoire # Cr\u00e9eons un r\u00e9pertoire www dans notre HOME et lisons les droits correspondants avec la commance ls -l www, on obtient par exemple : drwxr-xr-x 2 roza staff 64 6 mai 14:17 www Le d initial signifie qu\u2019il s\u2019agit d\u2019un r\u00e9pertoire. Remarque : le droit x pour un r\u00e9pertoire est le droit de traverser ce r\u00e9pertoire. Changer des droits # La commande chmod # Seul le propri\u00e9taire d\u2019un fichier (ou l\u2019utilisateur \u201croot\u201d) peut changer ses permissions d\u2019acc\u00e8s. Il le fait avec la commande chmod dont voici quelques exemples d\u2019utilisation. Droits Syntaxe Donner les droits de lecteure au groupe g chmod g+r monfic.sh Donner les droits d\u2019\u00e9criture au propri\u00e9taire u chmod u+w monfic.sh Retirer les droits d\u2019ex\u00e9cution aux autres (others) o chmod o-x monfich.sh Donner les droits d\u2019ex\u00e9cution \u00e0 tous chmod ugo+x monfic.sh Remarque : On peut aussi utiliser a (all) \u00e0 la place de ugo. Droits symboliques et num\u00e9riques # Il est \u00e9galement possible d\u2019utiliser un codage octal (base 8) pour les droits. L\u2019\u00e9criture symbolique : rwc r-x r-w Correspond \u00e0 l\u2019\u00e9criture binaire 111 101 101 soit 755 en octal Par exemple chmod 755 monfic.sh donne les droits -rwxr-xr-x au fichier monfic.sh. Lancement d\u2019un script et fichiers ex\u00e9cutables # On peut lancer un script (ou autre) en l\u2019invoquant par son nom s\u2019il est ex\u00e9cutable. On pr\u00e9cise parfois que le script est dans le r\u00e9pertoire courant en le pr\u00e9c\u00e9dant d\u2019un ./ devant son nom : ./monfic.sh Si le script n\u2019est pas ex\u00e9cutable on peut toujours le lancer en tapant : source monfic.sh Ces deux m\u00e9thodes ne sont pas \u00e9quivalentes : dans le premier cas, un nouveau shell est cr\u00e9e tandis que dans le second, les commandes du script s\u2019ex\u00e9cutent dans le shell courant. Remarque : Tous les fichiers ex\u00e9cutables posent des probl\u00e8mes potentiels de s\u00e9curit\u00e9, tout fichier ex\u00e9cutable pouvant se transformer en \u00e9ventuel \u201ccheval de Troie\u201d (logiciel malveillant). Dans un site web par exemple, les fichiers HTML, CSS, images, JavaScript ou PHP n\u2019ont pas \u00e0 \u00eatre ex\u00e9cutables, le droit de lecture suffit.","title":"Exemple de lecture de droits"},{"location":"Premiere/ArchitectureMaterielle/neumann/","text":"Architecture mat\u00e9rielle Les portes logiques # Contexte # Les circuits d\u2019un ordinateur manipulent uniquement des chiffres binaires 0 ou 1 qui sont simplement repr\u00e9sent\u00e9s par des tensions \u00e9lectriques (0 ou +V). On peut r\u00e9aliser des op\u00e9rations sur ces nombres binaires \u00e0 l\u2019aide de circuits logiques qui sont concr\u00e8tement construits \u00e0 partir de transistors. Ces transistors peuvent se comporter comme des interrupteurs \u00e0 la mani\u00e8re de l\u2019exemple suivant. transistor Lorsque la broche B est sous tension (+V), un courant peut s\u2019\u00e9tablir entre E et la masse . Le sens du courant est indiqu\u00e9 par la petite fl\u00e8che. Le transistor peut alors \u00eatre consid\u00e9r\u00e9 comme un interrupteur ferm\u00e9. Inversement, quand B est \u00e0 0 V, la broche E reste sous tension haute et le transistor peut \u00eatre consid\u00e9r\u00e9 comme un interrupteur ouvert. La porte NOT (ou NON) # La porte NOT demande un seul transistor. Elle est la plus simple de toutes les portes. transistor Elle n\u2019a qu\u2019un seul bit en entr\u00e9e (E) et sa sortie (S) vaut 1 quand l\u2019entr\u00e9e vaut 0 et inversement. on peut obtenir ce que l\u2019on appelle la table de v\u00e9rit\u00e9 de la porte \"NOT\" (voir ci-dessous). entr\u00e9e E sortie S \u00d8 1 1 \u00d8 Table de v\u00e9rit\u00e9 de la porte NOT On en d\u00e9duit l'\u00e9quation suivante : \\(S = \\overline{E}\\) Graphiquement, on repr\u00e9sente cette porte comme dans le sch\u00e9ma ci-dessous (notation am\u00e9ricaine). Porte NOT La porte AND (ET) # La table de v\u00e9rit\u00e9 de la porte \"AND\" est repr\u00e9sent\u00e9e ci-dessous. entr\u00e9e A entr\u00e9e B sortie S \u00d8 0 0 0 1 0 1 0 0 1 1 1 Table de v\u00e9rit\u00e9 de la porte AND On peut en d\u00e9duire l'\u00e9quation \\(S =A.B\\) Porte AND On peut illustrer cette fonction de la mani\u00e8re suivante: Une lampe s'allume si l'on appuie sur \u00ab a \u00bb ET \u00ab b \u00bb et seulement dans ce cas l\u00e0. La fonction \u00ab ET \u00bb est caract\u00e9ris\u00e9e par des interrupteurs NO (normalement ouvert) mont\u00e9s en s\u00e9rie. Illustration La porte NAND (NON ET) # La table de v\u00e9rit\u00e9 de la porte \"NAND\" est repr\u00e9sent\u00e9e ci-dessous. entr\u00e9e A entr\u00e9e B sortie S \u00d8 0 1 0 1 1 1 0 1 1 1 0 Table de v\u00e9rit\u00e9 de la porte NAND On peut en d\u00e9duire l'\u00e9quation \\(S = \\overline{A.B}\\) Porte NAND Remarque : Cette porte peut \u00eatre r\u00e9alis\u00e9e de la mani\u00e8re suivante: Circuit porte NAND Porte OR (OU) # La table de v\u00e9rit\u00e9 de la porte \"OR\" est repr\u00e9sent\u00e9e ci-dessous. entr\u00e9e A entr\u00e9e B sortie S \u00d8 0 0 0 1 1 1 0 1 1 1 1 Table de v\u00e9rit\u00e9 de la porte OR On peut en d\u00e9duire l'\u00e9quation $S = A + B $ Porte OR Porte NOR (NON OU) # La table de v\u00e9rit\u00e9 de la porte \"NOR\" est repr\u00e9sent\u00e9e ci-dessous. entr\u00e9e A entr\u00e9e B sortie S \u00d8 0 1 0 1 0 1 0 0 1 1 0 Table de v\u00e9rit\u00e9 de la porte NOR On peut en d\u00e9duire l'\u00e9quation $ S = \\overline{A + B} $ Porte OR Remarque : Cette porte peut \u00eatre r\u00e9alis\u00e9e de la mani\u00e8re suivante: Circuit porte NOR La porte XOR (OU EXCLUSIF) # La table de v\u00e9rit\u00e9 de la porte \"XOR\" est repr\u00e9sent\u00e9e ci-dessous. entr\u00e9e A entr\u00e9e B sortie S \u00d8 0 0 0 1 1 1 0 1 1 1 0 Table de v\u00e9rit\u00e9 de la porte XOR Porte XOR Une application des portes logiques : les masques de sous-r\u00e9seau # Dans un r\u00e9seau TCP/IP, un ordinateur a une adresse IP qui l\u2019identifie de mani\u00e8re unique (comme un num\u00e9ro de t\u00e9l\u00e9phone), ainsi qu\u2019un masque de sous-r\u00e9seau. L\u2019adresse IP et le masque de sous-r\u00e9seau sont des groupes de 4 entiers positifs, cod\u00e9s tous les deux sur 4 octets. Le masque identifie \u00e0 quel sous r\u00e9seau d\u2019Internet il fait partie, et permet d\u2019obtenir l\u2019adresse IP du sous-r\u00e9seau \u00e0 l\u2019aide d\u2019une op\u00e9ration bool\u00e9enne. Exemple : un ordinateur a pour adresse IP 192.168.0.42 et son masque de sous-r\u00e9seau est 255.255.255.0. IP 11000000101010000000000000101010 Masque 11111111111111111111111100000000 AND 11000000101010000000000000000000 Adresse du sous-r\u00e9seau Porte XOR Pour obtenir l\u2019adresse du sous-r\u00e9seau de l\u2019ordinateur, on effectue alors un AND entre les octets de l\u2019adresse IP et les octets du masque. En repr\u00e9sentation binaire, cela donne : Sur un processeur 32 bits, le AND est une op\u00e9ration primitive du processeur, donc l\u2019op\u00e9ration de d\u00e9ter- mination du sous-masque r\u00e9seau se fait en une op\u00e9ration. Des portes logiques \u00e0 l\u2019ordinateur # Circuit combinatoire et circuit s\u00e9quentiel # D\u2019une mani\u00e8re g\u00e9n\u00e9rale, les circuits \u00e9lectroniques poss\u00e8dent plusieurs entr\u00e9es et plusieurs sorties. Quand les sorties d\u00e9pendent directement et uniquement des entr\u00e9es, on parle de cicuits combinatoires. Il existe d\u2019autres types de circuit qui s\u2019appellent circuits s\u00e9quentiels. Les sorties de ces circuits d\u00e9pendent d\u2019un \u00e9tat ant\u00e9rieur du circuit. C\u2019est ce type de circuit qu\u2019on utilise pour r\u00e9aliser des m\u00e9moires (RAM, registres,etc...). Un exemple de circuit combinatoire logique : l\u2019additionneur # En combinant les portes logiques, on obtient des circuits plus complexes. Par exemple en combinant 2 portes \"OU EXCLUSIF\", 2 portes \"ET\" et une porte \"OU\" on obtient un additionneur repr\u00e9sent\u00e9 ci-dessous. Additionneur Comme son nom l\u2019indique, l\u2019additionneur permet d\u2019additionner 2 bits (E1 et E2) en tenant compte de la retenue entrante (\"Cin\" \"carry in\" en anglais). En sortie on obtient le r\u00e9sultat de l\u2019addition (S) et la retenue sortante (\"Cout\"). Les m\u00e9moires # On stocke l\u2019information \u00e0 l\u2019aide de circuit dit de type \"bascule\". Ce circuit est une combinaison de plusieurs portes logiques. Il n\u2019est pas question pour nous d\u2019\u00e9tudier ce type de circuit, le sch\u00e9ma ci-dessus vous permet juste de v\u00e9rifier qu\u2019une fois de plus nous avons bien \u00e0 faire \u00e0 une combinaison de porte logique. M\u00e9moire Le mod\u00e8le de von Neumann # Von Neumann # John Von Neumann (1903-1957) est un ing\u00e9nieur, math\u00e9maticien et physicien am\u00e9ricano-hongrois.Il a particip\u00e9 au projet Manhattan (premi\u00e8re bombe atomique) et \u00e0 l'ENIAC. L'ENIAC (Electronic Numerical Integrator And Computer) Son nom reste attach\u00e9 \u00e0 un mod\u00e8le qu'il propose en 1944, mod\u00e8le d'architecture novateur qui sert toujours de base \u00e0 nos architectures actuelles. Mod\u00e8le de Von Neumann # Le mod\u00e8le de Von Neumann pr\u00e9cise les 4 composants essentiels ainsi que les interactions entre ces diff\u00e9rents composants. Ces composants sont les suivants : On distingue 4 zones essentielles : le CPU (Central Processing Unit) qui contient lui-m\u00eame : l'Unit\u00e9 Arithm\u00e9tique et Logique (UAL) dans laquelle sont effectu\u00e9es les op\u00e9rations de base (addition, multiplication...) Cette zone comporte notamment les registres (peu nombreux, de l'ordre de la dizaine) qui sont les espaces de travail ultra-rapides dans lesquels l'UAL va effectuer ses calculs. Une fois ceux-ci effectu\u00e9s, les valeurs des registres repartent dans la m\u00e9moire. l'Unit\u00e9 de contr\u00f4le, qui va s\u00e9quencer les op\u00e9rations. Lorsqu'on parle d'un processeur \u00e0 3 GHz, cela signifie (approximativement) que Unit\u00e9 de Contr\u00f4le va envoyer l'ordre d'une nouvelle op\u00e9ration \u00e0 l'UAL 3 milliards de fois par seconde. Cette unit\u00e9 joue le r\u00f4le de chef d\u2019orchestre de l\u2019ordinateur ! la m\u00e9moire , qui contient \u00e0 la fois les donn\u00e9es \u00e0 traiter et les instructions du programme. Cette id\u00e9e de stocker au m\u00eame endroit donn\u00e9es et programme est l'id\u00e9e centrale de l'architecture von Neumann. les bus de communication (des fils \u00e9lectriques permettant de transporter les donn\u00e9es entre les diff\u00e9rents composants). les Entr\u00e9es/Sorties, permettant de g\u00e9rer les informations avec l'ext\u00e9rieur. M\u00e9moire \u00c9volution des CPU # Pendant des ann\u00e9es, pour augmenter les performances des ordinateurs, les constructeurs augmentaient la fr\u00e9quence d\u2019horloge des microprocesseurs. La fr\u00e9quence d\u2019horloge d\u2019un microprocesseur est li\u00e9e \u00e0 sa capacit\u00e9 d\u2019ex\u00e9cuter un nombre plus ou moins important d\u2019instructions machines par seconde. Plus la fr\u00e9quence d\u2019horloge du CPU est \u00e9lev\u00e9e, plus ce CPU est capable d\u2019ex\u00e9cuter un grand nombre d\u2019instructions machines par seconde. Actuellement, les processeurs fonctionnent entre 1,5 et 3 GHz. Fr\u00e9quence des CPU Comme vous pouvez le remarquer sur le graphique ci-dessus, \u00e0 partir de 2006 environ, la fr\u00e9quence d\u2019horloge a cess\u00e9 d\u2019augmenter, pourquoi ? \u00c0 cause d\u2019une contrainte physique : en effet plus on augmente la fr\u00e9quence d\u2019horloge d\u2019un CPU, plus ce dernier chauffe. Il devenait difficile de refroidir le CPU, les constructeurs de microprocesseurs (principalement Intel et AMD) ont d\u00e9cid\u00e9 d\u2019arr\u00eater la course \u00e0 l\u2019augmentation de la fr\u00e9quence d\u2019horloge, ils ont d\u00e9cid\u00e9 d\u2019adopter une nouvelle tactique. Avec la miniaturisation croissante des transistors, les concepteurs de processeurs ont pu par la suite proposer des processeurs \u00e0 plusieurs c\u0153urs aussi appel\u00e9s \"multic\u0153urs\". Ce qui revient, dans les grandes lignes, \u00e0 faire rentrer plusieurs processeurs dans un seul, chacun pouvant traiter une instruction \u00e0 la fois, mais en parall\u00e8le des autres c\u0153urs. On pourrait se dire que l\u2019augmentation du nombre de coeurs entra\u00eene obligatoirement une augmentation des performances du CPU, en fait, c\u2019est plus que complexe que cela : pour une application qui n\u2019aura pas \u00e9t\u00e9 con\u00e7ue pour fonctionner avec un microprocesseur multicoeur, le gain de performance sera tr\u00e8s faible, voir m\u00eame nul. En effet, la conception d\u2019applications capables de tirer profit d\u2019un CPU multicoeur demande la mise en place de certaines techniques de programmation. Il faut aussi avoir conscience que les diff\u00e9rents coeurs d\u2019un CPU doivent se \"partager\" l\u2019acc\u00e8s \u00e0 la m\u00e9moire vive : quand un coeur travaille sur une certaine zone de la RAM, cette m\u00eame zone n\u2019est pas accessible aux autres coeurs, ce qui, bien \u00e9videmment va brider les performances. De plus, on trouve \u00e0 l\u2019int\u00e9rieur des microprocesseurs de la m\u00e9moire \"ultrarapide\" appel\u00e9e m\u00e9moire cache (il ne faut pas confondre m\u00e9moire cache et registres). Le CPU peut stocker certaines donn\u00e9es dans cette m\u00e9moire cache afin de pouvoir y acc\u00e9der tr\u00e8s rapidement dans le futur, en effet, l\u2019acc\u00e8s \u00e0 la m\u00e9moire cache est beaucoup plus rapide que l\u2019acc\u00e8s \u00e0 la RAM. La m\u00e9moire cache ayant un coup assez important, la quantit\u00e9 pr\u00e9sente au sein d\u2019un CPU est assez limit\u00e9e, les diff\u00e9rents coeurs vont donc devoir se partager cette m\u00e9moire cache, ce qui peut aussi provoquer des ralentissements (en faite il existe plusieurs types de m\u00e9moire cache appel\u00e9s L1, L2 et L3, chaque coeur poss\u00e8de son propre cache L1, alors que les caches L2 et L3 sont partag\u00e9s par les diff\u00e9rents coeurs) Assembleur # Le simulateur # On trouve en ligne un simulateur . Remarque : ne pas l\u2019ouvrir avec Firefox car dans ce navigateur, les instructions ne s\u2019affichent pas correctement dans la RAM. simulateur Il se d\u00e9compose ainsi : Une m\u00e9moire vive (\u00e0 droite) dont chaque case m\u00e9moire (cellule) comporte 32 bits . Chaque cellule de la m\u00e9moire poss\u00e8de une adresse (de 000 \u00e0 199), ces adresses sont cod\u00e9es en base 10 (vous pouvez vous en assurer en cliquant sur OPTION puis binary). Un \u00e9diteur (\u00e0 gauche) pour taper le programme en assembleur ; Le processeur (au centre) constitu\u00e9 principalement de l\u2019Unit\u00e9 de Contr\u00f4le, de l\u2019Unit\u00e9 Arithm\u00e9tique et Logique et des registres de R0 \u00e0 R12 plus un compteur de programme (PC pour Program counter) qui contient en permanence l\u2019adresse de la prochaine instruction \u00e0 ex\u00e9cuter. Les instructions # Chaque processeur poss\u00e8de son propre jeu d'instruction. Pour celui propos\u00e9, les instructions sont disponibles sur cette page . Voici les principales instructions traduites : LDR Rd, < adresse m\u00e9moire > : charge la valeur enregistr\u00e9e dans l' < adresse m\u00e9moire > dans le registe d STR Rd, < adresse m\u00e9moire > : enregistre la valeur du registre d dans la m\u00e9moire sp\u00e9cifi\u00e9e par < adresse m\u00e9moire > ADD Rd, Rn, < operand2 > : ajoute la valeur sp\u00e9cifi\u00e9e par < operand2 > \u00e0 la valeur du registre n et enregistre le r\u00e9sultat dans le registre d SUB Rd, Rn, < operand2 > : soustrait la valeur de < operand2 > \u00e0 la valeur du registre n et enregistre le r\u00e9sultat dans le registre d MOV Rd, < operand2 > : copie la valeur < operand2 > dans le registre d CMP Rn, < operand2 > : compare la valeur de registre n avec la valeur de < operand2 >. B < label > : branchement inconditionnel jusqu'\u00e0 la positon < label > dans le programme. B < condition > < label > : branchement conditionnel vers la position < label > dans le programme si la derni\u00e8re comparaison rempli le crit\u00e8re sp\u00e9cifi\u00e9 par < condition >. Les valeurs possibles sont : EQ:\u00e9gal \u00e0 ; NE: n'est pas \u00e9gal \u00e0; GT:Plus grand que; LT: Moins grand que. AND Rd, Rn, < operand2 > : effectue l'op\u00e9ration bit \u00e0 bit logique AND (ET) entre la valeur du registre n et la valeur < operand2 > et enregistre le r\u00e9sultat dans le registre d. ORR Rd, Rn, < operand2 > effectue l'op\u00e9ration bit \u00e0 bit logique OR (OU) entre la valeur du registre n et la valeur < operand2 > et enregistre le r\u00e9sultat dans le registre d. EOR Rd, Rn, < operand2 > : effectue l'op\u00e9ration bit \u00e0 bit logique XOR(OU exclusif) entre la valeur du registre n et la valeur < operand2 > et enregistre le r\u00e9sultat dans le registre d. MVN Rd, < operand2 > : effectue l'op\u00e9ration bit \u00e0 bit logique NOT (NON) sur la valeur < operand2 > et enregistre le r\u00e9sultat dans le registre d. LSL Rd, Rn, < operand2 > : d\u00e9cale de < operand2 > bit(s) vers la gauche la valeur du registre n et enregistre le r\u00e9sultat dans le registre d LSR Rd, Rn, < operand2 > : d\u00e9cale de < operand2 > bit(s) vers la droite la valeur du registre n et enregistre le r\u00e9sultat dans le registre d HALT Arr\u00eate l'execution du programme. < operand2 > peut \u00eatre #nnn (c'est \u00e0 dire un nombre, exemple #42) ou bien Rm (c'est \u00e0 dire le registre m , par exemple R1 est le registre num\u00e9ro 1) Les registres vont de R0 \u00e0 R12. Compl\u00e9ments data, INP et OUT : la pseudo instruction DAT vous permet de mettre un nombre dans la m\u00e9moire en utilisant l'assembleur. Un label peut aussi \u00eatre pris comme donn\u00e9e. INP Rd,2 : lis un nombre dans le registre d. OUT Rd,4 : retourne en sortie le nombre du registre d. Pour OUT, vous pouvez retourner des nombres sign\u00e9s (positifs ou n\u00e9gatifs \\(\\rightarrow\\) param\u00e8tre 4), des nombres non sign\u00e9s (que positifs \\(\\rightarrow\\) param\u00e8tre 5), des hexad\u00e9cimaux (param\u00e8tre 6) ou des charact\u00e8res (param\u00e8tre 7). Vous pouvez entrer des hexa comme 0xnnn partout o\u00f9 un nombre est attendu. Exemples et exercices # Exemple 1 # MOV R0,#42 STR R0,150 HALT Interpr\u00e9tation : On place dans le registre R0 du processeur la valeur 42 ; On place le contenu du registre R0 (\u00e0 savoir 42) dans la m\u00e9moire vive \u00e0 la place 150 ; On stoppe le programme ; Taper ce programme dans l\u2019\u00e9diteur du simulateur, et le faire fonctionner. Observer. Exercices # Exercice : \u00c0 l\u2019aide des instructions d\u00e9crites dans le chapitre pr\u00e9c\u00e9dent, dites ce que fait ce programme suivant ligne par ligne, puis l\u2019ex\u00e9cuter. V\u00e9rifier ce que vous aviez trouv\u00e9. MOV R0,#42 MOV R1,#45 ADD R0,R0,R1 OUT R0,4 HALT Exercice : \u00c9crire un programme qui effectue une soustraction entre 95 et 52, l\u2019enregistre en m\u00e9moire (\u00e0 la place 143) et qui affiche le r\u00e9sultat dans la console Output. Le taper et l\u2019ex\u00e9cuter. Exemple 2 # Cet exemple s\u2019affiche quand on clique sur SELECT puis max dans le simulateur. INP R0,2 INP R1,2 CMP R1,R0 BGT HIGHER OUT R0,4 B DONE HIGHER: OUT R1,4 DONE: HALT Interpr\u00e9tation : On place deux nombres dans les registres R0 et R1 gr\u00e2ce \u00e0 la fonction INP ; On compare le contenu du registre R1 au contenu du registre R0 ; Si le contenu de R1 est plus grand que celui de R0, on effectue un branchement jusqu\u2019au label HIGHER et on affiche le contenu de R1 ; Sinon, on affiche le contenu de R0 ; On effectue le branchement conditionnel vers done qui stoppe le programme. Exercice : R\u00e9aliser un programme qui prend deux nombres et qui retourne le plus petit. Exercice : Traduire le programme python ci-dessous en assembleur x = 0 // on met en memoire dans la variable nomme x la valeur 0 while x < 3 : x = x + 1 print ( x ) Exercice : Traduire le programme python ci-dessous en assembleur x = 0 for i in range ( 3 ): print ( x ) Bibliographie # Le site de David Roche Le site des enseignants du lyc\u00e9e Blaise Pascal \u00e0 Saint-Dizier Le simulateur ainsi que la documentation en anglais Le site du Yeti Le livre Num\u00e9rique et Sciences Informatiques aux \u00e9ditions ellipses de Thibaut Balabonski, Sylvain Conchon, Jean-Christophe Filli\u00e2tre et Kim Nguyen.","title":"Neumann"},{"location":"Premiere/ArchitectureMaterielle/neumann/#les-portes-logiques","text":"","title":"Les portes logiques"},{"location":"Premiere/ArchitectureMaterielle/neumann/#contexte","text":"Les circuits d\u2019un ordinateur manipulent uniquement des chiffres binaires 0 ou 1 qui sont simplement repr\u00e9sent\u00e9s par des tensions \u00e9lectriques (0 ou +V). On peut r\u00e9aliser des op\u00e9rations sur ces nombres binaires \u00e0 l\u2019aide de circuits logiques qui sont concr\u00e8tement construits \u00e0 partir de transistors. Ces transistors peuvent se comporter comme des interrupteurs \u00e0 la mani\u00e8re de l\u2019exemple suivant. transistor Lorsque la broche B est sous tension (+V), un courant peut s\u2019\u00e9tablir entre E et la masse . Le sens du courant est indiqu\u00e9 par la petite fl\u00e8che. Le transistor peut alors \u00eatre consid\u00e9r\u00e9 comme un interrupteur ferm\u00e9. Inversement, quand B est \u00e0 0 V, la broche E reste sous tension haute et le transistor peut \u00eatre consid\u00e9r\u00e9 comme un interrupteur ouvert.","title":"Contexte"},{"location":"Premiere/ArchitectureMaterielle/neumann/#la-porte-not-ou-non","text":"La porte NOT demande un seul transistor. Elle est la plus simple de toutes les portes. transistor Elle n\u2019a qu\u2019un seul bit en entr\u00e9e (E) et sa sortie (S) vaut 1 quand l\u2019entr\u00e9e vaut 0 et inversement. on peut obtenir ce que l\u2019on appelle la table de v\u00e9rit\u00e9 de la porte \"NOT\" (voir ci-dessous). entr\u00e9e E sortie S \u00d8 1 1 \u00d8 Table de v\u00e9rit\u00e9 de la porte NOT On en d\u00e9duit l'\u00e9quation suivante : \\(S = \\overline{E}\\) Graphiquement, on repr\u00e9sente cette porte comme dans le sch\u00e9ma ci-dessous (notation am\u00e9ricaine). Porte NOT","title":"La porte NOT (ou NON)"},{"location":"Premiere/ArchitectureMaterielle/neumann/#la-porte-and-et","text":"La table de v\u00e9rit\u00e9 de la porte \"AND\" est repr\u00e9sent\u00e9e ci-dessous. entr\u00e9e A entr\u00e9e B sortie S \u00d8 0 0 0 1 0 1 0 0 1 1 1 Table de v\u00e9rit\u00e9 de la porte AND On peut en d\u00e9duire l'\u00e9quation \\(S =A.B\\) Porte AND On peut illustrer cette fonction de la mani\u00e8re suivante: Une lampe s'allume si l'on appuie sur \u00ab a \u00bb ET \u00ab b \u00bb et seulement dans ce cas l\u00e0. La fonction \u00ab ET \u00bb est caract\u00e9ris\u00e9e par des interrupteurs NO (normalement ouvert) mont\u00e9s en s\u00e9rie. Illustration","title":"La porte AND (ET)"},{"location":"Premiere/ArchitectureMaterielle/neumann/#la-porte-nand-non-et","text":"La table de v\u00e9rit\u00e9 de la porte \"NAND\" est repr\u00e9sent\u00e9e ci-dessous. entr\u00e9e A entr\u00e9e B sortie S \u00d8 0 1 0 1 1 1 0 1 1 1 0 Table de v\u00e9rit\u00e9 de la porte NAND On peut en d\u00e9duire l'\u00e9quation \\(S = \\overline{A.B}\\) Porte NAND Remarque : Cette porte peut \u00eatre r\u00e9alis\u00e9e de la mani\u00e8re suivante: Circuit porte NAND","title":"La porte NAND (NON ET)"},{"location":"Premiere/ArchitectureMaterielle/neumann/#porte-or-ou","text":"La table de v\u00e9rit\u00e9 de la porte \"OR\" est repr\u00e9sent\u00e9e ci-dessous. entr\u00e9e A entr\u00e9e B sortie S \u00d8 0 0 0 1 1 1 0 1 1 1 1 Table de v\u00e9rit\u00e9 de la porte OR On peut en d\u00e9duire l'\u00e9quation $S = A + B $ Porte OR","title":"Porte OR (OU)"},{"location":"Premiere/ArchitectureMaterielle/neumann/#porte-nor-non-ou","text":"La table de v\u00e9rit\u00e9 de la porte \"NOR\" est repr\u00e9sent\u00e9e ci-dessous. entr\u00e9e A entr\u00e9e B sortie S \u00d8 0 1 0 1 0 1 0 0 1 1 0 Table de v\u00e9rit\u00e9 de la porte NOR On peut en d\u00e9duire l'\u00e9quation $ S = \\overline{A + B} $ Porte OR Remarque : Cette porte peut \u00eatre r\u00e9alis\u00e9e de la mani\u00e8re suivante: Circuit porte NOR","title":"Porte NOR (NON OU)"},{"location":"Premiere/ArchitectureMaterielle/neumann/#la-porte-xor-ou-exclusif","text":"La table de v\u00e9rit\u00e9 de la porte \"XOR\" est repr\u00e9sent\u00e9e ci-dessous. entr\u00e9e A entr\u00e9e B sortie S \u00d8 0 0 0 1 1 1 0 1 1 1 0 Table de v\u00e9rit\u00e9 de la porte XOR Porte XOR","title":"La porte XOR (OU EXCLUSIF)"},{"location":"Premiere/ArchitectureMaterielle/neumann/#une-application-des-portes-logiques-les-masques-de-sous-reseau","text":"Dans un r\u00e9seau TCP/IP, un ordinateur a une adresse IP qui l\u2019identifie de mani\u00e8re unique (comme un num\u00e9ro de t\u00e9l\u00e9phone), ainsi qu\u2019un masque de sous-r\u00e9seau. L\u2019adresse IP et le masque de sous-r\u00e9seau sont des groupes de 4 entiers positifs, cod\u00e9s tous les deux sur 4 octets. Le masque identifie \u00e0 quel sous r\u00e9seau d\u2019Internet il fait partie, et permet d\u2019obtenir l\u2019adresse IP du sous-r\u00e9seau \u00e0 l\u2019aide d\u2019une op\u00e9ration bool\u00e9enne. Exemple : un ordinateur a pour adresse IP 192.168.0.42 et son masque de sous-r\u00e9seau est 255.255.255.0. IP 11000000101010000000000000101010 Masque 11111111111111111111111100000000 AND 11000000101010000000000000000000 Adresse du sous-r\u00e9seau Porte XOR Pour obtenir l\u2019adresse du sous-r\u00e9seau de l\u2019ordinateur, on effectue alors un AND entre les octets de l\u2019adresse IP et les octets du masque. En repr\u00e9sentation binaire, cela donne : Sur un processeur 32 bits, le AND est une op\u00e9ration primitive du processeur, donc l\u2019op\u00e9ration de d\u00e9ter- mination du sous-masque r\u00e9seau se fait en une op\u00e9ration.","title":"Une application des portes logiques : les masques de sous-r\u00e9seau"},{"location":"Premiere/ArchitectureMaterielle/neumann/#des-portes-logiques-a-lordinateur","text":"","title":"Des portes logiques \u00e0 l\u2019ordinateur"},{"location":"Premiere/ArchitectureMaterielle/neumann/#circuit-combinatoire-et-circuit-sequentiel","text":"D\u2019une mani\u00e8re g\u00e9n\u00e9rale, les circuits \u00e9lectroniques poss\u00e8dent plusieurs entr\u00e9es et plusieurs sorties. Quand les sorties d\u00e9pendent directement et uniquement des entr\u00e9es, on parle de cicuits combinatoires. Il existe d\u2019autres types de circuit qui s\u2019appellent circuits s\u00e9quentiels. Les sorties de ces circuits d\u00e9pendent d\u2019un \u00e9tat ant\u00e9rieur du circuit. C\u2019est ce type de circuit qu\u2019on utilise pour r\u00e9aliser des m\u00e9moires (RAM, registres,etc...).","title":"Circuit combinatoire et circuit s\u00e9quentiel"},{"location":"Premiere/ArchitectureMaterielle/neumann/#un-exemple-de-circuit-combinatoire-logique-ladditionneur","text":"En combinant les portes logiques, on obtient des circuits plus complexes. Par exemple en combinant 2 portes \"OU EXCLUSIF\", 2 portes \"ET\" et une porte \"OU\" on obtient un additionneur repr\u00e9sent\u00e9 ci-dessous. Additionneur Comme son nom l\u2019indique, l\u2019additionneur permet d\u2019additionner 2 bits (E1 et E2) en tenant compte de la retenue entrante (\"Cin\" \"carry in\" en anglais). En sortie on obtient le r\u00e9sultat de l\u2019addition (S) et la retenue sortante (\"Cout\").","title":"Un exemple de circuit combinatoire logique : l\u2019additionneur"},{"location":"Premiere/ArchitectureMaterielle/neumann/#les-memoires","text":"On stocke l\u2019information \u00e0 l\u2019aide de circuit dit de type \"bascule\". Ce circuit est une combinaison de plusieurs portes logiques. Il n\u2019est pas question pour nous d\u2019\u00e9tudier ce type de circuit, le sch\u00e9ma ci-dessus vous permet juste de v\u00e9rifier qu\u2019une fois de plus nous avons bien \u00e0 faire \u00e0 une combinaison de porte logique. M\u00e9moire","title":"Les m\u00e9moires"},{"location":"Premiere/ArchitectureMaterielle/neumann/#le-modele-de-von-neumann","text":"","title":"Le mod\u00e8le de von Neumann"},{"location":"Premiere/ArchitectureMaterielle/neumann/#von-neumann","text":"John Von Neumann (1903-1957) est un ing\u00e9nieur, math\u00e9maticien et physicien am\u00e9ricano-hongrois.Il a particip\u00e9 au projet Manhattan (premi\u00e8re bombe atomique) et \u00e0 l'ENIAC. L'ENIAC (Electronic Numerical Integrator And Computer) Son nom reste attach\u00e9 \u00e0 un mod\u00e8le qu'il propose en 1944, mod\u00e8le d'architecture novateur qui sert toujours de base \u00e0 nos architectures actuelles.","title":"Von Neumann"},{"location":"Premiere/ArchitectureMaterielle/neumann/#modele-de-von-neumann","text":"Le mod\u00e8le de Von Neumann pr\u00e9cise les 4 composants essentiels ainsi que les interactions entre ces diff\u00e9rents composants. Ces composants sont les suivants : On distingue 4 zones essentielles : le CPU (Central Processing Unit) qui contient lui-m\u00eame : l'Unit\u00e9 Arithm\u00e9tique et Logique (UAL) dans laquelle sont effectu\u00e9es les op\u00e9rations de base (addition, multiplication...) Cette zone comporte notamment les registres (peu nombreux, de l'ordre de la dizaine) qui sont les espaces de travail ultra-rapides dans lesquels l'UAL va effectuer ses calculs. Une fois ceux-ci effectu\u00e9s, les valeurs des registres repartent dans la m\u00e9moire. l'Unit\u00e9 de contr\u00f4le, qui va s\u00e9quencer les op\u00e9rations. Lorsqu'on parle d'un processeur \u00e0 3 GHz, cela signifie (approximativement) que Unit\u00e9 de Contr\u00f4le va envoyer l'ordre d'une nouvelle op\u00e9ration \u00e0 l'UAL 3 milliards de fois par seconde. Cette unit\u00e9 joue le r\u00f4le de chef d\u2019orchestre de l\u2019ordinateur ! la m\u00e9moire , qui contient \u00e0 la fois les donn\u00e9es \u00e0 traiter et les instructions du programme. Cette id\u00e9e de stocker au m\u00eame endroit donn\u00e9es et programme est l'id\u00e9e centrale de l'architecture von Neumann. les bus de communication (des fils \u00e9lectriques permettant de transporter les donn\u00e9es entre les diff\u00e9rents composants). les Entr\u00e9es/Sorties, permettant de g\u00e9rer les informations avec l'ext\u00e9rieur. M\u00e9moire","title":"Mod\u00e8le de Von Neumann"},{"location":"Premiere/ArchitectureMaterielle/neumann/#evolution-des-cpu","text":"Pendant des ann\u00e9es, pour augmenter les performances des ordinateurs, les constructeurs augmentaient la fr\u00e9quence d\u2019horloge des microprocesseurs. La fr\u00e9quence d\u2019horloge d\u2019un microprocesseur est li\u00e9e \u00e0 sa capacit\u00e9 d\u2019ex\u00e9cuter un nombre plus ou moins important d\u2019instructions machines par seconde. Plus la fr\u00e9quence d\u2019horloge du CPU est \u00e9lev\u00e9e, plus ce CPU est capable d\u2019ex\u00e9cuter un grand nombre d\u2019instructions machines par seconde. Actuellement, les processeurs fonctionnent entre 1,5 et 3 GHz. Fr\u00e9quence des CPU Comme vous pouvez le remarquer sur le graphique ci-dessus, \u00e0 partir de 2006 environ, la fr\u00e9quence d\u2019horloge a cess\u00e9 d\u2019augmenter, pourquoi ? \u00c0 cause d\u2019une contrainte physique : en effet plus on augmente la fr\u00e9quence d\u2019horloge d\u2019un CPU, plus ce dernier chauffe. Il devenait difficile de refroidir le CPU, les constructeurs de microprocesseurs (principalement Intel et AMD) ont d\u00e9cid\u00e9 d\u2019arr\u00eater la course \u00e0 l\u2019augmentation de la fr\u00e9quence d\u2019horloge, ils ont d\u00e9cid\u00e9 d\u2019adopter une nouvelle tactique. Avec la miniaturisation croissante des transistors, les concepteurs de processeurs ont pu par la suite proposer des processeurs \u00e0 plusieurs c\u0153urs aussi appel\u00e9s \"multic\u0153urs\". Ce qui revient, dans les grandes lignes, \u00e0 faire rentrer plusieurs processeurs dans un seul, chacun pouvant traiter une instruction \u00e0 la fois, mais en parall\u00e8le des autres c\u0153urs. On pourrait se dire que l\u2019augmentation du nombre de coeurs entra\u00eene obligatoirement une augmentation des performances du CPU, en fait, c\u2019est plus que complexe que cela : pour une application qui n\u2019aura pas \u00e9t\u00e9 con\u00e7ue pour fonctionner avec un microprocesseur multicoeur, le gain de performance sera tr\u00e8s faible, voir m\u00eame nul. En effet, la conception d\u2019applications capables de tirer profit d\u2019un CPU multicoeur demande la mise en place de certaines techniques de programmation. Il faut aussi avoir conscience que les diff\u00e9rents coeurs d\u2019un CPU doivent se \"partager\" l\u2019acc\u00e8s \u00e0 la m\u00e9moire vive : quand un coeur travaille sur une certaine zone de la RAM, cette m\u00eame zone n\u2019est pas accessible aux autres coeurs, ce qui, bien \u00e9videmment va brider les performances. De plus, on trouve \u00e0 l\u2019int\u00e9rieur des microprocesseurs de la m\u00e9moire \"ultrarapide\" appel\u00e9e m\u00e9moire cache (il ne faut pas confondre m\u00e9moire cache et registres). Le CPU peut stocker certaines donn\u00e9es dans cette m\u00e9moire cache afin de pouvoir y acc\u00e9der tr\u00e8s rapidement dans le futur, en effet, l\u2019acc\u00e8s \u00e0 la m\u00e9moire cache est beaucoup plus rapide que l\u2019acc\u00e8s \u00e0 la RAM. La m\u00e9moire cache ayant un coup assez important, la quantit\u00e9 pr\u00e9sente au sein d\u2019un CPU est assez limit\u00e9e, les diff\u00e9rents coeurs vont donc devoir se partager cette m\u00e9moire cache, ce qui peut aussi provoquer des ralentissements (en faite il existe plusieurs types de m\u00e9moire cache appel\u00e9s L1, L2 et L3, chaque coeur poss\u00e8de son propre cache L1, alors que les caches L2 et L3 sont partag\u00e9s par les diff\u00e9rents coeurs)","title":"\u00c9volution des CPU"},{"location":"Premiere/ArchitectureMaterielle/neumann/#assembleur","text":"","title":"Assembleur"},{"location":"Premiere/ArchitectureMaterielle/neumann/#le-simulateur","text":"On trouve en ligne un simulateur . Remarque : ne pas l\u2019ouvrir avec Firefox car dans ce navigateur, les instructions ne s\u2019affichent pas correctement dans la RAM. simulateur Il se d\u00e9compose ainsi : Une m\u00e9moire vive (\u00e0 droite) dont chaque case m\u00e9moire (cellule) comporte 32 bits . Chaque cellule de la m\u00e9moire poss\u00e8de une adresse (de 000 \u00e0 199), ces adresses sont cod\u00e9es en base 10 (vous pouvez vous en assurer en cliquant sur OPTION puis binary). Un \u00e9diteur (\u00e0 gauche) pour taper le programme en assembleur ; Le processeur (au centre) constitu\u00e9 principalement de l\u2019Unit\u00e9 de Contr\u00f4le, de l\u2019Unit\u00e9 Arithm\u00e9tique et Logique et des registres de R0 \u00e0 R12 plus un compteur de programme (PC pour Program counter) qui contient en permanence l\u2019adresse de la prochaine instruction \u00e0 ex\u00e9cuter.","title":"Le simulateur"},{"location":"Premiere/ArchitectureMaterielle/neumann/#les-instructions","text":"Chaque processeur poss\u00e8de son propre jeu d'instruction. Pour celui propos\u00e9, les instructions sont disponibles sur cette page . Voici les principales instructions traduites : LDR Rd, < adresse m\u00e9moire > : charge la valeur enregistr\u00e9e dans l' < adresse m\u00e9moire > dans le registe d STR Rd, < adresse m\u00e9moire > : enregistre la valeur du registre d dans la m\u00e9moire sp\u00e9cifi\u00e9e par < adresse m\u00e9moire > ADD Rd, Rn, < operand2 > : ajoute la valeur sp\u00e9cifi\u00e9e par < operand2 > \u00e0 la valeur du registre n et enregistre le r\u00e9sultat dans le registre d SUB Rd, Rn, < operand2 > : soustrait la valeur de < operand2 > \u00e0 la valeur du registre n et enregistre le r\u00e9sultat dans le registre d MOV Rd, < operand2 > : copie la valeur < operand2 > dans le registre d CMP Rn, < operand2 > : compare la valeur de registre n avec la valeur de < operand2 >. B < label > : branchement inconditionnel jusqu'\u00e0 la positon < label > dans le programme. B < condition > < label > : branchement conditionnel vers la position < label > dans le programme si la derni\u00e8re comparaison rempli le crit\u00e8re sp\u00e9cifi\u00e9 par < condition >. Les valeurs possibles sont : EQ:\u00e9gal \u00e0 ; NE: n'est pas \u00e9gal \u00e0; GT:Plus grand que; LT: Moins grand que. AND Rd, Rn, < operand2 > : effectue l'op\u00e9ration bit \u00e0 bit logique AND (ET) entre la valeur du registre n et la valeur < operand2 > et enregistre le r\u00e9sultat dans le registre d. ORR Rd, Rn, < operand2 > effectue l'op\u00e9ration bit \u00e0 bit logique OR (OU) entre la valeur du registre n et la valeur < operand2 > et enregistre le r\u00e9sultat dans le registre d. EOR Rd, Rn, < operand2 > : effectue l'op\u00e9ration bit \u00e0 bit logique XOR(OU exclusif) entre la valeur du registre n et la valeur < operand2 > et enregistre le r\u00e9sultat dans le registre d. MVN Rd, < operand2 > : effectue l'op\u00e9ration bit \u00e0 bit logique NOT (NON) sur la valeur < operand2 > et enregistre le r\u00e9sultat dans le registre d. LSL Rd, Rn, < operand2 > : d\u00e9cale de < operand2 > bit(s) vers la gauche la valeur du registre n et enregistre le r\u00e9sultat dans le registre d LSR Rd, Rn, < operand2 > : d\u00e9cale de < operand2 > bit(s) vers la droite la valeur du registre n et enregistre le r\u00e9sultat dans le registre d HALT Arr\u00eate l'execution du programme. < operand2 > peut \u00eatre #nnn (c'est \u00e0 dire un nombre, exemple #42) ou bien Rm (c'est \u00e0 dire le registre m , par exemple R1 est le registre num\u00e9ro 1) Les registres vont de R0 \u00e0 R12. Compl\u00e9ments data, INP et OUT : la pseudo instruction DAT vous permet de mettre un nombre dans la m\u00e9moire en utilisant l'assembleur. Un label peut aussi \u00eatre pris comme donn\u00e9e. INP Rd,2 : lis un nombre dans le registre d. OUT Rd,4 : retourne en sortie le nombre du registre d. Pour OUT, vous pouvez retourner des nombres sign\u00e9s (positifs ou n\u00e9gatifs \\(\\rightarrow\\) param\u00e8tre 4), des nombres non sign\u00e9s (que positifs \\(\\rightarrow\\) param\u00e8tre 5), des hexad\u00e9cimaux (param\u00e8tre 6) ou des charact\u00e8res (param\u00e8tre 7). Vous pouvez entrer des hexa comme 0xnnn partout o\u00f9 un nombre est attendu.","title":"Les instructions"},{"location":"Premiere/ArchitectureMaterielle/neumann/#exemples-et-exercices","text":"","title":"Exemples et exercices"},{"location":"Premiere/ArchitectureMaterielle/neumann/#exemple-1","text":"MOV R0,#42 STR R0,150 HALT Interpr\u00e9tation : On place dans le registre R0 du processeur la valeur 42 ; On place le contenu du registre R0 (\u00e0 savoir 42) dans la m\u00e9moire vive \u00e0 la place 150 ; On stoppe le programme ; Taper ce programme dans l\u2019\u00e9diteur du simulateur, et le faire fonctionner. Observer.","title":"Exemple 1"},{"location":"Premiere/ArchitectureMaterielle/neumann/#exercices","text":"Exercice : \u00c0 l\u2019aide des instructions d\u00e9crites dans le chapitre pr\u00e9c\u00e9dent, dites ce que fait ce programme suivant ligne par ligne, puis l\u2019ex\u00e9cuter. V\u00e9rifier ce que vous aviez trouv\u00e9. MOV R0,#42 MOV R1,#45 ADD R0,R0,R1 OUT R0,4 HALT Exercice : \u00c9crire un programme qui effectue une soustraction entre 95 et 52, l\u2019enregistre en m\u00e9moire (\u00e0 la place 143) et qui affiche le r\u00e9sultat dans la console Output. Le taper et l\u2019ex\u00e9cuter.","title":"Exercices"},{"location":"Premiere/ArchitectureMaterielle/neumann/#exemple-2","text":"Cet exemple s\u2019affiche quand on clique sur SELECT puis max dans le simulateur. INP R0,2 INP R1,2 CMP R1,R0 BGT HIGHER OUT R0,4 B DONE HIGHER: OUT R1,4 DONE: HALT Interpr\u00e9tation : On place deux nombres dans les registres R0 et R1 gr\u00e2ce \u00e0 la fonction INP ; On compare le contenu du registre R1 au contenu du registre R0 ; Si le contenu de R1 est plus grand que celui de R0, on effectue un branchement jusqu\u2019au label HIGHER et on affiche le contenu de R1 ; Sinon, on affiche le contenu de R0 ; On effectue le branchement conditionnel vers done qui stoppe le programme. Exercice : R\u00e9aliser un programme qui prend deux nombres et qui retourne le plus petit. Exercice : Traduire le programme python ci-dessous en assembleur x = 0 // on met en memoire dans la variable nomme x la valeur 0 while x < 3 : x = x + 1 print ( x ) Exercice : Traduire le programme python ci-dessous en assembleur x = 0 for i in range ( 3 ): print ( x )","title":"Exemple 2"},{"location":"Premiere/ArchitectureMaterielle/neumann/#bibliographie","text":"Le site de David Roche Le site des enseignants du lyc\u00e9e Blaise Pascal \u00e0 Saint-Dizier Le simulateur ainsi que la documentation en anglais Le site du Yeti Le livre Num\u00e9rique et Sciences Informatiques aux \u00e9ditions ellipses de Thibaut Balabonski, Sylvain Conchon, Jean-Christophe Filli\u00e2tre et Kim Nguyen.","title":"Bibliographie"},{"location":"Premiere/ArchitectureMaterielle/img_OS/Tri_Pascal/","text":"Tris, triangle de Pascal, et compression # Exercice 1 # La fonction tri_insertion suivante prend en argument une liste L et trie cette liste en utilisant la m\u00e9thode du tri par insertion. Compl\u00e9ter cette fonction pour qu'elle r\u00e9ponde \u00e0 la sp\u00e9cification demand\u00e9e. def tri_insertion ( L ): def tri_insertion ( L ): n = # taille de L #cas du tableau vide if ...... : return L for j in range ( 1 , n ): e = L [ j ] i = j # A l'\u00e9tape j, le sous-tableau L[0,j-1] est tri\u00e9 # et on ins\u00e8re L[j] dans ce sous-tableau en d\u00e9terminant # le plus petit i tel que 0 <= i <= j et L[i-1] > L[j]. while i >= i and L [ i - 1 ] > .... : i = ... # si i != j, on d\u00e9cale le sous tableau L[i,j-1] d\u2019un cran # vers la droite et on place L[j] en position i if i != j : for k in range ( j , ... , - 1 ): ..... = L [ k - 1 ] L [ i ] = .... return L Exemples : >>> tri_insertion ([ 2 , 5 , - 1 , 7 , 0 , 28 ]) [ - 1 , 0 , 2 , 5 , 7 , 28 ] >>> tri_insertion ([ 10 , 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 ]) [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ] Exercice 2 : # Le tri \u00e0 bulles ou tri par propagation est un algorithme de tri. Il consiste \u00e0 comparer r\u00e9p\u00e9titivement les \u00e9l\u00e9ments cons\u00e9cutifs d'un tableau, et \u00e0 les permuter lorsqu'ils sont mal tri\u00e9s. Il doit son nom au fait qu'il d\u00e9place rapidement les plus grands \u00e9l\u00e9ments en fin de tableau, comme des bulles d'air qui remonteraient rapidement \u00e0 la surface d'un liquide. La fonction tri_bulles prend en param\u00e8tre une liste lst d\u2019entiers non tri\u00e9s et renvoie la liste tri\u00e9e par ordre croissant. Compl\u00e9ter le code Python ci-dessous qui impl\u00e9mente la fonction tri_bulles . def tri_bulles ( lst ): n = len ( lst ) for i in range ( ... , ... , - 1 ): for j in range ( i ): if lst [ j ] > lst [ ... ]: ... = lst [ j ] lst [ j ] = lst [ ... ] lst [ j + 1 ] = temp return lst Exercice 3 # Le triangle de Pascal est un triangle de nombre que l'on croise souvent en math\u00e9matiques. On peut trouver sur Wikip\u00e9dia beaucoup d'information \u00e0 son sujet. En voici les premi\u00e8res lignes : 1 1 1 1 2 1 1 3 3 1 1 4 6 4 1 1 5 10 10 5 1 ... Pour le contruire une nouvelle ligne : on commence par un 1 ensuite, pour les suivants jusqu'\u00e0 l'avant dernier, on fait la somme du nombre au m\u00eame niveau dans la ligne pr\u00e9c\u00e9dente avec son pr\u00e9d\u00e9cesseur. En terme plus informatique, pour constuire le j i\u00e8me terme de la ligne i, on ajoute le j i\u00e8me terme et le j-1 i\u00e8me de la ligne i-1. le dernier terme est un 1. On pourra jeter un oeil sur cette vid\u00e9o pour voir la construction au fur et \u00e0 mesure : Youtube Le but de cet exercice est de cr\u00e9er une fonction pascal qui prend en entr\u00e9e un entier n et affiche la ligne num\u00e9ro n du triangle (celle dont le deuxi\u00e8me chiffre est n ). Entr\u00e9e : Un entier n . Sortie : La ligne num\u00e9ro n du triangle de Pascal sous forme de liste de nombres entiers non nuls. La ligne num\u00e9ro 0 correspond \u00e0 la premi\u00e8re avec un seul 1. Pour n = 4 , voici ce qu'on devra obtenir : >>> pascal ( 4 ) [ 1 , 4 , 6 , 4 , 1 ] Pour n = 5 , voici ce qu'on devra obtenir : >>> pascal ( 5 ) [ 1 , 5 , 10 , 10 , 5 , 1 ] Exercice 4 # Le codage par diff\u00e9rence (delta encoding en anglais) permet de compresser un tableau de donn\u00e9es en indiquant pour chaque donn\u00e9e, sa diff\u00e9rence avec la pr\u00e9c\u00e9dente (plut\u00f4t que la donn\u00e9e elle-m\u00eame). On se retrouve alors avec un tableau de donn\u00e9es assez petites n\u00e9cessitant moins de place en m\u00e9moire. Cette m\u00e9thode se r\u00e9v\u00e8le efficace lorsque les valeurs cons\u00e9cutives sont proches. Programmer la fonction delta qui prend en param\u00e8tre un tableau non vide de nombres entiers et qui renvoie un tableau contenant les valeurs enti\u00e8res compress\u00e9es \u00e0 l\u2019aide cette technique. Exemples : >>> delta ([ 1000 , 800 , 802 , 1000 , 1003 ]) [ 1000 , - 200 , 2 , 198 , 3 ] >>> delta ([ 42 ]) [ 42 ] Exercice 5 : tapis de Sierpinsky # Le tapis de Sierpinsky, que je vous propose de faire en Python, est une image fractale obtenue \u00e0 partir d\u2019un carr\u00e9, dans lequel on met d\u2019autres carr\u00e9s\u2026 Bon, dit comme \u00e7a, \u00e7a ne parle pas beaucoup alors autant mettre une image : Le Principe Math\u00e9matique # On part donc d\u2019un carr\u00e9 vide, que l\u2019on s\u2019empresse de d\u00e9couper en 9 cases identiques, puis on remplit le carr\u00e9 central: Ensuite, dans chaque carr\u00e9 vide, on fait la m\u00eame chose que dans le carr\u00e9 initial : on le d\u00e9coupe en 9 cases identiques et on remplit le carr\u00e9 central On recommence avec les nouveaux carr\u00e9s vides: Et on fait cela \u00e0 l\u2019infini. Le r\u00e9sultat final donne le tapis de Sierpinsky . Le Tapis De Sierpinsky : Code Python # Le principe est simple, mais l\u2019application beaucoup moins. En effet, il faut d\u2019abord se demander avec quelle solution graphique on va construire le tapis : on peut en effet partir sur turtle pygame","title":"Tris, triangle de Pascal, et compression"},{"location":"Premiere/ArchitectureMaterielle/img_OS/Tri_Pascal/#tris-triangle-de-pascal-et-compression","text":"","title":"Tris, triangle de Pascal, et compression"},{"location":"Premiere/ArchitectureMaterielle/img_OS/Tri_Pascal/#exercice-1","text":"La fonction tri_insertion suivante prend en argument une liste L et trie cette liste en utilisant la m\u00e9thode du tri par insertion. Compl\u00e9ter cette fonction pour qu'elle r\u00e9ponde \u00e0 la sp\u00e9cification demand\u00e9e. def tri_insertion ( L ): def tri_insertion ( L ): n = # taille de L #cas du tableau vide if ...... : return L for j in range ( 1 , n ): e = L [ j ] i = j # A l'\u00e9tape j, le sous-tableau L[0,j-1] est tri\u00e9 # et on ins\u00e8re L[j] dans ce sous-tableau en d\u00e9terminant # le plus petit i tel que 0 <= i <= j et L[i-1] > L[j]. while i >= i and L [ i - 1 ] > .... : i = ... # si i != j, on d\u00e9cale le sous tableau L[i,j-1] d\u2019un cran # vers la droite et on place L[j] en position i if i != j : for k in range ( j , ... , - 1 ): ..... = L [ k - 1 ] L [ i ] = .... return L Exemples : >>> tri_insertion ([ 2 , 5 , - 1 , 7 , 0 , 28 ]) [ - 1 , 0 , 2 , 5 , 7 , 28 ] >>> tri_insertion ([ 10 , 9 , 8 , 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 ]) [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ]","title":"Exercice 1"},{"location":"Premiere/ArchitectureMaterielle/img_OS/Tri_Pascal/#exercice-2","text":"Le tri \u00e0 bulles ou tri par propagation est un algorithme de tri. Il consiste \u00e0 comparer r\u00e9p\u00e9titivement les \u00e9l\u00e9ments cons\u00e9cutifs d'un tableau, et \u00e0 les permuter lorsqu'ils sont mal tri\u00e9s. Il doit son nom au fait qu'il d\u00e9place rapidement les plus grands \u00e9l\u00e9ments en fin de tableau, comme des bulles d'air qui remonteraient rapidement \u00e0 la surface d'un liquide. La fonction tri_bulles prend en param\u00e8tre une liste lst d\u2019entiers non tri\u00e9s et renvoie la liste tri\u00e9e par ordre croissant. Compl\u00e9ter le code Python ci-dessous qui impl\u00e9mente la fonction tri_bulles . def tri_bulles ( lst ): n = len ( lst ) for i in range ( ... , ... , - 1 ): for j in range ( i ): if lst [ j ] > lst [ ... ]: ... = lst [ j ] lst [ j ] = lst [ ... ] lst [ j + 1 ] = temp return lst","title":"Exercice 2 :"},{"location":"Premiere/ArchitectureMaterielle/img_OS/Tri_Pascal/#exercice-3","text":"Le triangle de Pascal est un triangle de nombre que l'on croise souvent en math\u00e9matiques. On peut trouver sur Wikip\u00e9dia beaucoup d'information \u00e0 son sujet. En voici les premi\u00e8res lignes : 1 1 1 1 2 1 1 3 3 1 1 4 6 4 1 1 5 10 10 5 1 ... Pour le contruire une nouvelle ligne : on commence par un 1 ensuite, pour les suivants jusqu'\u00e0 l'avant dernier, on fait la somme du nombre au m\u00eame niveau dans la ligne pr\u00e9c\u00e9dente avec son pr\u00e9d\u00e9cesseur. En terme plus informatique, pour constuire le j i\u00e8me terme de la ligne i, on ajoute le j i\u00e8me terme et le j-1 i\u00e8me de la ligne i-1. le dernier terme est un 1. On pourra jeter un oeil sur cette vid\u00e9o pour voir la construction au fur et \u00e0 mesure : Youtube Le but de cet exercice est de cr\u00e9er une fonction pascal qui prend en entr\u00e9e un entier n et affiche la ligne num\u00e9ro n du triangle (celle dont le deuxi\u00e8me chiffre est n ). Entr\u00e9e : Un entier n . Sortie : La ligne num\u00e9ro n du triangle de Pascal sous forme de liste de nombres entiers non nuls. La ligne num\u00e9ro 0 correspond \u00e0 la premi\u00e8re avec un seul 1. Pour n = 4 , voici ce qu'on devra obtenir : >>> pascal ( 4 ) [ 1 , 4 , 6 , 4 , 1 ] Pour n = 5 , voici ce qu'on devra obtenir : >>> pascal ( 5 ) [ 1 , 5 , 10 , 10 , 5 , 1 ]","title":"Exercice 3"},{"location":"Premiere/ArchitectureMaterielle/img_OS/Tri_Pascal/#exercice-4","text":"Le codage par diff\u00e9rence (delta encoding en anglais) permet de compresser un tableau de donn\u00e9es en indiquant pour chaque donn\u00e9e, sa diff\u00e9rence avec la pr\u00e9c\u00e9dente (plut\u00f4t que la donn\u00e9e elle-m\u00eame). On se retrouve alors avec un tableau de donn\u00e9es assez petites n\u00e9cessitant moins de place en m\u00e9moire. Cette m\u00e9thode se r\u00e9v\u00e8le efficace lorsque les valeurs cons\u00e9cutives sont proches. Programmer la fonction delta qui prend en param\u00e8tre un tableau non vide de nombres entiers et qui renvoie un tableau contenant les valeurs enti\u00e8res compress\u00e9es \u00e0 l\u2019aide cette technique. Exemples : >>> delta ([ 1000 , 800 , 802 , 1000 , 1003 ]) [ 1000 , - 200 , 2 , 198 , 3 ] >>> delta ([ 42 ]) [ 42 ]","title":"Exercice 4"},{"location":"Premiere/ArchitectureMaterielle/img_OS/Tri_Pascal/#exercice-5-tapis-de-sierpinsky","text":"Le tapis de Sierpinsky, que je vous propose de faire en Python, est une image fractale obtenue \u00e0 partir d\u2019un carr\u00e9, dans lequel on met d\u2019autres carr\u00e9s\u2026 Bon, dit comme \u00e7a, \u00e7a ne parle pas beaucoup alors autant mettre une image :","title":"Exercice 5 : tapis de Sierpinsky"},{"location":"Premiere/ArchitectureMaterielle/img_OS/Tri_Pascal/#le-principe-mathematique","text":"On part donc d\u2019un carr\u00e9 vide, que l\u2019on s\u2019empresse de d\u00e9couper en 9 cases identiques, puis on remplit le carr\u00e9 central: Ensuite, dans chaque carr\u00e9 vide, on fait la m\u00eame chose que dans le carr\u00e9 initial : on le d\u00e9coupe en 9 cases identiques et on remplit le carr\u00e9 central On recommence avec les nouveaux carr\u00e9s vides: Et on fait cela \u00e0 l\u2019infini. Le r\u00e9sultat final donne le tapis de Sierpinsky .","title":"Le Principe Math\u00e9matique"},{"location":"Premiere/ArchitectureMaterielle/img_OS/Tri_Pascal/#le-tapis-de-sierpinsky-code-python","text":"Le principe est simple, mais l\u2019application beaucoup moins. En effet, il faut d\u2019abord se demander avec quelle solution graphique on va construire le tapis : on peut en effet partir sur turtle pygame","title":"Le Tapis De Sierpinsky : Code Python"},{"location":"Premiere/Donnees/codage_entier/","text":"","title":"Codage entier"},{"location":"Premiere/Donnees/codage_entier_rel/","text":"Repr\u00e9sentation et codage des entiers relatifs et des nombres r\u00e9els # Les additions en binaire # Rappel : \\[ \\begin{matrix} & 27\\\\ + & 19 \\\\ \\hline = & 46 \\end{matrix} \\] Donc cet exemple, \u00e9tant donn\u00e9 que 7 + 9 = 16 et que 16 > 9 le plus grand des chiffres associ\u00e9s \u00e0 la base 10 (0,1,2,3,4,5,6,7,8,9), nous positionnons 6 en dessous du 9 et nous reportons une unit\u00e9 au-dessus du 2 et ensuite nous additionnons 1 + 2 + 1 = 4 En binaire : il faut reproduire exactement le m\u00eame protocole. Exemple : \\[ \\begin{matrix} & 010101\\\\ + & 11111 \\\\ \\hline = & 1010100 \\end{matrix} \\]","title":"codage des entiers relatifs"},{"location":"Premiere/Donnees/codage_entier_rel/#representation-et-codage-des-entiers-relatifs-et-des-nombres-reels","text":"","title":"Repr\u00e9sentation et codage des entiers relatifs et des nombres r\u00e9els"},{"location":"Premiere/Donnees/codage_entier_rel/#les-additions-en-binaire","text":"Rappel : \\[ \\begin{matrix} & 27\\\\ + & 19 \\\\ \\hline = & 46 \\end{matrix} \\] Donc cet exemple, \u00e9tant donn\u00e9 que 7 + 9 = 16 et que 16 > 9 le plus grand des chiffres associ\u00e9s \u00e0 la base 10 (0,1,2,3,4,5,6,7,8,9), nous positionnons 6 en dessous du 9 et nous reportons une unit\u00e9 au-dessus du 2 et ensuite nous additionnons 1 + 2 + 1 = 4 En binaire : il faut reproduire exactement le m\u00eame protocole. Exemple : \\[ \\begin{matrix} & 010101\\\\ + & 11111 \\\\ \\hline = & 1010100 \\end{matrix} \\]","title":"Les additions en binaire"},{"location":"Premiere/IHM/bootstrap/","text":"Frameworks # Introduction # Nous allons prendre la page minimale suivante comme base de ce cours. Dans un dossier Boostrap_demo , copier/coller le code suivant dans le fichier index.html . 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" /> < title > Bootstrap demo </ title > </ head > < body > < h1 > Les frameworks avec Bootstrap </ h1 > </ body > </ html > Frameworks CSS # Un framework CSS est un ensemble d'outil (fichiers CSS et JavaScript) permettant de simplifier la conception d'un document Web. Il propose : une grille de mise en page ; une stylisation des \u00e9l\u00e9ments HTML ; des composants suppl\u00e9mentaires (caroussel, menu, fen\u00eatre modale, etc). Un framework est, en r\u00e8gle g\u00e9n\u00e9rale : Cross-browser . Le document est pr\u00e9sent\u00e9 de la m\u00eame mani\u00e8re quelque que soit le navigateur utilis\u00e9 Responsive . La mise en page du document Web s'adapte aux dimensions du support utilis\u00e9 pour le consulter. Mobile First . Le document Web est pens\u00e9 en priorit\u00e9 pour \u00eatre consult\u00e9 sur des p\u00e9riph\u00e9riques mobiles (smartphones, tablettes) Parmi la multitude des frameworks existants, nous allons \u00e9tudier le suivant : Bootstrap 5 . Ce frameworks est d\u00e9velopp\u00e9 par la soci\u00e9t\u00e9 Twitter afin d'uniformiser les interfaces de ses applications internes. Ce framework est d\u00e9sormais open-source depuis ao\u00fbt 2011. Il est disponible \u00e0 l\u2019adresse suivante : http://getbootstrap.com/ Remarque : il n'y a pas que Boostrap. Il y aussi Foundation, Materialize, etc ... CDN # D\u00e9finition d'un CDN Content Delivery Network) # Dans la mesure o\u00f9 un front-end framework se r\u00e9sume \u00e0 une collection de fichiers CSS et JavaScript, il suffit d'incorporer ces fichiers dans un document Web en tant que ressources embarqu\u00e9es pour l'utiliser. Pour des consid\u00e9rations de performance (vitesse de t\u00e9l\u00e9chargement) et de robustesse (utilisation des fichiers les plus r\u00e9cents), il est pr\u00e9f\u00e9rable de s'appuyer sur un CDN , un r\u00e9seau de serveurs distribu\u00e9s sur internet qui mettent \u00e0 disposition du contenu. Insertion du CDN # Dans la page http://getbootstrap.com/ , dans la section include via CDN , il faut copier la ligne suivante : < link href = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel = \"stylesheet\" integrity = \"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin = \"anonymous\" > \u00e0 la fin du head de notre page web (entre la ligne 5 et 6). Enfin, il faut copier la ligne : < script src = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\" integrity = \"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\" crossorigin = \"anonymous\" ></ script > \u00e0 la fin du corps de la page web (c'est-\u00e0-dire avant le ` ``). Ce qui nous donne : 1 2 3 4 5 6 7 8 9 10 11 <!doctype html> < head > < meta charset = \"utf-8\" > < title > Bootstrap demo </ title > < link href = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel = \"stylesheet\" integrity = \"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin = \"anonymous\" > </ head > < body > < h1 > Hello, world! </ h1 > < script src = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\" integrity = \"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\" crossorigin = \"anonymous\" ></ script > </ body > </ html > Pour plus de d\u00e9tails, consulter la page Quick start de Bootstrap. Syst\u00e8me de grille # L'avantage principal d'un framework CSS r\u00e9side dans l'utilisation de son syst\u00e8me de grille qui facilite la mise en place des \u00e9l\u00e9ments HTML dans une d\u00e9marche de Responsive Web Design. La grille est compos\u00e9e de lignes, chaque ligne pouvant contenir jusqu'\u00e0 12 colonnes. Lors de l'ajout d'un nouvel \u00e9l\u00e9ment au sein d'une ligne, il convient de pr\u00e9ciser le nombre de colonnes qu'il occupe. Par cons\u00e9quent, inutile de pr\u00e9ciser manuellement la hauteur et la largeur de l'\u00e9l\u00e9ment qui sera automatiquement dimensionn\u00e9 par le syst\u00e8me de grille. Conform\u00e9ment \u00e0 la d\u00e9marche de Responsive Web Design, le syst\u00e8me de grille est capable de s'adapter en fonction de la largeur du media. xs <576px sm \u2265576px md \u2265768px lg \u2265992px xl \u22651200px xxl \u22651400px Container max-width None (auto) 540px 720px 960px 1140px 1320px Class prefix .col- .col-sm- .col-md- .col-lg- .col-xl- .col-xxl- # of columns 12 Gr\u00e2ce \u00e0 cette classification des largeurs d'\u00e9cran, il est possible d'imaginer une mise en page pour chaque classe de support (smartphone, tablette, ordinateur). L'exemple suivant illustre cette d\u00e9marche en d\u00e9finissant une mise en page en quatre colonnes pour les grands \u00e9crans, en deux colonnes pour les \u00e9crans moyens et enfin en une seule colonne pour les petits.xx 1 2 3 4 5 6 7 8 < div class = \"container\" > < div class = \"row\" > < div class = \"col-lg-3 col-md-6 col-xs-12\" > colonne1 </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > colonne2 </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > colonne3 </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > colonne4 </ div > </ div > </ div > Partie Pratique # Travail pr\u00e9liminaire # Cr\u00e9\u00e9r un nouveau dossier Boostrap_exemple ; Dans ce dossier, cr\u00e9\u00e9r un sous-dossier img ; Dans ce sous-dossier img , enregistrer les 6 images suivantes : image1 , image2 , image3 ; image4 , image5 , image6 . Les paragraphes sont g\u00e9n\u00e9r\u00e9s \u00e0 l'aide de Lorem Ipsum A faire # Cr\u00e9er un fichier index.html qui permet d'obtenir les rendus suivants. Sur un petit \u00e9cran, on obtient le visuel suivant : Et sur un plus grand \u00e9cran : Et plus encore ... # Chacun de ces frameworks propose une grande gamme de classes CSS et de composants JavaScript que je vous invite \u00e0 exp\u00e9rimenter gr\u00e2ce \u00e0 la documentation officielle. http://getbootstrap.com/","title":"Frameworks"},{"location":"Premiere/IHM/bootstrap/#frameworks","text":"","title":"Frameworks"},{"location":"Premiere/IHM/bootstrap/#introduction","text":"Nous allons prendre la page minimale suivante comme base de ce cours. Dans un dossier Boostrap_demo , copier/coller le code suivant dans le fichier index.html . 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" /> < title > Bootstrap demo </ title > </ head > < body > < h1 > Les frameworks avec Bootstrap </ h1 > </ body > </ html >","title":"Introduction"},{"location":"Premiere/IHM/bootstrap/#frameworks-css","text":"Un framework CSS est un ensemble d'outil (fichiers CSS et JavaScript) permettant de simplifier la conception d'un document Web. Il propose : une grille de mise en page ; une stylisation des \u00e9l\u00e9ments HTML ; des composants suppl\u00e9mentaires (caroussel, menu, fen\u00eatre modale, etc). Un framework est, en r\u00e8gle g\u00e9n\u00e9rale : Cross-browser . Le document est pr\u00e9sent\u00e9 de la m\u00eame mani\u00e8re quelque que soit le navigateur utilis\u00e9 Responsive . La mise en page du document Web s'adapte aux dimensions du support utilis\u00e9 pour le consulter. Mobile First . Le document Web est pens\u00e9 en priorit\u00e9 pour \u00eatre consult\u00e9 sur des p\u00e9riph\u00e9riques mobiles (smartphones, tablettes) Parmi la multitude des frameworks existants, nous allons \u00e9tudier le suivant : Bootstrap 5 . Ce frameworks est d\u00e9velopp\u00e9 par la soci\u00e9t\u00e9 Twitter afin d'uniformiser les interfaces de ses applications internes. Ce framework est d\u00e9sormais open-source depuis ao\u00fbt 2011. Il est disponible \u00e0 l\u2019adresse suivante : http://getbootstrap.com/ Remarque : il n'y a pas que Boostrap. Il y aussi Foundation, Materialize, etc ...","title":"Frameworks CSS"},{"location":"Premiere/IHM/bootstrap/#cdn","text":"","title":"CDN"},{"location":"Premiere/IHM/bootstrap/#definition-dun-cdn-content-delivery-network","text":"Dans la mesure o\u00f9 un front-end framework se r\u00e9sume \u00e0 une collection de fichiers CSS et JavaScript, il suffit d'incorporer ces fichiers dans un document Web en tant que ressources embarqu\u00e9es pour l'utiliser. Pour des consid\u00e9rations de performance (vitesse de t\u00e9l\u00e9chargement) et de robustesse (utilisation des fichiers les plus r\u00e9cents), il est pr\u00e9f\u00e9rable de s'appuyer sur un CDN , un r\u00e9seau de serveurs distribu\u00e9s sur internet qui mettent \u00e0 disposition du contenu.","title":"D\u00e9finition d'un CDN Content Delivery Network)"},{"location":"Premiere/IHM/bootstrap/#insertion-du-cdn","text":"Dans la page http://getbootstrap.com/ , dans la section include via CDN , il faut copier la ligne suivante : < link href = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel = \"stylesheet\" integrity = \"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin = \"anonymous\" > \u00e0 la fin du head de notre page web (entre la ligne 5 et 6). Enfin, il faut copier la ligne : < script src = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\" integrity = \"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\" crossorigin = \"anonymous\" ></ script > \u00e0 la fin du corps de la page web (c'est-\u00e0-dire avant le ` ``). Ce qui nous donne : 1 2 3 4 5 6 7 8 9 10 11 <!doctype html> < head > < meta charset = \"utf-8\" > < title > Bootstrap demo </ title > < link href = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel = \"stylesheet\" integrity = \"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin = \"anonymous\" > </ head > < body > < h1 > Hello, world! </ h1 > < script src = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\" integrity = \"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\" crossorigin = \"anonymous\" ></ script > </ body > </ html > Pour plus de d\u00e9tails, consulter la page Quick start de Bootstrap.","title":"Insertion du CDN"},{"location":"Premiere/IHM/bootstrap/#systeme-de-grille","text":"L'avantage principal d'un framework CSS r\u00e9side dans l'utilisation de son syst\u00e8me de grille qui facilite la mise en place des \u00e9l\u00e9ments HTML dans une d\u00e9marche de Responsive Web Design. La grille est compos\u00e9e de lignes, chaque ligne pouvant contenir jusqu'\u00e0 12 colonnes. Lors de l'ajout d'un nouvel \u00e9l\u00e9ment au sein d'une ligne, il convient de pr\u00e9ciser le nombre de colonnes qu'il occupe. Par cons\u00e9quent, inutile de pr\u00e9ciser manuellement la hauteur et la largeur de l'\u00e9l\u00e9ment qui sera automatiquement dimensionn\u00e9 par le syst\u00e8me de grille. Conform\u00e9ment \u00e0 la d\u00e9marche de Responsive Web Design, le syst\u00e8me de grille est capable de s'adapter en fonction de la largeur du media. xs <576px sm \u2265576px md \u2265768px lg \u2265992px xl \u22651200px xxl \u22651400px Container max-width None (auto) 540px 720px 960px 1140px 1320px Class prefix .col- .col-sm- .col-md- .col-lg- .col-xl- .col-xxl- # of columns 12 Gr\u00e2ce \u00e0 cette classification des largeurs d'\u00e9cran, il est possible d'imaginer une mise en page pour chaque classe de support (smartphone, tablette, ordinateur). L'exemple suivant illustre cette d\u00e9marche en d\u00e9finissant une mise en page en quatre colonnes pour les grands \u00e9crans, en deux colonnes pour les \u00e9crans moyens et enfin en une seule colonne pour les petits.xx 1 2 3 4 5 6 7 8 < div class = \"container\" > < div class = \"row\" > < div class = \"col-lg-3 col-md-6 col-xs-12\" > colonne1 </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > colonne2 </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > colonne3 </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > colonne4 </ div > </ div > </ div >","title":"Syst\u00e8me de grille"},{"location":"Premiere/IHM/bootstrap/#partie-pratique","text":"","title":"Partie Pratique"},{"location":"Premiere/IHM/bootstrap/#travail-preliminaire","text":"Cr\u00e9\u00e9r un nouveau dossier Boostrap_exemple ; Dans ce dossier, cr\u00e9\u00e9r un sous-dossier img ; Dans ce sous-dossier img , enregistrer les 6 images suivantes : image1 , image2 , image3 ; image4 , image5 , image6 . Les paragraphes sont g\u00e9n\u00e9r\u00e9s \u00e0 l'aide de Lorem Ipsum","title":"Travail pr\u00e9liminaire"},{"location":"Premiere/IHM/bootstrap/#a-faire","text":"Cr\u00e9er un fichier index.html qui permet d'obtenir les rendus suivants. Sur un petit \u00e9cran, on obtient le visuel suivant : Et sur un plus grand \u00e9cran :","title":"A faire"},{"location":"Premiere/IHM/bootstrap/#et-plus-encore","text":"Chacun de ces frameworks propose une grande gamme de classes CSS et de composants JavaScript que je vous invite \u00e0 exp\u00e9rimenter gr\u00e2ce \u00e0 la documentation officielle. http://getbootstrap.com/","title":"Et plus encore ..."},{"location":"Premiere/IHM/events_js/","text":"Les \u00e9venements Javascript # Le DOM : Documents Object Model\u2693\ufe0e # Arborescence du DOM Afin de pouvoir intervenir sur la page web, tous les \u00e9l\u00e9ments de cette page sont utilis\u00e9s en tant qu'objets agenc\u00e9s suivant l'arborescence de la page HTML. La racine de cet arbre s'appelle document. Le DOM est une interface de programmation HTML qui d\u00e9finit : les \u00e9l\u00e9ments HTML en tant qu'objets, les propri\u00e9t\u00e9s de tous les \u00e9l\u00e9ments HTML, les m\u00e9thodes pour acc\u00e9der \u00e0 tous les \u00e9l\u00e9ments HTML, les \u00e9v\u00e9nements pour tous les \u00e9l\u00e9ments HTML. HTML DOM est un standard qui d\u00e9finit comment acc\u00e9der, changer, ajouter ou supprimer des \u00e9l\u00e9ments HTML. Diff\u00e9rentes possibilit\u00e9s de s\u00e9lection des \u00e9l\u00e9ments : # S\u00e9lection d'un \u00e9l\u00e9ment par l'arborescence du DOM . document . title = \"Le JavaScript\" ; S\u00e9lection d'un \u00e9l\u00e9ment par l'attribut id. Par exemple, dans l'HTML, si on ajoute : id = \"bloc_page\" dans une balise p d'un paragraphe, on peut ajouter dans le fichier javascript. let bloc = document . getElementById ( 'bloc_page' ) bloc . style . color = 'red' ; Rappel : Par d\u00e9finition un id n'est associ\u00e9 qu'\u00e0 un seul \u00e9l\u00e9ment. S\u00e9lection de tous les \u00e9l\u00e9ments par le nom de balise. Le r\u00e9sultat est un tableau des diff\u00e9rents \u00e9l\u00e9ments. let paragraphes = document . getElementsByTagName ( 'p' ); //selection par balise p for ( i of paragraphes ){ // gestiontableau i . textContent = \"Coucou\" ; // acc\u00e8s \u00e0 chacun d'eux et remplacement par Coucou } S\u00e9lection de tous les \u00e9l\u00e9ments par l'attribut class. Le r\u00e9sultat est un tableau1 des diff\u00e9rents \u00e9l\u00e9ments. let imagesflottantes = document . getElementsByClassName ( \"imagesflottantes\" ); ` S\u00e9lection d'un \u00e9l\u00e9ment (le 1er si il y en a plusieurs) en reprenant la syntaxe des s\u00e9lecteurs CSS. let para = document.querySelector(\"#bloc_page\") para.style.backgroundColor = 'lightgrey'; S\u00e9lection de plusieurs \u00e9l\u00e9ments en reprenant la syntaxe des s\u00e9lecteurs CSS : le r\u00e9sultat est un tableau. document . querySelectorAll ( \"p.important\" )[ 0 ]. style . backgroundColor = 'gold' ; ` Exercice 1: Tester chacune de ces lignes sur le document suivant. <!DOCTYPE html> < html lang = \"en-US\" > < head > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width\" > < title > js_exemple </ title > < style > button { margin : 10 px ; } </ style > </ head > < body > < h1 > Vive le javascript </ h1 > < p > Lorem ipsum dolor, sit amet consectetur adipisicing elit. Distinctio ut atque a officiis tenetur, quasi saepe quia recusandae, numquam reprehenderit, suscipit neque cupiditate. Eos repudiandae, tempore beatae eveniet natus nulla! </ p > < p > Lorem ipsum dolor sit, amet consectetur adipisicing elit. Dicta ab id et, suscipit voluptate harum rerum. Rerum tempora maxime harum aliquid minus, mollitia ad? A nemo fugit minus laboriosam repellendus? </ p > < script > </ script > </ body > </ html > Un premier exemple d'\u00e9venement en Javascript # HTML 1 < button > Change color </ button > JS 1 2 3 4 5 6 7 8 9 10 11 12 13 var btn = document . querySelector ( \"button\" ); function random ( number ) { return Math . floor ( Math . random () * ( number + 1 )); } function change_couleur () { var rndCol = \"rgb(\" + random ( 255 ) + \",\" + random ( 255 ) + \",\" + random ( 255 ) + \")\" ; document . body . style . backgroundColor = rndCol ; } btn . onclick = change_couleur ; Dans ce code : nous stockons une r\u00e9f\u00e9rence au bouton dans une variable appel\u00e9e btn , en utilisant la fonction Document.querySelector() . Nous d\u00e9finissons \u00e9galement une fonction qui renvoie un nombre al\u00e9atoire. La troisi\u00e8me partie du code est le gestionnaire d'\u00e9v\u00e9nement. La variable btn pointe sur un \u00e9l\u00e9ment <button> , et ce type d'objet a un certain nombre d'\u00e9v\u00e9nements qui peuvent \u00eatre d\u00e9clench\u00e9s, et par cons\u00e9quent, des gestionnaires d'\u00e9v\u00e9nements sont disponibles. Nous sommes \u00e0 l'\u00e9coute du d\u00e9clenchement de l'\u00e9v\u00e9nement click, en d\u00e9finissant la propri\u00e9t\u00e9 onclick du gestionnaire d'\u00e9v\u00e9nements comme une fonction anonyme contenant du code qui g\u00e9n\u00e8re une couleur RVB al\u00e9atoire et lui affecte la couleur d'arri\u00e8re-plan <body> . Ce code sera maintenant ex\u00e9cut\u00e9 chaque fois que l'\u00e9v\u00e9nement \"click\" se d\u00e9clenchera sur l'\u00e9l\u00e9ment <button> , c'est-\u00e0-dire chaque fois qu'un utilisateur cliquera dessus. Les propri\u00e9t\u00e9s de gestionnaire d'\u00e9v\u00e9nements # De nombreuses propri\u00e9t\u00e9s de gestionnaire d'\u00e9v\u00e9nement sont disponibles. btn.onfocus et btn.onblur .La couleur change lorsque le bouton est net ou gris\u00e9 (essayez d'appuyer sur la touche Tab pour l'activer et l'\u00e9teindre \u00e0 nouveau). Ceux-ci sont souvent utilis\u00e9s pour afficher des informations sur la fa\u00e7on de remplir les champs de formulaire lorsqu'ils sont s\u00e9lectionn\u00e9s, ou afficher un message d'erreur si un champ de formulaire vient d'\u00eatre rempli avec une valeur incorrecte. btn.ondblclick . La couleur change seulement si l'\u00e9l\u00e9ment est double-cliqu\u00e9. window.onkeypress , window.onkeydown , window.onkeyup . La couleur change si l'on appuie sur une touche du clavier. keypress se r\u00e9f\u00e8re \u00e0 un appui normal sur la touche (bouton appuy\u00e9 puis rel\u00e2ch\u00e9), alors que keydown et keyup se r\u00e9f\u00e8rent respectivement \u00e0 l'appui et au rel\u00e2chement sur la touche. Notez que cela ne fonctionne pas si vous essayez d'enregistrer ce gestionnaire d'\u00e9v\u00e9nement sur le bouton lui-m\u00eame - nous avons d\u00fb l'enregistrer sur l'objet window, qui repr\u00e9sente la fen\u00eatre enti\u00e8re du navigateur. btn.onmouseover et btn.onmouseout . La couleur changera respectivement lorsque le pointeur de la souris survolera le bouton, ou lorsque le curseur arr\u00eatera le survol du bouton pour s'\u00e9loigner de ce dernier. Certains \u00e9v\u00e9nements sont tr\u00e8s g\u00e9n\u00e9raux et disponibles presque partout (par exemple un gestionnaire onclick peut \u00eatre enregistr\u00e9 sur presque n'importe quel \u00e9l\u00e9ment), alors que certains sont plus sp\u00e9cifiques. Exercice 2: Maintenant, changez btn.onclick pour lui attribuer, tour \u00e0 tour, les diff\u00e9rentes valeurs qui pr\u00e9c\u00e8dent, et observez le r\u00e9sultat. Exercice 3: R\u00e9aliser deux boutons sur une page web. L'un change la couleur du fond, l'autre fait \"quitter\" la page. La fonction quit() est d\u00e9finie ci-dessous. function quit (){ if ( confirm ( \"Tu veux vraiment partir ? :\" )) { alert ( \"\u00e0 bient\u00f4t !\" ); close (); } } Autre mani\u00e8re # Une mani\u00e8re plus d\u00e9suete est la suivante : HTML 1 2 3 4 5 6 7 8 9 10 < html > < head > < title > Age </ title > </ head > < body > < button onClick = \"suivant();\" > Clic </ button > < span id = \"valeur\" > 0 </ span > < script src = \"evenmt1.js\" ></ script > </ body > </ html > JS 1 2 3 4 5 6 let compteur = 0 ; function suivant (){ compteur = compteur + 1 ; let v = document . getElementById ( \"valeur\" ); v . innerHTML = compteur ; } Elle oblige \u00e0 coupler html et js et donc la premi\u00e8re mani\u00e8re est \u00e0 privil\u00e8gier. IL existe une autre mani\u00e8re de g\u00e9rer les \u00e9venements. Elle est d\u00e9crite ci-dessous. < html > < head > < title > Age </ title > </ head > < body > < button id = \"bouton\" > Clic </ button > < span id = \"valeur\" > 0 </ span > < script src = \"evenmt1.js\" ></ script > </ body > </ html > let compteur = 0 ; function suivant (){ compteur = compteur + 1 ; let v = document . getElementById ( \"valeur\" ); v . innerHTML = compteur ; } let b = document . getElementById ( \"valeur\" ); b . addEventListener ( \"click\" , suivant );","title":"evenements_js"},{"location":"Premiere/IHM/events_js/#les-evenements-javascript","text":"","title":"Les \u00e9venements Javascript"},{"location":"Premiere/IHM/events_js/#le-dom-documents-object-model","text":"Arborescence du DOM Afin de pouvoir intervenir sur la page web, tous les \u00e9l\u00e9ments de cette page sont utilis\u00e9s en tant qu'objets agenc\u00e9s suivant l'arborescence de la page HTML. La racine de cet arbre s'appelle document. Le DOM est une interface de programmation HTML qui d\u00e9finit : les \u00e9l\u00e9ments HTML en tant qu'objets, les propri\u00e9t\u00e9s de tous les \u00e9l\u00e9ments HTML, les m\u00e9thodes pour acc\u00e9der \u00e0 tous les \u00e9l\u00e9ments HTML, les \u00e9v\u00e9nements pour tous les \u00e9l\u00e9ments HTML. HTML DOM est un standard qui d\u00e9finit comment acc\u00e9der, changer, ajouter ou supprimer des \u00e9l\u00e9ments HTML.","title":"Le DOM : Documents Object Model\u2693\ufe0e"},{"location":"Premiere/IHM/events_js/#differentes-possibilites-de-selection-des-elements","text":"S\u00e9lection d'un \u00e9l\u00e9ment par l'arborescence du DOM . document . title = \"Le JavaScript\" ; S\u00e9lection d'un \u00e9l\u00e9ment par l'attribut id. Par exemple, dans l'HTML, si on ajoute : id = \"bloc_page\" dans une balise p d'un paragraphe, on peut ajouter dans le fichier javascript. let bloc = document . getElementById ( 'bloc_page' ) bloc . style . color = 'red' ; Rappel : Par d\u00e9finition un id n'est associ\u00e9 qu'\u00e0 un seul \u00e9l\u00e9ment. S\u00e9lection de tous les \u00e9l\u00e9ments par le nom de balise. Le r\u00e9sultat est un tableau des diff\u00e9rents \u00e9l\u00e9ments. let paragraphes = document . getElementsByTagName ( 'p' ); //selection par balise p for ( i of paragraphes ){ // gestiontableau i . textContent = \"Coucou\" ; // acc\u00e8s \u00e0 chacun d'eux et remplacement par Coucou } S\u00e9lection de tous les \u00e9l\u00e9ments par l'attribut class. Le r\u00e9sultat est un tableau1 des diff\u00e9rents \u00e9l\u00e9ments. let imagesflottantes = document . getElementsByClassName ( \"imagesflottantes\" ); ` S\u00e9lection d'un \u00e9l\u00e9ment (le 1er si il y en a plusieurs) en reprenant la syntaxe des s\u00e9lecteurs CSS. let para = document.querySelector(\"#bloc_page\") para.style.backgroundColor = 'lightgrey'; S\u00e9lection de plusieurs \u00e9l\u00e9ments en reprenant la syntaxe des s\u00e9lecteurs CSS : le r\u00e9sultat est un tableau. document . querySelectorAll ( \"p.important\" )[ 0 ]. style . backgroundColor = 'gold' ; ` Exercice 1: Tester chacune de ces lignes sur le document suivant. <!DOCTYPE html> < html lang = \"en-US\" > < head > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width\" > < title > js_exemple </ title > < style > button { margin : 10 px ; } </ style > </ head > < body > < h1 > Vive le javascript </ h1 > < p > Lorem ipsum dolor, sit amet consectetur adipisicing elit. Distinctio ut atque a officiis tenetur, quasi saepe quia recusandae, numquam reprehenderit, suscipit neque cupiditate. Eos repudiandae, tempore beatae eveniet natus nulla! </ p > < p > Lorem ipsum dolor sit, amet consectetur adipisicing elit. Dicta ab id et, suscipit voluptate harum rerum. Rerum tempora maxime harum aliquid minus, mollitia ad? A nemo fugit minus laboriosam repellendus? </ p > < script > </ script > </ body > </ html >","title":"Diff\u00e9rentes possibilit\u00e9s de s\u00e9lection des \u00e9l\u00e9ments :"},{"location":"Premiere/IHM/events_js/#un-premier-exemple-devenement-en-javascript","text":"HTML 1 < button > Change color </ button > JS 1 2 3 4 5 6 7 8 9 10 11 12 13 var btn = document . querySelector ( \"button\" ); function random ( number ) { return Math . floor ( Math . random () * ( number + 1 )); } function change_couleur () { var rndCol = \"rgb(\" + random ( 255 ) + \",\" + random ( 255 ) + \",\" + random ( 255 ) + \")\" ; document . body . style . backgroundColor = rndCol ; } btn . onclick = change_couleur ; Dans ce code : nous stockons une r\u00e9f\u00e9rence au bouton dans une variable appel\u00e9e btn , en utilisant la fonction Document.querySelector() . Nous d\u00e9finissons \u00e9galement une fonction qui renvoie un nombre al\u00e9atoire. La troisi\u00e8me partie du code est le gestionnaire d'\u00e9v\u00e9nement. La variable btn pointe sur un \u00e9l\u00e9ment <button> , et ce type d'objet a un certain nombre d'\u00e9v\u00e9nements qui peuvent \u00eatre d\u00e9clench\u00e9s, et par cons\u00e9quent, des gestionnaires d'\u00e9v\u00e9nements sont disponibles. Nous sommes \u00e0 l'\u00e9coute du d\u00e9clenchement de l'\u00e9v\u00e9nement click, en d\u00e9finissant la propri\u00e9t\u00e9 onclick du gestionnaire d'\u00e9v\u00e9nements comme une fonction anonyme contenant du code qui g\u00e9n\u00e8re une couleur RVB al\u00e9atoire et lui affecte la couleur d'arri\u00e8re-plan <body> . Ce code sera maintenant ex\u00e9cut\u00e9 chaque fois que l'\u00e9v\u00e9nement \"click\" se d\u00e9clenchera sur l'\u00e9l\u00e9ment <button> , c'est-\u00e0-dire chaque fois qu'un utilisateur cliquera dessus.","title":"Un premier exemple d'\u00e9venement en Javascript"},{"location":"Premiere/IHM/events_js/#les-proprietes-de-gestionnaire-devenements","text":"De nombreuses propri\u00e9t\u00e9s de gestionnaire d'\u00e9v\u00e9nement sont disponibles. btn.onfocus et btn.onblur .La couleur change lorsque le bouton est net ou gris\u00e9 (essayez d'appuyer sur la touche Tab pour l'activer et l'\u00e9teindre \u00e0 nouveau). Ceux-ci sont souvent utilis\u00e9s pour afficher des informations sur la fa\u00e7on de remplir les champs de formulaire lorsqu'ils sont s\u00e9lectionn\u00e9s, ou afficher un message d'erreur si un champ de formulaire vient d'\u00eatre rempli avec une valeur incorrecte. btn.ondblclick . La couleur change seulement si l'\u00e9l\u00e9ment est double-cliqu\u00e9. window.onkeypress , window.onkeydown , window.onkeyup . La couleur change si l'on appuie sur une touche du clavier. keypress se r\u00e9f\u00e8re \u00e0 un appui normal sur la touche (bouton appuy\u00e9 puis rel\u00e2ch\u00e9), alors que keydown et keyup se r\u00e9f\u00e8rent respectivement \u00e0 l'appui et au rel\u00e2chement sur la touche. Notez que cela ne fonctionne pas si vous essayez d'enregistrer ce gestionnaire d'\u00e9v\u00e9nement sur le bouton lui-m\u00eame - nous avons d\u00fb l'enregistrer sur l'objet window, qui repr\u00e9sente la fen\u00eatre enti\u00e8re du navigateur. btn.onmouseover et btn.onmouseout . La couleur changera respectivement lorsque le pointeur de la souris survolera le bouton, ou lorsque le curseur arr\u00eatera le survol du bouton pour s'\u00e9loigner de ce dernier. Certains \u00e9v\u00e9nements sont tr\u00e8s g\u00e9n\u00e9raux et disponibles presque partout (par exemple un gestionnaire onclick peut \u00eatre enregistr\u00e9 sur presque n'importe quel \u00e9l\u00e9ment), alors que certains sont plus sp\u00e9cifiques. Exercice 2: Maintenant, changez btn.onclick pour lui attribuer, tour \u00e0 tour, les diff\u00e9rentes valeurs qui pr\u00e9c\u00e8dent, et observez le r\u00e9sultat. Exercice 3: R\u00e9aliser deux boutons sur une page web. L'un change la couleur du fond, l'autre fait \"quitter\" la page. La fonction quit() est d\u00e9finie ci-dessous. function quit (){ if ( confirm ( \"Tu veux vraiment partir ? :\" )) { alert ( \"\u00e0 bient\u00f4t !\" ); close (); } }","title":"Les propri\u00e9t\u00e9s de gestionnaire d'\u00e9v\u00e9nements"},{"location":"Premiere/IHM/events_js/#autre-maniere","text":"Une mani\u00e8re plus d\u00e9suete est la suivante : HTML 1 2 3 4 5 6 7 8 9 10 < html > < head > < title > Age </ title > </ head > < body > < button onClick = \"suivant();\" > Clic </ button > < span id = \"valeur\" > 0 </ span > < script src = \"evenmt1.js\" ></ script > </ body > </ html > JS 1 2 3 4 5 6 let compteur = 0 ; function suivant (){ compteur = compteur + 1 ; let v = document . getElementById ( \"valeur\" ); v . innerHTML = compteur ; } Elle oblige \u00e0 coupler html et js et donc la premi\u00e8re mani\u00e8re est \u00e0 privil\u00e8gier. IL existe une autre mani\u00e8re de g\u00e9rer les \u00e9venements. Elle est d\u00e9crite ci-dessous. < html > < head > < title > Age </ title > </ head > < body > < button id = \"bouton\" > Clic </ button > < span id = \"valeur\" > 0 </ span > < script src = \"evenmt1.js\" ></ script > </ body > </ html > let compteur = 0 ; function suivant (){ compteur = compteur + 1 ; let v = document . getElementById ( \"valeur\" ); v . innerHTML = compteur ; } let b = document . getElementById ( \"valeur\" ); b . addEventListener ( \"click\" , suivant );","title":"Autre mani\u00e8re"},{"location":"Premiere/IHM/formulaire/","text":"Formulaire # Premier exemple # Code # Sur de nombreuses pages web, des formulaires sont utilis\u00e9s que ce soit pour une authentification par identifiant et mot de passe ou pour une recherche d\u2019informations. Le formulaire est un \u00e9l\u00e9ment cod\u00e9 en HTML. See the Pen Untitled by eric ( @ga78523 ) on CodePen . Exercice 1 : Ins\u00e9rer ce code dans une page html. Modifier et observer ce que fait ce code. Explications # Dans ce fragment de code , on remarque en premier lieu l\u2019\u00e9l\u00e9ment form qui poss\u00e8de deux attributs. Le valeur de l\u2019attribut action est l\u2019URL \u00e0 laquelle envoyer les param\u00e8tres. Le deuxi\u00e8me attribut method d\u00e9finit le mode de passage des param\u00e8tres. Les arguments sont \u00e0 saisir dans trois champs de saisie de texte, correspondant \u00e0 des \u00e9l\u00e9ments HTML input . Ces \u00e9l\u00e9ments poss\u00e8dent deux attributs. Le premier, type, indique que l\u2019on souhaite un champ de saisie de texte (il existe d\u2019autres types de d\u2019\u00e9l\u00e9ments). Le second, name, indique le nom du param\u00e8tre auquel ce champ correspond. Enfin, le dernier \u00e9l\u00e9ment button , correspond au bouton de soumission du formulaire. Mode de passage des param\u00e8tres # M\u00e9thode GET # La m\u00e9thode GET est la m\u00e9thode par d\u00e9faut d\u2019envoi de formulaire. Avec cette m\u00e9thode, les param\u00e8tres et leurs valeurs sont directement transmis au serveur via l\u2019URL sous la forme : Protocole ://nom-ou-adresse/document ?n1 = v1 & n2 = v2 & ....& nk = vk avec n1 = v1 : la valeur v1 donn\u00e9e par l\u2019utilisateur au nom n1 ; Cette m\u00e9thode est utilis\u00e9e pour passer des param\u00e8tres limit\u00e9s soit en nombre soit en taille. En effet, les navigateurs et les serveurs web imposent tous des limites \u00e0 la taille des URL. Mais cette m\u00e9thode pose aussi un probl\u00e8me de confidentialit\u00e9. Si on tape un mot de passe dans un formulaire, celui-ci va se retrouver en clair dans l\u2019URL. M\u00e9thode POST # Si l\u2019attribut method vaut post, alors les \u00e9l\u00e9ments sont pass\u00e9s de mani\u00e8re diff\u00e9rente. Le navigateur forme bien la cha\u00eene de caract\u00e8res n1 = v1 & n2 = v2 & ....& nk = vk . Cependant, il envoie un message HTTP commen\u00e7ant par POST. Les param\u00e8tres sont alors plac\u00e9s dans le corps de la requ\u00eate HTTP de la mani\u00e8re suivante : POST /form HTTP/1.1 Host : www.nsi-premi\u00e8re.fr Content-Type : application/x-www-form-urlencoded Content-Length : 30 nom=LAMBERT&prenom=Justin&age=23 Autres types de formulaires # Texte # La balise <input type=\"text\"> permet la saisie d\u2019une cha\u00eene de caract\u00e8re sans retour \u00e0 la ligne. La variante <input type=\"password\"> fonctionne de mani\u00e8re similaire mais n\u2019affiche pas les caract\u00e8res saisis. La balise <textarea> correspond \u00e0 une zone de saisie multilignes et redimensionnable. Type \"Radio\" # Ce type de formulaire permet \u00e0 l\u2019utilisateur de choisir une valeur parmi plusieurs. Il correspond \u00e0 la balise <input type=\"radio\"> . Tous les boutons appartenant au m\u00eame groupe doivent avoir la m\u00eame valeur pour l\u2019attribut name . L\u2019attribut value d\u00e9finit la valeur utilis\u00e9e, alors que le contenu de la balise d\u00e9finit cha\u00eene de caract\u00e8re affich\u00e9e dans l\u2019interface. Exemple : See the Pen formulaire2 : radio by eric ( @ga78523 ) on CodePen . Liste # La paire d\u2019\u00e9l\u00e9ments select et option permettent de d\u00e9finir une liste de choix. C\u2019est sur l\u2019\u00e9l\u00e9ment select que l\u2019on d\u00e9finit l\u2019attribut name . Les \u00e9l\u00e9ments option , imbriqu\u00e9es dans l\u2019\u00e9l\u00e9ment select d\u00e9finissent les valeurs et les chaines affich\u00e9es. Exemple : See the Pen Untitled by eric ( @ga78523 ) on CodePen . Autres # Il existe beaucoup d\u2019autres possibilit\u00e9s. Vous pouvez consulter l\u2019adresse suivante : https://developer.mozilla.org/fr/docs/Web/HTML/Element/Input . Exercice # R\u00e9aliser une page internet qui comportera un formulaire. Celui-ci devra utiliser les trois types d\u2019entr\u00e9e vus dans ce cours. Celui-ci peut ressembler \u00e0 la page web suivante : Pour en savoir plus... # Consultez le site : https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form","title":"Formulaire"},{"location":"Premiere/IHM/formulaire/#formulaire","text":"","title":"Formulaire"},{"location":"Premiere/IHM/formulaire/#premier-exemple","text":"","title":"Premier exemple"},{"location":"Premiere/IHM/formulaire/#code","text":"Sur de nombreuses pages web, des formulaires sont utilis\u00e9s que ce soit pour une authentification par identifiant et mot de passe ou pour une recherche d\u2019informations. Le formulaire est un \u00e9l\u00e9ment cod\u00e9 en HTML. See the Pen Untitled by eric ( @ga78523 ) on CodePen . Exercice 1 : Ins\u00e9rer ce code dans une page html. Modifier et observer ce que fait ce code.","title":"Code"},{"location":"Premiere/IHM/formulaire/#explications","text":"Dans ce fragment de code , on remarque en premier lieu l\u2019\u00e9l\u00e9ment form qui poss\u00e8de deux attributs. Le valeur de l\u2019attribut action est l\u2019URL \u00e0 laquelle envoyer les param\u00e8tres. Le deuxi\u00e8me attribut method d\u00e9finit le mode de passage des param\u00e8tres. Les arguments sont \u00e0 saisir dans trois champs de saisie de texte, correspondant \u00e0 des \u00e9l\u00e9ments HTML input . Ces \u00e9l\u00e9ments poss\u00e8dent deux attributs. Le premier, type, indique que l\u2019on souhaite un champ de saisie de texte (il existe d\u2019autres types de d\u2019\u00e9l\u00e9ments). Le second, name, indique le nom du param\u00e8tre auquel ce champ correspond. Enfin, le dernier \u00e9l\u00e9ment button , correspond au bouton de soumission du formulaire.","title":"Explications"},{"location":"Premiere/IHM/formulaire/#mode-de-passage-des-parametres","text":"","title":"Mode de passage des param\u00e8tres"},{"location":"Premiere/IHM/formulaire/#methode-get","text":"La m\u00e9thode GET est la m\u00e9thode par d\u00e9faut d\u2019envoi de formulaire. Avec cette m\u00e9thode, les param\u00e8tres et leurs valeurs sont directement transmis au serveur via l\u2019URL sous la forme : Protocole ://nom-ou-adresse/document ?n1 = v1 & n2 = v2 & ....& nk = vk avec n1 = v1 : la valeur v1 donn\u00e9e par l\u2019utilisateur au nom n1 ; Cette m\u00e9thode est utilis\u00e9e pour passer des param\u00e8tres limit\u00e9s soit en nombre soit en taille. En effet, les navigateurs et les serveurs web imposent tous des limites \u00e0 la taille des URL. Mais cette m\u00e9thode pose aussi un probl\u00e8me de confidentialit\u00e9. Si on tape un mot de passe dans un formulaire, celui-ci va se retrouver en clair dans l\u2019URL.","title":"M\u00e9thode GET"},{"location":"Premiere/IHM/formulaire/#methode-post","text":"Si l\u2019attribut method vaut post, alors les \u00e9l\u00e9ments sont pass\u00e9s de mani\u00e8re diff\u00e9rente. Le navigateur forme bien la cha\u00eene de caract\u00e8res n1 = v1 & n2 = v2 & ....& nk = vk . Cependant, il envoie un message HTTP commen\u00e7ant par POST. Les param\u00e8tres sont alors plac\u00e9s dans le corps de la requ\u00eate HTTP de la mani\u00e8re suivante : POST /form HTTP/1.1 Host : www.nsi-premi\u00e8re.fr Content-Type : application/x-www-form-urlencoded Content-Length : 30 nom=LAMBERT&prenom=Justin&age=23","title":"M\u00e9thode POST"},{"location":"Premiere/IHM/formulaire/#autres-types-de-formulaires","text":"","title":"Autres types de formulaires"},{"location":"Premiere/IHM/formulaire/#texte","text":"La balise <input type=\"text\"> permet la saisie d\u2019une cha\u00eene de caract\u00e8re sans retour \u00e0 la ligne. La variante <input type=\"password\"> fonctionne de mani\u00e8re similaire mais n\u2019affiche pas les caract\u00e8res saisis. La balise <textarea> correspond \u00e0 une zone de saisie multilignes et redimensionnable.","title":"Texte"},{"location":"Premiere/IHM/formulaire/#type-radio","text":"Ce type de formulaire permet \u00e0 l\u2019utilisateur de choisir une valeur parmi plusieurs. Il correspond \u00e0 la balise <input type=\"radio\"> . Tous les boutons appartenant au m\u00eame groupe doivent avoir la m\u00eame valeur pour l\u2019attribut name . L\u2019attribut value d\u00e9finit la valeur utilis\u00e9e, alors que le contenu de la balise d\u00e9finit cha\u00eene de caract\u00e8re affich\u00e9e dans l\u2019interface. Exemple : See the Pen formulaire2 : radio by eric ( @ga78523 ) on CodePen .","title":"Type \"Radio\""},{"location":"Premiere/IHM/formulaire/#liste","text":"La paire d\u2019\u00e9l\u00e9ments select et option permettent de d\u00e9finir une liste de choix. C\u2019est sur l\u2019\u00e9l\u00e9ment select que l\u2019on d\u00e9finit l\u2019attribut name . Les \u00e9l\u00e9ments option , imbriqu\u00e9es dans l\u2019\u00e9l\u00e9ment select d\u00e9finissent les valeurs et les chaines affich\u00e9es. Exemple : See the Pen Untitled by eric ( @ga78523 ) on CodePen .","title":"Liste"},{"location":"Premiere/IHM/formulaire/#autres","text":"Il existe beaucoup d\u2019autres possibilit\u00e9s. Vous pouvez consulter l\u2019adresse suivante : https://developer.mozilla.org/fr/docs/Web/HTML/Element/Input .","title":"Autres"},{"location":"Premiere/IHM/formulaire/#exercice","text":"R\u00e9aliser une page internet qui comportera un formulaire. Celui-ci devra utiliser les trois types d\u2019entr\u00e9e vus dans ce cours. Celui-ci peut ressembler \u00e0 la page web suivante :","title":"Exercice"},{"location":"Premiere/IHM/formulaire/#pour-en-savoir-plus","text":"Consultez le site : https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form","title":"Pour en savoir plus..."},{"location":"Premiere/IHM/web_1NSI/","text":"Cr\u00e9er ses propres pages web # 1) Introduction # Nous consultons tous les jours des sites Web. Pour les sites les plus connus, on peut s\u2019apercevoir que l\u2019affichage et les fonctionnalit\u00e9s sont identiques quel que soit le navigateur utilis\u00e9 (ce n\u2019est pas toujours le cas pour des sites moins connus) \u00e0 quelques d\u00e9tails pr\u00e8s. Les pages Web sont cr\u00e9\u00e9es \u00e0 l\u2019aide de langages informatiques. Le respect des r\u00e8gles d\u00e9finiespour ces langages permet de cr\u00e9er des pages WEB qui pourront \u00eatre lues correctement quel que soit le navigateur. Pour cr\u00e9er la page Web visualis\u00e9e, ont \u00e9t\u00e9 utilis\u00e9s les langages HTML et CSS. Le langage HTML a \u00e9t\u00e9 cr\u00e9\u00e9 en 1991 par Tim Berners-Lee. Ce dernier a aussi cr\u00e9\u00e9 le World Wide WebConsortium (W3C) qui d\u00e9finit les nouvelles versions et les standards des langages li\u00e9s au Web. 2) Cr\u00e9er ses propres pages web # 2.1) HTML et \u00e9diteurs # Pour cr\u00e9er des pages Web, on peut utiliser: Des logiciels WYSIWYG (What You See Is What You Get); ce sont des programmes(Mozilla Composer, Dreamweaver et m\u00eame les traitements de texte) qui permettent de cr\u00e9er des sites sans apprendre de langage particulier. Les pages web sont g\u00e9n\u00e9r\u00e9s automatiquement. Permettant une cr\u00e9ation plus rapide au d\u00e9marrage, ils pr\u00e9sentent cependant l\u2019inconv\u00e9nient de modifications plus laborieuses (le codage n\u2019est pas optimis\u00e9,rendant toute modification probl\u00e9matique) Des \u00e9diteurs de texte, ce sont des programmes d\u00e9di\u00e9s \u00e0 l'\u00e9criture de code (pas seulement HTML ou CSS) plus ou moins \u00e9volu\u00e9s (les fonctionnalit\u00e9s de certains facilitent l'\u00e9criture du code). Nous utiliserons l'\u00e9diteur de texte Visual Studio Code Pour t\u00e9l\u00e9charger ce logiciel, il faut se rendre \u00e0 l\u2019adresse suivante : https://code.visualstudio.com 2.2) Ma premi\u00e8re page # Dans vos documents, cr\u00e9er un dossier nomm\u00e9 monPremierSite . Puis dans ce dossier, cr\u00e9er \u00e0 nouveau un dossier nomm\u00e9 img pour les images. Ouvrir Visual Studio Code et cr\u00e9er un nouveau document. Pour cela, il faut cliquer sur File dans la barre d\u2019outil puis New File >. Puis saisir le code suivant (ou bien faites un Copier/Coller \u00e0 partir du TP ) : See the Pen FirstPage by eric ( @ga78523 ) on CodePen . Enregistrer votre fichier sous le dossier monPremierSite sous le nom de : pageWeb1.html. Bien v\u00e9rifier, que l\u2019extension de votre fichier est .html et non .txt Sous Visual Studio Code , les balises apparaissent en bleu, les commentaires en vert et le texte visible par l\u2019utilisateur en blanc. Si vous ne voyez pas cette coloration syntaxique, appeler le professeur. Une fois enregistr\u00e9 votre travail, ouvrir votre fichier pageWeb1.html avec un navigateur internet (Firefox, Chrome, Explorer ...) Modifier le code pr\u00e9c\u00e9dent pour obtenir ceci: 2.3) Le langage HTML # Le langage HTML (HyperText Markup Language) permet de concevoir des documents Web. Ce langage de programmation descriptif est compos\u00e9 d'\u00e9l\u00e9ments. Un \u00e9l\u00e9ment HTML est compos\u00e9 d'une balise ouvrante et d'une balise fermante afin de d\u00e9limiter la zone de texte concern\u00e9e par l'\u00e9l\u00e9ment en question. Par exemple, l'\u00e9l\u00e9ment p, que nous avons utilis\u00e9 d\u00e9limite un paragraphe de texte, a pour balise ouvrante et pour balise fermante . Il y a \u00e9galement la balise <!DOCTYPE html>. Le doctype (pour Document Type Declaration) permet de renseigner le navigateur Web sur la version de HTML utilis\u00e9e par le document Web. Le doctype utilis\u00e9 dans l'exemple fait r\u00e9f\u00e9rence \u00e0 HTML5. Un fichier HTML est compos\u00e9 de deux parties. et : les \u00e9l\u00e9ments contenus dans l'ent\u00eate n'ont pas vocation \u00e0 \u00eatre affich\u00e9s sauf l'\u00e9l\u00e9ment title dont le contenu appara\u00eet dans l'onglet du navigateur Web. Les informations contenues dans l'ent\u00eate renseignent sur l'auteur et le contenu du document. et : l'ensemble des informations contenues entre ces balises sont affich\u00e9es dans la fen\u00eatre du navigateur Web. 2.4) Structuration des documents # Titre de section : les balises h1, h3, h3, h4, h5, h6 permettent de d\u00e9finir des titres de sections, sous-sections, etc jusqu\u2019\u00e0 six niveaux. Balises de texte : Balises R\u00f4le et Mise en gras et Mise en italique et soulignement et mise en indice et mise en exposant et code et texte surlign\u00e9 Structuration du document. La balise repr\u00e9sente un paragraphe. Les espaces et les retours \u00e0 la lignes sont ignor\u00e9s. Chaque nouvel \u00e9l\u00e9ment p cr\u00e9e un nouveau paragraphe. Dans la balise body, on peut placer l\u2019attribut bgcolor=\"# 33CCFF\". Celui-ci permet de colorer le fond d\u2019\u00e9cran d\u2019une certaine couleur (ici: le bleu clair). Attention: la couleur est \u00e9crite en hexad\u00e9cimal. Cela nous donne: 2.5) Travail \u00e0 faire # Rechercher sur internet et \u00e9crire ci-dessous, le code hexad\u00e9cimal du: du blanc : ........... du vert : ........... du rouge : ........... du jaune: ........... du magenta : ......... du cyan : .......... du gris fonc\u00e9 : ...... R\u00e9aliser une page internet qui se nommera pageWeb2 et qui ressemble \u00e0 celle ci-dessous avec : un titre ; deux paragraphes \u00e9crits s\u00e9par\u00e9 par un ligne ; un fond d\u2019\u00e9cran de couleur gris ; un mot mis en \u00e9vidence. Remarque: pour cr\u00e9er un paragraphe imaginaire, vous taper lorem puis entrer. En effet, on sait depuis longtemps que travailler avec du texte lisiblee t contenant du sens est source de distractions, et emp\u00eache de se concentrer sur la mise en page elle-m\u00eame. 2.6) Les images # On peut ins\u00e9rer une image (au format png, jpeg ou gif) qui se trouve sans le dossier img du dossier monPremierSite gr\u00e2ce \u00e0 la balise . Donc pour ins\u00e9rer une image (smiley.gif pr\u00e9alablement enregistr\u00e9e dans le dossier img ), on peut proc\u00e9der de la mani\u00e8re suivante : \"\"\" < img src=\"Img/smiley.gif\" alt=\"Smiley face\" width=\"42\" height=\"42\" > \"\"\" D\u00e9taillons cette ligne: src=\"smiley.gif\" donne le nom de la photo \u00e0 afficher (smiley.gif). Cet attribut est obligatoire. alt=\"Smiley face\" sp\u00e9cifie un texte alternatif si l\u2019image ne s\u2019affiche pas (Smiley face). Cet attribut est recommand\u00e9. 2.7) Les liens # HTML (Hyper Text Markup Language) est un langage hypertexte, cela signifie qu'il vous permet en cliquant sur un mot, g\u00e9n\u00e9ralement soulign\u00e9 (ou une image) de vous rendre : sur un autre endroit de la page ; sur un autre fichier HTML situ\u00e9 sur votre ordinateur. sur un autre ordinateur en r\u00e9seau, y compris sur le Web. Pour \u00e9crire un lien sur une page web, il faut adopter la syntaxe suivante: < a href=\"lien\"> texte <\\a> avec: texte: texte qui appara\u00eet en bleu soulign\u00e9 dans la page lien: adresse d\u2019un site site (Exemple : https://fr.wikipedia.org/wiki/Informatique) , d\u2019une autre page html situ\u00e9e dans notre dossier monPremierSite (exemple: pageWeb3.html \u00e0 cr\u00e9erult\u00e9rieurement) ou bien un mot dans la page web concern\u00e9e. Exemple: voir code et r\u00e9sultat pr\u00e9c\u00e9dents 2.8) Travail \u00e0 faire # R\u00e9aliser deux pages internet qui ont chacune : Un titre ; Deux paragraphes ; Une image de 300 pixels de largeurs entre les deux paragraphes et la m\u00eame image \u00e0la fin ; Un fond d\u2019\u00e9cran de couleur ; Un lien pour l\u2019autre page et un lien vers un fichier existant. 2.9) Les listes # On peut organiser le texte en liste. Une liste \u00e9num\u00e9r\u00e9e est contenue dans un \u00e9l\u00e9ment ol (abr\u00e9viation de l\u2019anglais ordered list). Une liste non-\u00e9num\u00e9r\u00e9e est contenue dans un \u00e9l\u00e9ment ul (abr\u00e9viation de l\u2019anglais unordered list). Quelque soit le type de liste, chaque entr\u00e9e de liste est contenue dans un \u00e9l\u00e9ment li. Les listes peuvent \u00e9videmment \u00eatre imbriqu\u00e9es Pour en savoir plus... # Pour conna\u00eetre d\u2019autres balises et d\u2019autres attributs, consulter le site MDN. 3) Le CSS (Cascading Style Sheets) # 3.1) Introduction # Vous avez remarqu\u00e9 que si nous voulons donner une unit\u00e9 au site, il est n\u00e9cessaire, pour chaque page, de d\u00e9finir par exemple une police bleue. Or, nous pouvons aussi utiliser une page de style \u00e9crite dans un autre langage: le CSS. Le Langage CSS, apparu en 1996, est compl\u00e9mentaire du langage HTML et permet de g\u00e9rer la mise en forme (l'apparence) des diff\u00e9rentes pages d\u2019un site Web (couleur du texte, police, taille du texte, bordures, fond...) Ainsi, dans l\u2019exemple pr\u00e9c\u00e9dent, il suffit de cr\u00e9er une page style.css (avec Visual StudioCode par exemple) dans laquelle il \u00e9crit que les paragraphes sont en bleu. Toutes les pages html cr\u00e9\u00e9es appelleront style.css dans l\u2019en-t\u00eate (head) de la page gr\u00e2ce \u00e0 l\u2019instruction : < link href = \"style.css\" rel = \"stylesheet\" type = \"text /css\" > 3.2) Explications # Ici, on indique que l\u2019\u00e9l\u00e9ment p (paragraphe) contient du texte align\u00e9 des deux c\u00f4t\u00e9s (justifi\u00e9) et de couleur bleue. On indique \u00e9galement que l\u2019\u00e9l\u00e9ment body (corps de la page HTML) aura un fond d\u2019\u00e9cran couleur gainsboro c\u2019est-\u00e0-dire bleu tr\u00e8s clair. En CSS: Body et p sont nomm\u00e9s selecteur color, text-align, background-color sont nomm\u00e9s propri\u00e9t\u00e9s CSS gainsboro, blue, justify sont nomm\u00e9s valeurs 3.3) La notion de boite # Dans le mod\u00e8le des feuilles de style, tous les \u00e9l\u00e9ments d\u2019une page HTML se coulent dans des blocs (ou \u00abboites\u00bb) rectangulaires. Un bloc typique est repr\u00e9sent\u00e9 ci-dessous : A partir de l\u2019ext\u00e9rieur, on rencontre successivement 4 zones: Une marge externe (margin), toujours transparente, avec des \u00e9paisseurs r\u00e9glables c\u00f4t\u00e9 par c\u00f4t\u00e9 ; Une bordure (border) dont on peut r\u00e9gler l\u2019\u00e9paisseur, la couleur et le style c\u00f4t\u00e9 par c\u00f4t\u00e9 ; Une marge interne (padding), ou \u00abespacement\u00bb, d\u2019\u00e9paisseur r\u00e9glable c\u00f4t\u00e9 par c\u00f4t\u00e9 ; L\u2019espace d\u00e9volu au bloc Il existe en HTML deux cat\u00e9gories d\u2019\u00e9l\u00e9ments textuels : les \u00e9l\u00e9ments block (les \u00e9l\u00e9ments p, ul sont par d\u00e9faut des \u00e9l\u00e9ments block) qui cr\u00e9ent une boite et forcent un retour \u00e0 la ligne et les \u00e9l\u00e9ments de type inline (les \u00e9l\u00e9ments a, b, i sont par d\u00e9faut des \u00e9l\u00e9ments inline) qui placentleur contenu dans le flot du texte. Il est possible faire passer des \u00e9l\u00e9ments inline en \u00e9l\u00e9ments block(et inversement \u00e0 l\u2019aide de la propri\u00e9t\u00e9 display. 3.4) Quelques propri\u00e9t\u00e9s CSS # De nombreuses propri\u00e9t\u00e9s CSS indiquent des longueurs (taille d\u2019une bordure, d\u2019un ajustement, taille des polices). Leur valeur est toujours un nombre suivi d\u2019une unit\u00e9. Parmi les unit\u00e9s l\u00e9gales en CSS, on retrouve notamment le pixel (px) et le point (pt). Nous donnons ci-dessous quelques propri\u00e9t\u00e9s CSS. Propri\u00e9t\u00e9 Valeur Description display None, block ou inline mode d\u2019affichage de la bo\u00eete Background couleur couleur de fond de la bo\u00eete color couleur couleur de texte border taille motif couleur ou none Si none, la bordure est masqu\u00e9e. Sinon, on donne la taille, le motif (solid, dotted oudashed) et la couleur s\u00e9par\u00e9s par des espaces. margin longueur taille des marges padding longueur taille des ajustements text-decoration none, underline, overline, ouline-through d\u00e9coration du texte text-align left, right, ou justify justification du texte font-family fixed, serif, ou sans serif justification du texte font-weight normal, light, bold, ou bolder graisse de la police font-style normal ou italic style de la police font-size Longueur ou xx-small, x-small,small, normal, large, x-large,xx-large taille de la police 3.5) Les balises div et span et les class # Les \u00e9l\u00e9ments div sont des balises de type bloc tandis que les \u00e9l\u00e9ments span sont des balises de types inline. Elles sont surtout utiles pour \"d\u00e9connecter\" certains morceaux de paragraphe ou plusieurs paragraphes de cette logique d'\u00e9criture avec des feuilles de style. Elles cr\u00e9ent ainsi des petits blocs particuliers dans le document sans devoir repasser par les \u00e9l\u00e9ments structurels du Html classique. Les attributs class et id sont des attributs universels ce qui signifie qu\u2019on va pouvoir les utiliser avecn\u2019importe quel \u00e9l\u00e9ment HTML, et notamment avec les \u00e9l\u00e9ments div et span.En pratique, il va \u00eatre tr\u00e8s courant de pr\u00e9ciser des attributs class et id pour nos \u00e9l\u00e9ments div et span pour pouvoir appliquer des styles \u00e0 un div (ou span) ou \u00e0 un groupe d\u2019\u00e9l\u00e9ments div ou span) d\u00e9finis. 3.6) Les tableaux # On peut enfin organiser du texte dans des tableaux au moyen de l\u2019\u00e9l\u00e9ment table, qui contient l\u2019ensemble des lignes du tableau, chacune d\u2019elle consistant en un \u00e9l\u00e9ment tr (abr\u00e9viation del\u2019anglais table row). Enfin chaque ligne d\u00e9crit les cases qu\u2019elle contient au moyen de l\u2019\u00e9l\u00e9ment td. 3.7) Pour en savoir plus... # Vous pouvez aller sur le site W3S o\u00f9 il existe un validateur HTML5 et sur le site de Pierre Giraud ( site ).","title":"web"},{"location":"Premiere/IHM/web_1NSI/#creer-ses-propres-pages-web","text":"","title":"Cr\u00e9er ses propres pages web"},{"location":"Premiere/IHM/web_1NSI/#1-introduction","text":"Nous consultons tous les jours des sites Web. Pour les sites les plus connus, on peut s\u2019apercevoir que l\u2019affichage et les fonctionnalit\u00e9s sont identiques quel que soit le navigateur utilis\u00e9 (ce n\u2019est pas toujours le cas pour des sites moins connus) \u00e0 quelques d\u00e9tails pr\u00e8s. Les pages Web sont cr\u00e9\u00e9es \u00e0 l\u2019aide de langages informatiques. Le respect des r\u00e8gles d\u00e9finiespour ces langages permet de cr\u00e9er des pages WEB qui pourront \u00eatre lues correctement quel que soit le navigateur. Pour cr\u00e9er la page Web visualis\u00e9e, ont \u00e9t\u00e9 utilis\u00e9s les langages HTML et CSS. Le langage HTML a \u00e9t\u00e9 cr\u00e9\u00e9 en 1991 par Tim Berners-Lee. Ce dernier a aussi cr\u00e9\u00e9 le World Wide WebConsortium (W3C) qui d\u00e9finit les nouvelles versions et les standards des langages li\u00e9s au Web.","title":"1) Introduction"},{"location":"Premiere/IHM/web_1NSI/#2-creer-ses-propres-pages-web","text":"","title":"2) Cr\u00e9er ses propres pages web"},{"location":"Premiere/IHM/web_1NSI/#21-html-et-editeurs","text":"Pour cr\u00e9er des pages Web, on peut utiliser: Des logiciels WYSIWYG (What You See Is What You Get); ce sont des programmes(Mozilla Composer, Dreamweaver et m\u00eame les traitements de texte) qui permettent de cr\u00e9er des sites sans apprendre de langage particulier. Les pages web sont g\u00e9n\u00e9r\u00e9s automatiquement. Permettant une cr\u00e9ation plus rapide au d\u00e9marrage, ils pr\u00e9sentent cependant l\u2019inconv\u00e9nient de modifications plus laborieuses (le codage n\u2019est pas optimis\u00e9,rendant toute modification probl\u00e9matique) Des \u00e9diteurs de texte, ce sont des programmes d\u00e9di\u00e9s \u00e0 l'\u00e9criture de code (pas seulement HTML ou CSS) plus ou moins \u00e9volu\u00e9s (les fonctionnalit\u00e9s de certains facilitent l'\u00e9criture du code). Nous utiliserons l'\u00e9diteur de texte Visual Studio Code Pour t\u00e9l\u00e9charger ce logiciel, il faut se rendre \u00e0 l\u2019adresse suivante : https://code.visualstudio.com","title":"2.1) HTML et \u00e9diteurs"},{"location":"Premiere/IHM/web_1NSI/#22-ma-premiere-page","text":"Dans vos documents, cr\u00e9er un dossier nomm\u00e9 monPremierSite . Puis dans ce dossier, cr\u00e9er \u00e0 nouveau un dossier nomm\u00e9 img pour les images. Ouvrir Visual Studio Code et cr\u00e9er un nouveau document. Pour cela, il faut cliquer sur File dans la barre d\u2019outil puis New File >. Puis saisir le code suivant (ou bien faites un Copier/Coller \u00e0 partir du TP ) : See the Pen FirstPage by eric ( @ga78523 ) on CodePen . Enregistrer votre fichier sous le dossier monPremierSite sous le nom de : pageWeb1.html. Bien v\u00e9rifier, que l\u2019extension de votre fichier est .html et non .txt Sous Visual Studio Code , les balises apparaissent en bleu, les commentaires en vert et le texte visible par l\u2019utilisateur en blanc. Si vous ne voyez pas cette coloration syntaxique, appeler le professeur. Une fois enregistr\u00e9 votre travail, ouvrir votre fichier pageWeb1.html avec un navigateur internet (Firefox, Chrome, Explorer ...) Modifier le code pr\u00e9c\u00e9dent pour obtenir ceci:","title":"2.2) Ma premi\u00e8re page"},{"location":"Premiere/IHM/web_1NSI/#23-le-langage-html","text":"Le langage HTML (HyperText Markup Language) permet de concevoir des documents Web. Ce langage de programmation descriptif est compos\u00e9 d'\u00e9l\u00e9ments. Un \u00e9l\u00e9ment HTML est compos\u00e9 d'une balise ouvrante et d'une balise fermante afin de d\u00e9limiter la zone de texte concern\u00e9e par l'\u00e9l\u00e9ment en question. Par exemple, l'\u00e9l\u00e9ment p, que nous avons utilis\u00e9 d\u00e9limite un paragraphe de texte, a pour balise ouvrante et pour balise fermante . Il y a \u00e9galement la balise <!DOCTYPE html>. Le doctype (pour Document Type Declaration) permet de renseigner le navigateur Web sur la version de HTML utilis\u00e9e par le document Web. Le doctype utilis\u00e9 dans l'exemple fait r\u00e9f\u00e9rence \u00e0 HTML5. Un fichier HTML est compos\u00e9 de deux parties. et : les \u00e9l\u00e9ments contenus dans l'ent\u00eate n'ont pas vocation \u00e0 \u00eatre affich\u00e9s sauf l'\u00e9l\u00e9ment title dont le contenu appara\u00eet dans l'onglet du navigateur Web. Les informations contenues dans l'ent\u00eate renseignent sur l'auteur et le contenu du document. et : l'ensemble des informations contenues entre ces balises sont affich\u00e9es dans la fen\u00eatre du navigateur Web.","title":"2.3) Le langage HTML"},{"location":"Premiere/IHM/web_1NSI/#24-structuration-des-documents","text":"Titre de section : les balises h1, h3, h3, h4, h5, h6 permettent de d\u00e9finir des titres de sections, sous-sections, etc jusqu\u2019\u00e0 six niveaux. Balises de texte : Balises R\u00f4le et Mise en gras et Mise en italique et soulignement et mise en indice et mise en exposant et code et texte surlign\u00e9 Structuration du document. La balise repr\u00e9sente un paragraphe. Les espaces et les retours \u00e0 la lignes sont ignor\u00e9s. Chaque nouvel \u00e9l\u00e9ment p cr\u00e9e un nouveau paragraphe. Dans la balise body, on peut placer l\u2019attribut bgcolor=\"# 33CCFF\". Celui-ci permet de colorer le fond d\u2019\u00e9cran d\u2019une certaine couleur (ici: le bleu clair). Attention: la couleur est \u00e9crite en hexad\u00e9cimal. Cela nous donne:","title":"2.4) Structuration des documents"},{"location":"Premiere/IHM/web_1NSI/#25-travail-a-faire","text":"Rechercher sur internet et \u00e9crire ci-dessous, le code hexad\u00e9cimal du: du blanc : ........... du vert : ........... du rouge : ........... du jaune: ........... du magenta : ......... du cyan : .......... du gris fonc\u00e9 : ...... R\u00e9aliser une page internet qui se nommera pageWeb2 et qui ressemble \u00e0 celle ci-dessous avec : un titre ; deux paragraphes \u00e9crits s\u00e9par\u00e9 par un ligne ; un fond d\u2019\u00e9cran de couleur gris ; un mot mis en \u00e9vidence. Remarque: pour cr\u00e9er un paragraphe imaginaire, vous taper lorem puis entrer. En effet, on sait depuis longtemps que travailler avec du texte lisiblee t contenant du sens est source de distractions, et emp\u00eache de se concentrer sur la mise en page elle-m\u00eame.","title":"2.5) Travail \u00e0 faire"},{"location":"Premiere/IHM/web_1NSI/#26-les-images","text":"On peut ins\u00e9rer une image (au format png, jpeg ou gif) qui se trouve sans le dossier img du dossier monPremierSite gr\u00e2ce \u00e0 la balise . Donc pour ins\u00e9rer une image (smiley.gif pr\u00e9alablement enregistr\u00e9e dans le dossier img ), on peut proc\u00e9der de la mani\u00e8re suivante : \"\"\" < img src=\"Img/smiley.gif\" alt=\"Smiley face\" width=\"42\" height=\"42\" > \"\"\" D\u00e9taillons cette ligne: src=\"smiley.gif\" donne le nom de la photo \u00e0 afficher (smiley.gif). Cet attribut est obligatoire. alt=\"Smiley face\" sp\u00e9cifie un texte alternatif si l\u2019image ne s\u2019affiche pas (Smiley face). Cet attribut est recommand\u00e9.","title":"2.6) Les images"},{"location":"Premiere/IHM/web_1NSI/#27-les-liens","text":"HTML (Hyper Text Markup Language) est un langage hypertexte, cela signifie qu'il vous permet en cliquant sur un mot, g\u00e9n\u00e9ralement soulign\u00e9 (ou une image) de vous rendre : sur un autre endroit de la page ; sur un autre fichier HTML situ\u00e9 sur votre ordinateur. sur un autre ordinateur en r\u00e9seau, y compris sur le Web. Pour \u00e9crire un lien sur une page web, il faut adopter la syntaxe suivante: < a href=\"lien\"> texte <\\a> avec: texte: texte qui appara\u00eet en bleu soulign\u00e9 dans la page lien: adresse d\u2019un site site (Exemple : https://fr.wikipedia.org/wiki/Informatique) , d\u2019une autre page html situ\u00e9e dans notre dossier monPremierSite (exemple: pageWeb3.html \u00e0 cr\u00e9erult\u00e9rieurement) ou bien un mot dans la page web concern\u00e9e. Exemple: voir code et r\u00e9sultat pr\u00e9c\u00e9dents","title":"2.7) Les liens"},{"location":"Premiere/IHM/web_1NSI/#28-travail-a-faire","text":"R\u00e9aliser deux pages internet qui ont chacune : Un titre ; Deux paragraphes ; Une image de 300 pixels de largeurs entre les deux paragraphes et la m\u00eame image \u00e0la fin ; Un fond d\u2019\u00e9cran de couleur ; Un lien pour l\u2019autre page et un lien vers un fichier existant.","title":"2.8) Travail \u00e0 faire"},{"location":"Premiere/IHM/web_1NSI/#29-les-listes","text":"On peut organiser le texte en liste. Une liste \u00e9num\u00e9r\u00e9e est contenue dans un \u00e9l\u00e9ment ol (abr\u00e9viation de l\u2019anglais ordered list). Une liste non-\u00e9num\u00e9r\u00e9e est contenue dans un \u00e9l\u00e9ment ul (abr\u00e9viation de l\u2019anglais unordered list). Quelque soit le type de liste, chaque entr\u00e9e de liste est contenue dans un \u00e9l\u00e9ment li. Les listes peuvent \u00e9videmment \u00eatre imbriqu\u00e9es","title":"2.9) Les listes"},{"location":"Premiere/IHM/web_1NSI/#pour-en-savoir-plus","text":"Pour conna\u00eetre d\u2019autres balises et d\u2019autres attributs, consulter le site MDN.","title":"Pour en savoir plus..."},{"location":"Premiere/IHM/web_1NSI/#3-le-css-cascading-style-sheets","text":"","title":"3) Le CSS (Cascading Style Sheets)"},{"location":"Premiere/IHM/web_1NSI/#31-introduction","text":"Vous avez remarqu\u00e9 que si nous voulons donner une unit\u00e9 au site, il est n\u00e9cessaire, pour chaque page, de d\u00e9finir par exemple une police bleue. Or, nous pouvons aussi utiliser une page de style \u00e9crite dans un autre langage: le CSS. Le Langage CSS, apparu en 1996, est compl\u00e9mentaire du langage HTML et permet de g\u00e9rer la mise en forme (l'apparence) des diff\u00e9rentes pages d\u2019un site Web (couleur du texte, police, taille du texte, bordures, fond...) Ainsi, dans l\u2019exemple pr\u00e9c\u00e9dent, il suffit de cr\u00e9er une page style.css (avec Visual StudioCode par exemple) dans laquelle il \u00e9crit que les paragraphes sont en bleu. Toutes les pages html cr\u00e9\u00e9es appelleront style.css dans l\u2019en-t\u00eate (head) de la page gr\u00e2ce \u00e0 l\u2019instruction : < link href = \"style.css\" rel = \"stylesheet\" type = \"text /css\" >","title":"3.1) Introduction"},{"location":"Premiere/IHM/web_1NSI/#32-explications","text":"Ici, on indique que l\u2019\u00e9l\u00e9ment p (paragraphe) contient du texte align\u00e9 des deux c\u00f4t\u00e9s (justifi\u00e9) et de couleur bleue. On indique \u00e9galement que l\u2019\u00e9l\u00e9ment body (corps de la page HTML) aura un fond d\u2019\u00e9cran couleur gainsboro c\u2019est-\u00e0-dire bleu tr\u00e8s clair. En CSS: Body et p sont nomm\u00e9s selecteur color, text-align, background-color sont nomm\u00e9s propri\u00e9t\u00e9s CSS gainsboro, blue, justify sont nomm\u00e9s valeurs","title":"3.2) Explications"},{"location":"Premiere/IHM/web_1NSI/#33-la-notion-de-boite","text":"Dans le mod\u00e8le des feuilles de style, tous les \u00e9l\u00e9ments d\u2019une page HTML se coulent dans des blocs (ou \u00abboites\u00bb) rectangulaires. Un bloc typique est repr\u00e9sent\u00e9 ci-dessous : A partir de l\u2019ext\u00e9rieur, on rencontre successivement 4 zones: Une marge externe (margin), toujours transparente, avec des \u00e9paisseurs r\u00e9glables c\u00f4t\u00e9 par c\u00f4t\u00e9 ; Une bordure (border) dont on peut r\u00e9gler l\u2019\u00e9paisseur, la couleur et le style c\u00f4t\u00e9 par c\u00f4t\u00e9 ; Une marge interne (padding), ou \u00abespacement\u00bb, d\u2019\u00e9paisseur r\u00e9glable c\u00f4t\u00e9 par c\u00f4t\u00e9 ; L\u2019espace d\u00e9volu au bloc Il existe en HTML deux cat\u00e9gories d\u2019\u00e9l\u00e9ments textuels : les \u00e9l\u00e9ments block (les \u00e9l\u00e9ments p, ul sont par d\u00e9faut des \u00e9l\u00e9ments block) qui cr\u00e9ent une boite et forcent un retour \u00e0 la ligne et les \u00e9l\u00e9ments de type inline (les \u00e9l\u00e9ments a, b, i sont par d\u00e9faut des \u00e9l\u00e9ments inline) qui placentleur contenu dans le flot du texte. Il est possible faire passer des \u00e9l\u00e9ments inline en \u00e9l\u00e9ments block(et inversement \u00e0 l\u2019aide de la propri\u00e9t\u00e9 display.","title":"3.3) La notion de boite"},{"location":"Premiere/IHM/web_1NSI/#34-quelques-proprietes-css","text":"De nombreuses propri\u00e9t\u00e9s CSS indiquent des longueurs (taille d\u2019une bordure, d\u2019un ajustement, taille des polices). Leur valeur est toujours un nombre suivi d\u2019une unit\u00e9. Parmi les unit\u00e9s l\u00e9gales en CSS, on retrouve notamment le pixel (px) et le point (pt). Nous donnons ci-dessous quelques propri\u00e9t\u00e9s CSS. Propri\u00e9t\u00e9 Valeur Description display None, block ou inline mode d\u2019affichage de la bo\u00eete Background couleur couleur de fond de la bo\u00eete color couleur couleur de texte border taille motif couleur ou none Si none, la bordure est masqu\u00e9e. Sinon, on donne la taille, le motif (solid, dotted oudashed) et la couleur s\u00e9par\u00e9s par des espaces. margin longueur taille des marges padding longueur taille des ajustements text-decoration none, underline, overline, ouline-through d\u00e9coration du texte text-align left, right, ou justify justification du texte font-family fixed, serif, ou sans serif justification du texte font-weight normal, light, bold, ou bolder graisse de la police font-style normal ou italic style de la police font-size Longueur ou xx-small, x-small,small, normal, large, x-large,xx-large taille de la police","title":"3.4) Quelques propri\u00e9t\u00e9s CSS"},{"location":"Premiere/IHM/web_1NSI/#35-les-balises-div-et-span-et-les-class","text":"Les \u00e9l\u00e9ments div sont des balises de type bloc tandis que les \u00e9l\u00e9ments span sont des balises de types inline. Elles sont surtout utiles pour \"d\u00e9connecter\" certains morceaux de paragraphe ou plusieurs paragraphes de cette logique d'\u00e9criture avec des feuilles de style. Elles cr\u00e9ent ainsi des petits blocs particuliers dans le document sans devoir repasser par les \u00e9l\u00e9ments structurels du Html classique. Les attributs class et id sont des attributs universels ce qui signifie qu\u2019on va pouvoir les utiliser avecn\u2019importe quel \u00e9l\u00e9ment HTML, et notamment avec les \u00e9l\u00e9ments div et span.En pratique, il va \u00eatre tr\u00e8s courant de pr\u00e9ciser des attributs class et id pour nos \u00e9l\u00e9ments div et span pour pouvoir appliquer des styles \u00e0 un div (ou span) ou \u00e0 un groupe d\u2019\u00e9l\u00e9ments div ou span) d\u00e9finis.","title":"3.5) Les balises div et span et les class"},{"location":"Premiere/IHM/web_1NSI/#36-les-tableaux","text":"On peut enfin organiser du texte dans des tableaux au moyen de l\u2019\u00e9l\u00e9ment table, qui contient l\u2019ensemble des lignes du tableau, chacune d\u2019elle consistant en un \u00e9l\u00e9ment tr (abr\u00e9viation del\u2019anglais table row). Enfin chaque ligne d\u00e9crit les cases qu\u2019elle contient au moyen de l\u2019\u00e9l\u00e9ment td.","title":"3.6) Les tableaux"},{"location":"Premiere/IHM/web_1NSI/#37-pour-en-savoir-plus","text":"Vous pouvez aller sur le site W3S o\u00f9 il existe un validateur HTML5 et sur le site de Pierre Giraud ( site ).","title":"3.7) Pour en savoir plus..."},{"location":"Premiere/Langage/Bases_Python/","text":"Les bases en Python # Pr\u00e9sentation de Python # Python : bref historique # Python est un langage de programmation, dont la premi\u00e8re version est sortie en 1991. Cr\u00e9\u00e9 par Guido van Rossum , il a voyag\u00e9 du Macintosh de son cr\u00e9ateur, qui travaillait \u00e0 cette \u00e9poque au Centrum voor Wiskunde en Informatica aux Pays-Bas, jusqu'\u00e0 se voir associer une organisation \u00e0 but non lucratif particuli\u00e8rement d\u00e9vou\u00e9e, la Python Software Foundation, cr\u00e9\u00e9e en 2001. Ce langage a \u00e9t\u00e9 baptis\u00e9 ainsi en hommage \u00e0 la troupe de comiques les \u00ab Monty Python \u00bb. Python est un langage puissant, \u00e0 la fois facile \u00e0 apprendre et riche en possibilit\u00e9s. D\u00e8s l'instant o\u00f9 vous l'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalit\u00e9s int\u00e9gr\u00e9es au langage. Il est, en outre, tr\u00e8s facile d'\u00e9tendre les fonctionnalit\u00e9s existantes. Ainsi, il existe ce qu'on appelle des biblioth\u00e8ques qui aident le d\u00e9veloppeur \u00e0 travailler sur des projets particuliers. Plusieurs biblioth\u00e8ques peuvent ainsi \u00eatre install\u00e9es pour, par exemple, d\u00e9velopper des interfaces graphiques en Python. Installation de Thonny # Pr\u00e9sentation du logiciel # Thonny est un environnement de d\u00e9veloppement int\u00e9gr\u00e9 pour Python con\u00e7u pour les d\u00e9butants. Il prend en charge diff\u00e9rentes fa\u00e7ons de parcourir le code, l'\u00e9valuation d'expression \u00e9tape par \u00e9tape, la visualisation d\u00e9taill\u00e9e de la pile d'appels et un mode pour expliquer les concepts de r\u00e9f\u00e9rences et de tas. Installation # Aller sur le site : https://thonny.org/ Cliquer sur Windows (en haut \u00e0 droite). Le t\u00e9l\u00e9charger. Se rendre dans le dossier o\u00f9 vous l\u2019avez t\u00e9l\u00e9charg\u00e9 (en g\u00e9n\u00e9ral, dans le dossier T\u00e9l\u00e9chargements) et cliquer, pour cette version, sur le fichier : thonny-3.3.13.exe Pr\u00e9sentation # Avec : A : zone d\u2019\u00e9dition o\u00f9 vous allez taper votre code B : console C : explorateur de variables L'\u00e9dition et l'ex\u00e9cution d'un premier programme # Comme la coutume l\u2019exige, notre premier programme sera l\u2019affichage du texte \"Hello World\". Pour cela : Cr\u00e9er un r\u00e9pertoire dans votre dossier NSI , un autre dossier Bases dans lequel vous y stockerez tous vos programmes de ce chapitre. Dans la barre d'outils cliquer sur \\(Nouveau Fichier\\) . Puis dans la zone de saisie, taper : 1 print ( \"hello world\" ) #affiche le texte entre parenth\u00e8ses Enregistrer ce fichier sous le nom de hello.py (vous remarquerez que l'extension .py est r\u00e9serv\u00e9e \u00e0 python); Cliquer dans la barre d'outils sur la fl\u00e8che verte qui signifie Ex\u00e9cuter (ou Ctrl+F9). Si tout va bien, votre programme s'effectue dans la console. Remarque : il est possible (et fortement conseill\u00e9) d'inclure des commentaires dans les lignes de code, ils doivent \u00eatre pr\u00e9c\u00e9d\u00e9s de # afin qu'ils ne soient pas interpr\u00e9t\u00e9s, ce qui sinon provoquerait un message d'erreur. La d\u00e9claration et l'affectation du contenu de variables # La d\u00e9claration d'une variable # Si on \u00e9crit dans la zone de saisie maintenant l'instruction : 1 print ( texte ) # sans les guillemets L'interpr\u00e9teur affiche maintenant le message d'erreur suivant : >>> % Run - c $ EDITOR_CONTENT Traceback ( most recent call last ): File \"<string>\" , line 1 , in < module > NameError : name 'texte' is not defined Le message d'erreur vient du fait que \"hello world\" \u00e9tait entre guillements alors que texte non. En effet, l'interpreteur Python cherche \u00e0 afficher la variable texte et que cette variable n'a pas \u00e9t\u00e9 d\u00e9finie dans ce programme. Pour d\u00e9finir cette variable, on rajoute la ligne suivante en d\u00e9but de programme : 1 2 texte = \"Hello world\" # ou encore \"Hello world\" print ( texte ) # affiche le contenu de la variable texte Nous venons de d\u00e9clarer une variable nomm\u00e9e texte et de lui affecter (ou assigner) le texte \"Hello World\". En Python comme dans bien d'autres langages, l'op\u00e9ration d'affectation est repr\u00e9sent\u00e9e par le signe = . Quel int\u00e9r\u00eat d'utiliser une variable ? # D\u00e9finition du mot ordinateur d\u2019apr\u00e8s le dictionnaire Le Petit Larousse : \u00ab Machine automatique de traitement de l\u2019information, ob\u00e9issant \u00e0 des programmes form\u00e9s par des suites d\u2019op\u00e9rations arithm\u00e9tiques et logiques. \u00bb Qui dit traitement de l\u2019information, dit donc donn\u00e9es \u00e0 manipuler. Un programme passe donc son temps \u00e0 traiter des donn\u00e9es. Pour pouvoir traiter ces donn\u00e9es, l\u2019ordinateur doit les ranger dans sa m\u00e9moire . La mmoire se compose de cases dans lesquelles nous allons ranger ces donn\u00e9es. Une variable est un espace m\u00e9moire dans lequel il est possible de mettre une valeur. Par exemple, si en fran\u00e7ais je dis \\(x\\) est \u00e9gal \u00e0 1, j\u2019utilise la variable dont le nom est \\(x\\) pour lui fixer la valeur 1. Pour faire la m\u00eame chose en Python, je note simplement : x = 1 . Cette op\u00e9ration est appel\u00e9e \"affectation\" (ou \"assignation\"), et consiste \u00e0 stocker une valeur en m\u00e9moire vive de l\u2019ordinateur. On dit donc que l\u2019on proc\u00e8de \u00e0 l\u2019affectation de la variable \\(x\\) avec la valeur \"1\". Types des variables # Les variables peuvent contenir des types de donn\u00e9es diff\u00e9rents. Les diff\u00e9rents types sont : Type Python Traduction Exemple int entier 42 float flottant (d\u00e9cimal) 3.1416 str cha\u00eene de caract\u00e8res (string) \"NSI\" bool bool\u00e9en (True ou False) True tuple p-uplet ( 255 , 127 , 0 ) list liste [ 0 , 1 , 2 , 3 , 4 , 5 ] dict dictionnaire { 'Homer' : 43 , 'Marge' : 41 , 'Bart' : 12 , 'Lisa' : 10 , 'Maggie' : 4 } function fonction print Python est un langage \u00e0 typage dynamique, cela signifie qu'en fonction du contenu affect\u00e9 \u00e0 la variable, il d\u00e9termine automatiquement le type de la variable. Il existe beaucoup de langages (C++, Java....) o\u00f9 l\u2019utilisateur doit absolument d\u00e9finir le type d\u2019une variable avant de pouvoir l\u2019utiliser, faute de quoi cela entra\u00eenera une erreur. Remarque : L'explorateur de variables permet d'afficher le nom de la variable et sa valeur. Il suffit d'aller dans affichage puis variables. La fonction type() vous permet de conna\u00eetre le type d\u2019une variable. Le type d'une variable peut \u00eatre modifi\u00e9 de mani\u00e8re dynamique en cours de programme. Le v\u00e9rifier en testant le programme suivant : 1 2 3 4 a = 8 print ( a ) a = a + 2 # ou a += 2 print ( a ) Remarque : L'explorateur de variable affiche uniquement les derni\u00e8res valeurs et types pris par les variables en fin de programme. Affectations (assignations) multiples # Sous Python, on peut assigner une valeur \u00e0 plusieurs variables simultan\u00e9ment. 1 2 3 x = y = 7 print ( \"x vaut :\" , x ) print ( \"y vaut :\" , y ) On peut aussi effectuer des affectations parall\u00e8les \u00e0 l\u2019aide d\u2019un seul operateur = : 1 2 3 x, y = 7, 9.4 print(\"x vaut :\", x) print(\"y vaut :\", y) Les variables x et y prennent simultan\u00e9ment les nouvelles valeurs 7 et 9,4 Les op\u00e9rations # Arithm\u00e9tiques # Un ordinateur est bien \u00e9videmment capable d\u2019effectuer des op\u00e9rations arithm\u00e9tiques et math\u00e9matiques. Dans le tableau ci-apr\u00e8s, sont pr\u00e9sent\u00e9s les symboles utilis\u00e9s pour les op\u00e9rations de base. Op\u00e9ration Symbole Exemples \u00e0 tester Addition + 3+5 donne 8 Soustraction - 7-2 donne 5 Multiplication * 7*8 donne 56 Division / 7/2 donne 3.5 Reste de la division % 7%3 donne 1 Quotient de la division // 7//2 donne 3 Puissance ** 10**3 donne 1000 Remarque : l\u2019utilisation du signe + ne se limite pas \u00e0 l\u2019addition. Il est aussi utilis\u00e9 pour la concat\u00e9nation. Le terme concat\u00e9nation d\u00e9signe l\u2019action de mettre bout \u00e0 bout au moins deux cha\u00eenes. Exercice 1 Sans l'ex\u00e9cuter, que fait le programme suivant. Puis le tester 1 2 3 4 a = \" cha\u00eene de \" b = \" caract\u00e8re \" monExpression = a + b print ( monExpression ) Exercice 2 \u00c9crire un programme qui multiplie le contenu de 2 variables. Par exemple : c = 5 et d = 9 . Le r\u00e9sultat de cette op\u00e9ration devra \u00eatre \"rang\u00e9\" dans une troisi\u00e8me variable ( resultat ). Votre programme devra afficher le contenu de la variable resultat . Quelques fonctions math\u00e9matiques # Pour utiliser certaines fonctions math\u00e9matiques plus avanc\u00e9es ( \\(x^a\\) , \\(exp(x)\\) , \\(sin(x)\\) , \\(log(x)\\) ... ) il est n\u00e9cessaire d\u2019importer des biblioth\u00e8ques. Si l\u2019on utilise la biblioth\u00e8que math , la premi\u00e8re ligne de code devra commencer par : import math . Cette biblioth\u00e8que inclus entre autres les fonctions suivantes : Fonction Symbole Exemples \u00e0 tester constante p pi pi donne 3.141592653589793 sinus (angle en radians) sin(x) sin(pi/2) donne 1.0 arc sinus asin(x) asin(1) donne 1.5707963267948966 radians conversion radians en degr\u00e9s degrees(x) degrees(pi) donne 180.0 degr\u00e9s conversion degr\u00e9s en radians radians(x) radians(90) donne 1.5707963267948966 radians logarithme d\u00e9cimal log10(x) log10(100) donne 2 logartithme n\u00e9p\u00e9rien log(x) log(100) donne 4.605170185988092 exponentielle exp(x) exp(100) donne 2.6881171418161356e+43 puissance xy pow(x,y) pow(2,8) donne 256.0 racine carr\u00e9e sqrt(x) sqrt(100) retourne 10 arrondi au plus proche entier round(x) arrondi au plus proche r\u00e9el avec y d\u00e9cimales apr\u00e8s la virgule round(x,y) round(100.235789,2) retourne 100.24 arrondi au plus petit entier>=x ceil(x) ceil(100.235789,2) retourne 101 arrondi au plus grand entier<=x floor(x) floor(100.235789,2) retourne 100 Exemple complet : 1 2 3 import math a = math . pow ( 2.8 ) print ( a ) # affiche 256 G\u00e9n\u00e9ration de nombres al\u00e9atoires # La biblioth\u00e8que random permet de g\u00e9n\u00e9rer des nombres al\u00e9atoires, la premi\u00e8re ligne de code devra commencer par import random . Cette biblioth\u00e8que inclus entre autres les fonctions suivantes : Exemple complet : 1 2 3 4 5 6 7 8 9 import random a = random . randint ( 0 , 5 ) print ( a ) # affiche 3 b = random . randint ( 0 , 5 ) print ( b ) # affiche 1 c = random . random () print ( c ) # affiche 0.28974251561751374 Remarque : Plut\u00f4t que de r\u00e9p\u00e9ter random avant l'itilisation de chaque fonction, nous pouvons utiliser un alias de la mani\u00e8re suivante : 1 2 3 4 5 6 7 8 9 import random as rd a = rd . randint ( 0 , 5 ) print ( a ) # affiche 3 b = rd . randint ( 0 , 5 ) print ( b ) # affiche 1 c = rd . random () print ( c ) # affiche 0.28974251561751374 Les entr\u00e9es # On peut alors lire depuis le clavier la valeur d\u2019une cha\u00eene de caract\u00e8res par la m\u00e9thode input() . Exemple : 1 2 a = input () #les parenth\u00e8ses sont obligatoires . a = input ( \" Nom : \" ) # le texte dans les parenth\u00e8ses permet d\u2019indiquer ce que l'on attend La commande input() renvoie toujours \u00e0 une cha\u00eene de caract\u00e8res. Pour affecter un nombre, il faut le convertir gr\u00e2ce aux fonctions int() pour convertir une chaine de caract\u00e8re en entier et float() pour convertir une cha\u00eene de caract\u00e8re en flottant. Exemple : 1 2 3 a = int ( input ( \" Donner une valeur enti\u00e8re : \" )) x = float ( input ( \"Donner une valeur r\u00e9elle : \" ) print ( \" L\u2019entier a vaut \" , a , \" et le r\u00e9el x vaut \" , x ) Exercices # Exercice 3 Faire un programme qui demande un nombre et qui affiche sa racine carr\u00e9e et son carr\u00e9. Exercice 4 Retrouvez sur internet la formule du volume d\u2019un cylindre. Faire un programme demandant \u00e0 l\u2019utilisateur les 2 variables rentrant dans la formule puis afficher le r\u00e9sultat. Exercice 5 \u00c9crire un programme qui vous demande votre nom, votre pr\u00e9nom, votre classe, une discipline et les 5 notes obtenues dans cette discipline. Il calculera la moyenne dans cette discipline, arrondie \u00e0 l\u2019entier sup\u00e9rieur et affichera le r\u00e9sultat sous la forme : PEREAU Vincent \u2013 classe de 2GT7 : moyenne en MATH\u00c9MATIQUES = 13 Exercice 6 \u00c9crire un programme qui calcul l\u2019angle de r\u00e9fraction \\(i_2\\) (exprim\u00e9 en degr\u00e9s et avec 1 chiffre apr\u00e8s la virgule) d\u2019un faisceau lumineux, apr\u00e8s avoir demand\u00e9 l\u2019angle d\u2019incidence \\(i_1\\) (en degr\u00e9s) ainsi que les indices de r\u00e9fractions \\(n_1\\) et \\(n_2\\) des milieux 1 et 2. Donn\u00e9e : Loi de Descartes relative \u00e0 la r\u00e9fraction : \\(n_1 \\times sin(i_1) = n_2 \\times sin(i_2)\\) Exercice 7 \u00c9crire un programme qui calcule combien de bonbons recevra chaque \u00e9l\u00e8ve de la classe ainsi que le nombre de bonbons restants, apr\u00e8s avoir demand\u00e9 le nombre total de bonbons et le nombre d\u2019\u00e9l\u00e8ves de la classe. Le r\u00e9sultat sera affich\u00e9 sous la forme : \"chaque \u00e9l\u00e8ve recevra 5 bonbons et il en restera 3\"","title":"Les bases"},{"location":"Premiere/Langage/Bases_Python/#les-bases-en-python","text":"","title":"Les bases en Python"},{"location":"Premiere/Langage/Bases_Python/#presentation-de-python","text":"","title":"Pr\u00e9sentation de Python"},{"location":"Premiere/Langage/Bases_Python/#python-bref-historique","text":"Python est un langage de programmation, dont la premi\u00e8re version est sortie en 1991. Cr\u00e9\u00e9 par Guido van Rossum , il a voyag\u00e9 du Macintosh de son cr\u00e9ateur, qui travaillait \u00e0 cette \u00e9poque au Centrum voor Wiskunde en Informatica aux Pays-Bas, jusqu'\u00e0 se voir associer une organisation \u00e0 but non lucratif particuli\u00e8rement d\u00e9vou\u00e9e, la Python Software Foundation, cr\u00e9\u00e9e en 2001. Ce langage a \u00e9t\u00e9 baptis\u00e9 ainsi en hommage \u00e0 la troupe de comiques les \u00ab Monty Python \u00bb. Python est un langage puissant, \u00e0 la fois facile \u00e0 apprendre et riche en possibilit\u00e9s. D\u00e8s l'instant o\u00f9 vous l'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalit\u00e9s int\u00e9gr\u00e9es au langage. Il est, en outre, tr\u00e8s facile d'\u00e9tendre les fonctionnalit\u00e9s existantes. Ainsi, il existe ce qu'on appelle des biblioth\u00e8ques qui aident le d\u00e9veloppeur \u00e0 travailler sur des projets particuliers. Plusieurs biblioth\u00e8ques peuvent ainsi \u00eatre install\u00e9es pour, par exemple, d\u00e9velopper des interfaces graphiques en Python.","title":"Python : bref historique"},{"location":"Premiere/Langage/Bases_Python/#installation-de-thonny","text":"","title":"Installation de Thonny"},{"location":"Premiere/Langage/Bases_Python/#presentation-du-logiciel","text":"Thonny est un environnement de d\u00e9veloppement int\u00e9gr\u00e9 pour Python con\u00e7u pour les d\u00e9butants. Il prend en charge diff\u00e9rentes fa\u00e7ons de parcourir le code, l'\u00e9valuation d'expression \u00e9tape par \u00e9tape, la visualisation d\u00e9taill\u00e9e de la pile d'appels et un mode pour expliquer les concepts de r\u00e9f\u00e9rences et de tas.","title":"Pr\u00e9sentation du logiciel"},{"location":"Premiere/Langage/Bases_Python/#installation","text":"Aller sur le site : https://thonny.org/ Cliquer sur Windows (en haut \u00e0 droite). Le t\u00e9l\u00e9charger. Se rendre dans le dossier o\u00f9 vous l\u2019avez t\u00e9l\u00e9charg\u00e9 (en g\u00e9n\u00e9ral, dans le dossier T\u00e9l\u00e9chargements) et cliquer, pour cette version, sur le fichier : thonny-3.3.13.exe","title":"Installation"},{"location":"Premiere/Langage/Bases_Python/#presentation","text":"Avec : A : zone d\u2019\u00e9dition o\u00f9 vous allez taper votre code B : console C : explorateur de variables","title":"Pr\u00e9sentation"},{"location":"Premiere/Langage/Bases_Python/#ledition-et-lexecution-dun-premier-programme","text":"Comme la coutume l\u2019exige, notre premier programme sera l\u2019affichage du texte \"Hello World\". Pour cela : Cr\u00e9er un r\u00e9pertoire dans votre dossier NSI , un autre dossier Bases dans lequel vous y stockerez tous vos programmes de ce chapitre. Dans la barre d'outils cliquer sur \\(Nouveau Fichier\\) . Puis dans la zone de saisie, taper : 1 print ( \"hello world\" ) #affiche le texte entre parenth\u00e8ses Enregistrer ce fichier sous le nom de hello.py (vous remarquerez que l'extension .py est r\u00e9serv\u00e9e \u00e0 python); Cliquer dans la barre d'outils sur la fl\u00e8che verte qui signifie Ex\u00e9cuter (ou Ctrl+F9). Si tout va bien, votre programme s'effectue dans la console. Remarque : il est possible (et fortement conseill\u00e9) d'inclure des commentaires dans les lignes de code, ils doivent \u00eatre pr\u00e9c\u00e9d\u00e9s de # afin qu'ils ne soient pas interpr\u00e9t\u00e9s, ce qui sinon provoquerait un message d'erreur.","title":"L'\u00e9dition et l'ex\u00e9cution d'un premier programme"},{"location":"Premiere/Langage/Bases_Python/#la-declaration-et-laffectation-du-contenu-de-variables","text":"","title":"La d\u00e9claration et l'affectation du contenu de variables"},{"location":"Premiere/Langage/Bases_Python/#la-declaration-dune-variable","text":"Si on \u00e9crit dans la zone de saisie maintenant l'instruction : 1 print ( texte ) # sans les guillemets L'interpr\u00e9teur affiche maintenant le message d'erreur suivant : >>> % Run - c $ EDITOR_CONTENT Traceback ( most recent call last ): File \"<string>\" , line 1 , in < module > NameError : name 'texte' is not defined Le message d'erreur vient du fait que \"hello world\" \u00e9tait entre guillements alors que texte non. En effet, l'interpreteur Python cherche \u00e0 afficher la variable texte et que cette variable n'a pas \u00e9t\u00e9 d\u00e9finie dans ce programme. Pour d\u00e9finir cette variable, on rajoute la ligne suivante en d\u00e9but de programme : 1 2 texte = \"Hello world\" # ou encore \"Hello world\" print ( texte ) # affiche le contenu de la variable texte Nous venons de d\u00e9clarer une variable nomm\u00e9e texte et de lui affecter (ou assigner) le texte \"Hello World\". En Python comme dans bien d'autres langages, l'op\u00e9ration d'affectation est repr\u00e9sent\u00e9e par le signe = .","title":"La d\u00e9claration d'une variable"},{"location":"Premiere/Langage/Bases_Python/#quel-interet-dutiliser-une-variable","text":"D\u00e9finition du mot ordinateur d\u2019apr\u00e8s le dictionnaire Le Petit Larousse : \u00ab Machine automatique de traitement de l\u2019information, ob\u00e9issant \u00e0 des programmes form\u00e9s par des suites d\u2019op\u00e9rations arithm\u00e9tiques et logiques. \u00bb Qui dit traitement de l\u2019information, dit donc donn\u00e9es \u00e0 manipuler. Un programme passe donc son temps \u00e0 traiter des donn\u00e9es. Pour pouvoir traiter ces donn\u00e9es, l\u2019ordinateur doit les ranger dans sa m\u00e9moire . La mmoire se compose de cases dans lesquelles nous allons ranger ces donn\u00e9es. Une variable est un espace m\u00e9moire dans lequel il est possible de mettre une valeur. Par exemple, si en fran\u00e7ais je dis \\(x\\) est \u00e9gal \u00e0 1, j\u2019utilise la variable dont le nom est \\(x\\) pour lui fixer la valeur 1. Pour faire la m\u00eame chose en Python, je note simplement : x = 1 . Cette op\u00e9ration est appel\u00e9e \"affectation\" (ou \"assignation\"), et consiste \u00e0 stocker une valeur en m\u00e9moire vive de l\u2019ordinateur. On dit donc que l\u2019on proc\u00e8de \u00e0 l\u2019affectation de la variable \\(x\\) avec la valeur \"1\".","title":"Quel int\u00e9r\u00eat d'utiliser une variable ?"},{"location":"Premiere/Langage/Bases_Python/#types-des-variables","text":"Les variables peuvent contenir des types de donn\u00e9es diff\u00e9rents. Les diff\u00e9rents types sont : Type Python Traduction Exemple int entier 42 float flottant (d\u00e9cimal) 3.1416 str cha\u00eene de caract\u00e8res (string) \"NSI\" bool bool\u00e9en (True ou False) True tuple p-uplet ( 255 , 127 , 0 ) list liste [ 0 , 1 , 2 , 3 , 4 , 5 ] dict dictionnaire { 'Homer' : 43 , 'Marge' : 41 , 'Bart' : 12 , 'Lisa' : 10 , 'Maggie' : 4 } function fonction print Python est un langage \u00e0 typage dynamique, cela signifie qu'en fonction du contenu affect\u00e9 \u00e0 la variable, il d\u00e9termine automatiquement le type de la variable. Il existe beaucoup de langages (C++, Java....) o\u00f9 l\u2019utilisateur doit absolument d\u00e9finir le type d\u2019une variable avant de pouvoir l\u2019utiliser, faute de quoi cela entra\u00eenera une erreur. Remarque : L'explorateur de variables permet d'afficher le nom de la variable et sa valeur. Il suffit d'aller dans affichage puis variables. La fonction type() vous permet de conna\u00eetre le type d\u2019une variable. Le type d'une variable peut \u00eatre modifi\u00e9 de mani\u00e8re dynamique en cours de programme. Le v\u00e9rifier en testant le programme suivant : 1 2 3 4 a = 8 print ( a ) a = a + 2 # ou a += 2 print ( a ) Remarque : L'explorateur de variable affiche uniquement les derni\u00e8res valeurs et types pris par les variables en fin de programme.","title":"Types des variables"},{"location":"Premiere/Langage/Bases_Python/#affectations-assignations-multiples","text":"Sous Python, on peut assigner une valeur \u00e0 plusieurs variables simultan\u00e9ment. 1 2 3 x = y = 7 print ( \"x vaut :\" , x ) print ( \"y vaut :\" , y ) On peut aussi effectuer des affectations parall\u00e8les \u00e0 l\u2019aide d\u2019un seul operateur = : 1 2 3 x, y = 7, 9.4 print(\"x vaut :\", x) print(\"y vaut :\", y) Les variables x et y prennent simultan\u00e9ment les nouvelles valeurs 7 et 9,4","title":"Affectations (assignations) multiples"},{"location":"Premiere/Langage/Bases_Python/#les-operations","text":"","title":"Les op\u00e9rations"},{"location":"Premiere/Langage/Bases_Python/#arithmetiques","text":"Un ordinateur est bien \u00e9videmment capable d\u2019effectuer des op\u00e9rations arithm\u00e9tiques et math\u00e9matiques. Dans le tableau ci-apr\u00e8s, sont pr\u00e9sent\u00e9s les symboles utilis\u00e9s pour les op\u00e9rations de base. Op\u00e9ration Symbole Exemples \u00e0 tester Addition + 3+5 donne 8 Soustraction - 7-2 donne 5 Multiplication * 7*8 donne 56 Division / 7/2 donne 3.5 Reste de la division % 7%3 donne 1 Quotient de la division // 7//2 donne 3 Puissance ** 10**3 donne 1000 Remarque : l\u2019utilisation du signe + ne se limite pas \u00e0 l\u2019addition. Il est aussi utilis\u00e9 pour la concat\u00e9nation. Le terme concat\u00e9nation d\u00e9signe l\u2019action de mettre bout \u00e0 bout au moins deux cha\u00eenes. Exercice 1 Sans l'ex\u00e9cuter, que fait le programme suivant. Puis le tester 1 2 3 4 a = \" cha\u00eene de \" b = \" caract\u00e8re \" monExpression = a + b print ( monExpression ) Exercice 2 \u00c9crire un programme qui multiplie le contenu de 2 variables. Par exemple : c = 5 et d = 9 . Le r\u00e9sultat de cette op\u00e9ration devra \u00eatre \"rang\u00e9\" dans une troisi\u00e8me variable ( resultat ). Votre programme devra afficher le contenu de la variable resultat .","title":"Arithm\u00e9tiques"},{"location":"Premiere/Langage/Bases_Python/#quelques-fonctions-mathematiques","text":"Pour utiliser certaines fonctions math\u00e9matiques plus avanc\u00e9es ( \\(x^a\\) , \\(exp(x)\\) , \\(sin(x)\\) , \\(log(x)\\) ... ) il est n\u00e9cessaire d\u2019importer des biblioth\u00e8ques. Si l\u2019on utilise la biblioth\u00e8que math , la premi\u00e8re ligne de code devra commencer par : import math . Cette biblioth\u00e8que inclus entre autres les fonctions suivantes : Fonction Symbole Exemples \u00e0 tester constante p pi pi donne 3.141592653589793 sinus (angle en radians) sin(x) sin(pi/2) donne 1.0 arc sinus asin(x) asin(1) donne 1.5707963267948966 radians conversion radians en degr\u00e9s degrees(x) degrees(pi) donne 180.0 degr\u00e9s conversion degr\u00e9s en radians radians(x) radians(90) donne 1.5707963267948966 radians logarithme d\u00e9cimal log10(x) log10(100) donne 2 logartithme n\u00e9p\u00e9rien log(x) log(100) donne 4.605170185988092 exponentielle exp(x) exp(100) donne 2.6881171418161356e+43 puissance xy pow(x,y) pow(2,8) donne 256.0 racine carr\u00e9e sqrt(x) sqrt(100) retourne 10 arrondi au plus proche entier round(x) arrondi au plus proche r\u00e9el avec y d\u00e9cimales apr\u00e8s la virgule round(x,y) round(100.235789,2) retourne 100.24 arrondi au plus petit entier>=x ceil(x) ceil(100.235789,2) retourne 101 arrondi au plus grand entier<=x floor(x) floor(100.235789,2) retourne 100 Exemple complet : 1 2 3 import math a = math . pow ( 2.8 ) print ( a ) # affiche 256","title":"Quelques fonctions math\u00e9matiques"},{"location":"Premiere/Langage/Bases_Python/#generation-de-nombres-aleatoires","text":"La biblioth\u00e8que random permet de g\u00e9n\u00e9rer des nombres al\u00e9atoires, la premi\u00e8re ligne de code devra commencer par import random . Cette biblioth\u00e8que inclus entre autres les fonctions suivantes : Exemple complet : 1 2 3 4 5 6 7 8 9 import random a = random . randint ( 0 , 5 ) print ( a ) # affiche 3 b = random . randint ( 0 , 5 ) print ( b ) # affiche 1 c = random . random () print ( c ) # affiche 0.28974251561751374 Remarque : Plut\u00f4t que de r\u00e9p\u00e9ter random avant l'itilisation de chaque fonction, nous pouvons utiliser un alias de la mani\u00e8re suivante : 1 2 3 4 5 6 7 8 9 import random as rd a = rd . randint ( 0 , 5 ) print ( a ) # affiche 3 b = rd . randint ( 0 , 5 ) print ( b ) # affiche 1 c = rd . random () print ( c ) # affiche 0.28974251561751374","title":"G\u00e9n\u00e9ration de nombres al\u00e9atoires"},{"location":"Premiere/Langage/Bases_Python/#les-entrees","text":"On peut alors lire depuis le clavier la valeur d\u2019une cha\u00eene de caract\u00e8res par la m\u00e9thode input() . Exemple : 1 2 a = input () #les parenth\u00e8ses sont obligatoires . a = input ( \" Nom : \" ) # le texte dans les parenth\u00e8ses permet d\u2019indiquer ce que l'on attend La commande input() renvoie toujours \u00e0 une cha\u00eene de caract\u00e8res. Pour affecter un nombre, il faut le convertir gr\u00e2ce aux fonctions int() pour convertir une chaine de caract\u00e8re en entier et float() pour convertir une cha\u00eene de caract\u00e8re en flottant. Exemple : 1 2 3 a = int ( input ( \" Donner une valeur enti\u00e8re : \" )) x = float ( input ( \"Donner une valeur r\u00e9elle : \" ) print ( \" L\u2019entier a vaut \" , a , \" et le r\u00e9el x vaut \" , x )","title":"Les entr\u00e9es"},{"location":"Premiere/Langage/Bases_Python/#exercices","text":"Exercice 3 Faire un programme qui demande un nombre et qui affiche sa racine carr\u00e9e et son carr\u00e9. Exercice 4 Retrouvez sur internet la formule du volume d\u2019un cylindre. Faire un programme demandant \u00e0 l\u2019utilisateur les 2 variables rentrant dans la formule puis afficher le r\u00e9sultat. Exercice 5 \u00c9crire un programme qui vous demande votre nom, votre pr\u00e9nom, votre classe, une discipline et les 5 notes obtenues dans cette discipline. Il calculera la moyenne dans cette discipline, arrondie \u00e0 l\u2019entier sup\u00e9rieur et affichera le r\u00e9sultat sous la forme : PEREAU Vincent \u2013 classe de 2GT7 : moyenne en MATH\u00c9MATIQUES = 13 Exercice 6 \u00c9crire un programme qui calcul l\u2019angle de r\u00e9fraction \\(i_2\\) (exprim\u00e9 en degr\u00e9s et avec 1 chiffre apr\u00e8s la virgule) d\u2019un faisceau lumineux, apr\u00e8s avoir demand\u00e9 l\u2019angle d\u2019incidence \\(i_1\\) (en degr\u00e9s) ainsi que les indices de r\u00e9fractions \\(n_1\\) et \\(n_2\\) des milieux 1 et 2. Donn\u00e9e : Loi de Descartes relative \u00e0 la r\u00e9fraction : \\(n_1 \\times sin(i_1) = n_2 \\times sin(i_2)\\) Exercice 7 \u00c9crire un programme qui calcule combien de bonbons recevra chaque \u00e9l\u00e8ve de la classe ainsi que le nombre de bonbons restants, apr\u00e8s avoir demand\u00e9 le nombre total de bonbons et le nombre d\u2019\u00e9l\u00e8ves de la classe. Le r\u00e9sultat sera affich\u00e9 sous la forme : \"chaque \u00e9l\u00e8ve recevra 5 bonbons et il en restera 3\"","title":"Exercices"},{"location":"Premiere/Langage/ControleFlux_Python/","text":"Contr\u00f4le du flux d'\u00e9xecution # Introduction # Jusqu'\u00e0 pr\u00e9sent, nous avons vu des algorithmes simples qui se d\u00e9roulent en s\u00e9quence de la premi\u00e8re \u00e0 la derni\u00e8re instruction. Cependant, ces instructions en s\u00e9quence ne suffisent pas \u00e0 ex\u00e9cuter des algorithmes plus complexes o\u00f9 : Certaines s\u00e9quences d'instructions ne peuvent \u00eatre ex\u00e9cut\u00e9es que sous certaines conditions : structures conditionnelles (if\u2026 else) Certaines s\u00e9quences d'instructions n\u00e9cessitent d'\u00eatre ex\u00e9cut\u00e9es un certain nombre de fois : structures it\u00e9ratives (boucle for et boucle while) Le chemin suivi par le programme est appel\u00e9 le flux d'ex\u00e9cution et les instructions qui le modifient sont appel\u00e9es les instructions de contr\u00f4le de flux. Les structures conditionnelles # L'instruction conditionnelle Si (if) # Dans certains cas, on ne veut ex\u00e9cuter une s\u00e9rie d\u2019instructions que sous une condition. Syntaxe : Apr\u00e8s avoir tap\u00e9 if condition : et appuy\u00e9 sur entr\u00e9e, l'\u00e9diteur va alors automatiquement indenter (d\u00e9calage vers la droite) les lignes d'instructions suivantes. En effet, toutes les instructions qui doivent \u00eatre effectu\u00e9es si la condition est vraie doivent \u00eatre indent\u00e9es, et elles doivent avoir imp\u00e9rativement la m\u00eame indentation. Exemple : le programme suivant affiche candidat re\u00e7u mais uniquement que celui-ci ait une moyenne sup\u00e9rieure ou \u00e9gale \u00e0 10. 1 2 3 4 5 6 m = float ( input ( \"Moyenne : \" )) if m >= 10 : print ( \"Candidat accept\u00e9\" ) print ( \"programme termin\u00e9\" ) L\u2019\u00e9valuation de la condition # En fait la condition \u00e9valu\u00e9e m >= 10 renvoie un bool\u00e9en, True (vrai) ou False (faux). Il est possible de le v\u00e9rifier en rajoutant l\u2019instruction suivante en fin de programme : 1 2 3 4 5 6 m = float ( input ( \"Moyenne au bac = \" )) condition = m >= 10 print ( \"La condition \u00e9valu\u00e9e \u00e9tait bien : \" , condition ) print (( \"boolean est bien du type :\" , type ( condition )) Op\u00e9rateurs de comparaison et op\u00e9rateurs logiques # Afin d\u2019\u00e9crire une condition, on utilise les op\u00e9rateurs de comparaison suivants : Op\u00e9rateur Signification litt\u00e9rale < strictement inf\u00e9rieur \u00e0 > strictement sup\u00e9rieur \u00e0 <= inf\u00e9rieur ou \u00e9gal \u00e0 >= sup\u00e9rieur ou \u00e9gal \u00e0 == \u00e9gal \u00e0 != diff\u00e9rent de Attention : l\u2019\u00e9galit\u00e9 de deux valeurs est exprim\u00e9e avec l\u2019op\u00e9rateur \u00ab == \u00bb et non \u00ab = \u00bb. Ce dernier est en effet l\u2019op\u00e9rateur d\u2019affectation et ne doit pas \u00eatre utilis\u00e9 dans une condition. Ces op\u00e9rateurs de comparaisons peuvent \u00eatre combin\u00e9s aux op\u00e9rateurs logiques (ou op\u00e9rateurs bool\u00e9ens) suivants : Op\u00e9rateur R\u00f4le a and b Vraie si a et b sont vraie a or b vraie si a ou b (ou les deux) sont vraies not(a) si a est vraie, not(a) est fausse et inversement Exemple : le programme suivant d\u00e9termine si le candidat aura une mention BIEN. Pour cela sa note doit \u00eatre sup\u00e9rieure ou \u00e9gale \u00e0 12 et inf\u00e9rieure strictement \u00e0 14 : 1 2 3 m = float ( input ( \"Moyenne au bac : \" )) if m >= 12 and m < 14 : print ( \"mention bien\" ) L\u00e0 encore, l'expression \u00e9valu\u00e9e : m >= 10 and m < 12 renvoie un bool\u00e9en : 1 2 3 4 5 6 m = float ( input ( \"Moyenne au bac : \" )) boolean = m >= 10 and m < 14 if boolean : print ( \"mention bien\" ) print ( \"La condition \u00e9valu\u00e9e \u00e9tait bien : \" , m >= 10 and m < 14 ) print (( \"boolean est bien du type :\" , type ( boolean ))) Remarque n\u00b01 : En python (contrairement au langage Java par exemple), la condition if (m>= 12 and m <1 4) : peut \u00eatre remplac\u00e9e par la condition if(12 <= m <14). Remarque n\u00b02 : En python, la condition \u00e9valu\u00e9e n'est pas obligatoirement entre parenth\u00e8ses, mais dans le cas d'expressions complexes, les parenth\u00e8ses sont vivement conseill\u00e9es. L'instruction conditionnelle Si... Sinon ... (if\u2026 else\u2026) # Dans certains cas on ne veut ex\u00e9cuter une s\u00e9quence d'instructions que si la condition \u00e9valu\u00e9e est vraie et ex\u00e9cuter une autre s\u00e9quence d'instruction si la condition \u00e9valu\u00e9e est fausse. Syntaxe : ![if](data_controle/syntaxe_if_else.png{width=400px} Exemple : le programme renvoie syst\u00e9matiquement une r\u00e9ponse : \"candidat re\u00e7u\" (si condition \u00e9valu\u00e9e vraie) sinon \"candidat non re\u00e7u\" si condition \u00e9valu\u00e9e fausse) : 1 2 3 4 5 6 m = float ( input ( \"Moyenne ua bac : \" )) if m <= 10 : print ( \"Candidat re\u00e7u\" ) else : print ( \"Candidat non re\u00e7u\" ) print ( \"Programme termin\u00e9\" ) Exercice \u00c9crire un programme qui demande la temp\u00e9rature d'une maison. Si celle-ci est inf\u00e9rieure \u00e0 19\u00b0C, afficher \"il faut allumer la chaudi\u00e8re\". Sinon, afficher \"La chaudi\u00e8re reste \u00e9teinte\". L'intruction elif # Il est possible d'ajouter autant de conditions pr\u00e9cises que l'on souhaite en ajoutant le mot cl\u00e9 \\mintinline{python}{elif}, contraction de \"else\" et \"if\", qu'on pourrait traduire par \"sinon\". Exercice \u00c9crire un script qui demande la note au bac et qui affiche la mention correspondante. Donn\u00e9es : si la note est sup\u00e9rieure ou \u00e9gale \u00e0 16, la mention au bac est TB ; si la note est sup\u00e9rieure ou \u00e9gale \u00e0 14 et inf\u00e9rieure \u00e0 16, la mention au bac est B ; si la note est sup\u00e9rieure ou \u00e9gale \u00e0 12 et inf\u00e9rieure \u00e0 14, la mention au bac est AB ; si la note est inf\u00e9rieure \u00e0 12 et sup\u00e9rieure ou \u00e9gale \u00e0 10, la mention au bac est Passable ; si la note est inf\u00e9rieure \u00e0 10, vous n'avez pas le bac. Tester autre chose que des nombres # Il est possible de tester autre chose que des nombres, par exemple des caract\u00e8res 1 2 3 4 5 6 7 8 caract = input ( 'caract\u00e8re=' ) if carac == 'H' : print ( 'lettre H' ) else : print ( \"lettre autre que le H\" ) print ( \"programme termin\u00e9\" ) Il est m\u00eame possible de savoir si la lettre tap\u00e9e se trouve avant ou apr\u00e8s une lettre donn\u00e9e dans l'alphabet : 1 2 3 4 5 6 7 8 9 10 caract = input ( 'caract\u00e8re=' ) if caract == 'H' : print ( 'lettre H' ) elif caract > 'H' : print ( \"la lettre se trouve apr\u00e8s le H\" ) else : print ( \"la lettre se trouve avant le H\" ) print ( \"programme termin\u00e9\" ) Structures it\u00e9ratives # Les \u00e9num\u00e9rables # En math\u00e9matiques, on dit qu'un ensemble est d\u00e9nombrable lorsqu'on peut associer \u00e0 chaque \u00e9l\u00e9ment de l'ensemble un nombre (traditionnellement 1, 2, 3 ...) les fraises Tagada d'un paquet sont d\u00e9nombrables. les voitures qui roulent sur l'autoroute sont d\u00e9nombrables. l'eau qui coule d'un robinet n'est pas d\u00e9nombrable. En informatique, il existe un concept similaire qui va d\u00e9signer les objets que l'on peut \u00e9num\u00e9rer, c'est-\u00e0-dire les d\u00e9composer en une succession ordonn\u00e9e d'\u00e9l\u00e9ments. On les appelle les \u00e9num\u00e9rables ou les it\u00e9rables (Python utilise le mot anglais iterable). la variable \"NSI\" (qui est de type String) est \u00e9num\u00e9rable : on peut la d\u00e9composer en N , S , I . la variable [4, 3, 17] (qui est de type List) est \u00e9num\u00e9rable : on peut la d\u00e9composer en 4 , 3 , 17 . la variable 5 (qui est de type Int) n'est PAS \u00e9num\u00e9rable : on ne peut pas la d\u00e9composer. Boucle for # Les traitements informatiques n\u00e9cessitent souvent l'ex\u00e9cution de t\u00e2ches r\u00e9p\u00e9titives. La boucle for permet d\u2019effectuer un nombre de fois bien d\u00e9termin\u00e9 le corps de boucle (s\u00e9quence d'instructions). Elle s'utilise g\u00e9n\u00e9ralement avec la fonction range(n) qui permet de g\u00e9n\u00e9rer une s\u00e9quence de nombres entiers allant de 0 \u00e0 \\(n\\) exclu. Syntaxe : Apr\u00e8s avoir tap\u00e9 for i in range(n): et appuy\u00e9 sur entr\u00e9e, l'\u00e9diteur va alors automatiquement indenter les lignes d'instructions suivantes. En effet, toutes les instructions \u00e0 r\u00e9p\u00e9ter doivent \u00eatre indent\u00e9es, et elles doivent avoir imp\u00e9rativement la m\u00eame indentation. Exemple 1 : le code suivant r\u00e9p\u00e8te 10 fois l'instruction suivante. 1 2 for i in range ( 10 ): print ( \"Hello world\" ) La fonction range() peut accepter 3 arguments : range (valeur_d\u00e9but, valeur_fin, pas) . Les 3 arguments (valeur_d\u00e9but, valeur_fin, pas) sont obligatoirement des entiers. Exercice \u00c9crire un programme, qui affiche 50 fois \u201dJe dois ranger mon bureau\u201d \u00e0 l\u2019aide de l\u2019instruction `for'. Exercice L\u2019\u00abASCII Art\u00bb consiste \u00e0 utiliser les caract\u00e8res alphanum\u00e9riques du code ASCII pour produire des images. Nous allons commencer par dessiner un carr\u00e9 \u00e0 l\u2019aide de la lettre X. \u00c9crire le programme qui affiche le carr\u00e9 ci-dessous (taille 8), en d\u00e9finissant une fonction qui prend en param\u00e8tre la longueur du c\u00f4t\u00e9. Exercice Que r\u00e9alise le code suivant : 1 2 for i in range ( 4 ): print ( i ) Exemple 3 : Le programme suivant calcule \\(x^n\\) : 1 2 3 4 5 6 7 8 x = float ( input ( \" x ? \" )) n = int ( input ( \" n ? \" )) resultat = 1 for i in range ( 1 , n + 1 ): resultat = resultat * x print ( \"x^n = \" , resultat ) Exercice R\u00e9utiliser le code du carr\u00e9 pour afficher les formes suivantes, repr\u00e9sent\u00e9es ici avec un cote de 9 (mais le code doit permettre de varier la valeur de cote). La boucle while (boucle conditionnelle non born\u00e9e) # La boucle while est assez peu diff\u00e9rente de la boucle for. On l'utilise lorsque l'on ne sait a priori pas combien de boucles vont \u00eatre effectu\u00e9es. On l'utilise \u00e9galement lorsque l'on veut r\u00e9aliser des incr\u00e9mentations avec un pas qui ne soit pas entier, par exemple lors d'un trac\u00e9 de courbe. La boucle \u00ab tant que \u00bb ex\u00e9cute le corps de boucle (instructions indent\u00e9es) tant qu\u2019une condition \u00e9valu\u00e9e dans le test de poursuite est vraie. D\u00e8s que la condition devient fausse, elle passe aux instructions suivantes. Syntaxe : Attention : lorsque que l'on utilise une boucle while , il faut s'assurer que la condition \u00e9valu\u00e9e dans le test de poursuite deviendra fausse \u00e0 un moment ou un autre, sinon ...le programme va boucler ind\u00e9finiment ! Exemple : Le programme suivant indique tous les entiers x dont le carr\u00e9 est inf\u00e9rieur \u00e0 un nombre n donn\u00e9 et indique \u00e9galement leur nombre (0 compris). 1 2 3 4 5 6 7 n = float ( input ( \"nombre n=\" )) x = 0 while x ** 2 <= n : print ( x ) x = x + 1 #ou x+=1 print ( \"Il y a \" , x , \"nombres entiers dont le carr\u00e9 est inf\u00e9rieur ou \u00e9gal \u00e0 \" , n ) Exercice exercice 6 p 42 du livre Exercice exercice 7 p 42 du livre Exercice exercice 9 p 42 du livre Exercice \u00c9crire le script du jeu de devinette suivant. Le jeu consiste \u00e0 deviner un nombre entre 1 et 100. Le programme demande \u00e0 l'utilisateur de rentrer une valeur et le programme lui affiche si ce nombre est trop petit, trop grand ou gagn\u00e9. Le programme compte aussi le nombre d'essai pour trouver la bonne valeur. Exemple : ---> 50 trop petit ! ---> 75 trop petit ! ---> 87 trop grand ! ---> 81 trop petit ! ---> 84 trop petit ! ---> 85 Gagn\u00e9 en 6 coups ! Donn\u00e9es : pour choisir un nombre au \"hasard\", on utilise la fonction randint() de la biblioth\u00e8que random . Exemple : 1 2 from random import * #importation de la biblioth\u00e8que random n = randint ( 1 , 5 ) #prend un nombre compris entre 1 et 5 Imbrication de boucles # Il est possible d\u2019imbriquer des boucles, c\u2019est-\u00e0-dire que dans le bloc d\u2019une boucle (boucle ext\u00e9rieure), on utilise une nouvelle boucle (boucle int\u00e9rieure). Exemple : Il est possible de modifier le programme de la table de multiplication vu pr\u00e9c\u00e9demment afin qu'il affiche toutes les tables de multiplication de 1 jusqu'\u00e0 10. Pour cela, il suffit d'imbriquer le programme pr\u00e9c\u00e9dent \u00e0 l'int\u00e9rieur d'une boucle qui fait varier \\(n\\) de 1 \u00e0 10 1 2 3 4 5 for n in range ( 1 , 11 ): print ( \"table de multiplication par\" , n ) for i in range ( 11 ): print ( i , 'x' , n , '=' , i * n ) print ( \"\" ) Parcours d'une cha\u00eene de caract\u00e8res # Solution directe : parcours des \u00e9l\u00e9ments # Une cha\u00eene de caract\u00e8res (type string) est compos\u00e9e de ... caract\u00e8res ! Il est possible de parcourir ces caract\u00e8res avec une structure for... in... Exemple : le programme suivant demande une cha\u00eene de caract\u00e8res et ins\u00e8re un \".\" entre chaque caract\u00e8re : 1 2 3 chaine = input ( \"Cha\u00eene de caract\u00e8re = \" ) for i in chaine : print ( i , end = '.' ) Solution indirecte : parcours des indices # Il est possible d'acc\u00e9der \u00e0 chaque caract\u00e8re d'une cha\u00eene \u00e0 l'aide de son indice de position. Le premier caract\u00e8re est toujours index\u00e9 0. Exemple : pour afficher le 1er et 5\u00e8me caract\u00e8re d'une cha\u00eene : 1 2 3 chaine = \"NUMERIQUE\" print ( \"le premier caract\u00e8re est :\" , chaine [ 0 ]) print ( \"le cinqui\u00e8me caract\u00e8re est :\" , chaine [ 4 ]) Pour balayer l'ensemble des caract\u00e8res de la cha\u00eene de caract\u00e8res : 1 2 3 chaine = input ( \"Cha\u00eene de caract\u00e8re = \" ) for in range ( len ( chaine )): print ( chaine [ i ], end = '.' ) Remarque : le fonction len() retourne la longueur de la cha\u00eene. Exercice R\u00e9aliser un programme qui demande une cha\u00eene de caract\u00e8res et une lettre et indiquera le nombre de fois que la lettre \u00e0 \u00e9t\u00e9 rencontr\u00e9e dans la cha\u00eene de caract\u00e8res. Exercice R\u00e9aliser un programme qui demande un mot et d\u00e9termine si oui ou non ce mot est un palindrome, c\u2019est-\u00e0-dire qu'il peut se lire indiff\u00e9remment dans les 2 sens, par exemple radar, S.O.S, ... Exercice R\u00e9aliser un programme qui demande une cha\u00eene de caract\u00e8res et la recopie dans une nouvelle variable en l'inversant. Exercices # Exercice R\u00e9aliser un programme qui simule un lancer de 3 d\u00e9s. Le programme devra : Afficher le r\u00e9sultat du lancer ; Indiquer s'il y a un triple et si oui, indiquer la valeur. Indiquer s'il y a un double et si oui, indiquer la valeur (ne pas afficher dans le cas d'un triple) Indiquer \u00e9galement s'il n'y a aucun double ou triple. Exercice R\u00e9soudre \u00e0 l'aide d'un programme le probl\u00e8me suivant. Une balle est l\u00e2ch\u00e9e d'une hauteur initiale \\(h\\) et rebondit \u00e0 chaque fois au 2/3 de sa hauteur. On consid\u00e8re qu'elle ne rebondit plus lorsque la hauteur devient strictement inf\u00e9rieure 5 cm. Calculer le nombre de rebonds de la balle Exercice A l'aide d'un programme, v\u00e9rifier que la probabilit\u00e9 de tirer un 6 lors d'un jeter de d\u00e9 est bien de 1/6. Exercice Exercice 28 p 44 du livre","title":"Contr\u00f4le du flux d'ex\u00e9cution"},{"location":"Premiere/Langage/ControleFlux_Python/#controle-du-flux-dexecution","text":"","title":"Contr\u00f4le du flux d'\u00e9xecution"},{"location":"Premiere/Langage/ControleFlux_Python/#introduction","text":"Jusqu'\u00e0 pr\u00e9sent, nous avons vu des algorithmes simples qui se d\u00e9roulent en s\u00e9quence de la premi\u00e8re \u00e0 la derni\u00e8re instruction. Cependant, ces instructions en s\u00e9quence ne suffisent pas \u00e0 ex\u00e9cuter des algorithmes plus complexes o\u00f9 : Certaines s\u00e9quences d'instructions ne peuvent \u00eatre ex\u00e9cut\u00e9es que sous certaines conditions : structures conditionnelles (if\u2026 else) Certaines s\u00e9quences d'instructions n\u00e9cessitent d'\u00eatre ex\u00e9cut\u00e9es un certain nombre de fois : structures it\u00e9ratives (boucle for et boucle while) Le chemin suivi par le programme est appel\u00e9 le flux d'ex\u00e9cution et les instructions qui le modifient sont appel\u00e9es les instructions de contr\u00f4le de flux.","title":"Introduction"},{"location":"Premiere/Langage/ControleFlux_Python/#les-structures-conditionnelles","text":"","title":"Les structures conditionnelles"},{"location":"Premiere/Langage/ControleFlux_Python/#linstruction-conditionnelle-si-if","text":"Dans certains cas, on ne veut ex\u00e9cuter une s\u00e9rie d\u2019instructions que sous une condition. Syntaxe : Apr\u00e8s avoir tap\u00e9 if condition : et appuy\u00e9 sur entr\u00e9e, l'\u00e9diteur va alors automatiquement indenter (d\u00e9calage vers la droite) les lignes d'instructions suivantes. En effet, toutes les instructions qui doivent \u00eatre effectu\u00e9es si la condition est vraie doivent \u00eatre indent\u00e9es, et elles doivent avoir imp\u00e9rativement la m\u00eame indentation. Exemple : le programme suivant affiche candidat re\u00e7u mais uniquement que celui-ci ait une moyenne sup\u00e9rieure ou \u00e9gale \u00e0 10. 1 2 3 4 5 6 m = float ( input ( \"Moyenne : \" )) if m >= 10 : print ( \"Candidat accept\u00e9\" ) print ( \"programme termin\u00e9\" )","title":"L'instruction conditionnelle Si (if)"},{"location":"Premiere/Langage/ControleFlux_Python/#levaluation-de-la-condition","text":"En fait la condition \u00e9valu\u00e9e m >= 10 renvoie un bool\u00e9en, True (vrai) ou False (faux). Il est possible de le v\u00e9rifier en rajoutant l\u2019instruction suivante en fin de programme : 1 2 3 4 5 6 m = float ( input ( \"Moyenne au bac = \" )) condition = m >= 10 print ( \"La condition \u00e9valu\u00e9e \u00e9tait bien : \" , condition ) print (( \"boolean est bien du type :\" , type ( condition ))","title":"L\u2019\u00e9valuation de la condition"},{"location":"Premiere/Langage/ControleFlux_Python/#operateurs-de-comparaison-et-operateurs-logiques","text":"Afin d\u2019\u00e9crire une condition, on utilise les op\u00e9rateurs de comparaison suivants : Op\u00e9rateur Signification litt\u00e9rale < strictement inf\u00e9rieur \u00e0 > strictement sup\u00e9rieur \u00e0 <= inf\u00e9rieur ou \u00e9gal \u00e0 >= sup\u00e9rieur ou \u00e9gal \u00e0 == \u00e9gal \u00e0 != diff\u00e9rent de Attention : l\u2019\u00e9galit\u00e9 de deux valeurs est exprim\u00e9e avec l\u2019op\u00e9rateur \u00ab == \u00bb et non \u00ab = \u00bb. Ce dernier est en effet l\u2019op\u00e9rateur d\u2019affectation et ne doit pas \u00eatre utilis\u00e9 dans une condition. Ces op\u00e9rateurs de comparaisons peuvent \u00eatre combin\u00e9s aux op\u00e9rateurs logiques (ou op\u00e9rateurs bool\u00e9ens) suivants : Op\u00e9rateur R\u00f4le a and b Vraie si a et b sont vraie a or b vraie si a ou b (ou les deux) sont vraies not(a) si a est vraie, not(a) est fausse et inversement Exemple : le programme suivant d\u00e9termine si le candidat aura une mention BIEN. Pour cela sa note doit \u00eatre sup\u00e9rieure ou \u00e9gale \u00e0 12 et inf\u00e9rieure strictement \u00e0 14 : 1 2 3 m = float ( input ( \"Moyenne au bac : \" )) if m >= 12 and m < 14 : print ( \"mention bien\" ) L\u00e0 encore, l'expression \u00e9valu\u00e9e : m >= 10 and m < 12 renvoie un bool\u00e9en : 1 2 3 4 5 6 m = float ( input ( \"Moyenne au bac : \" )) boolean = m >= 10 and m < 14 if boolean : print ( \"mention bien\" ) print ( \"La condition \u00e9valu\u00e9e \u00e9tait bien : \" , m >= 10 and m < 14 ) print (( \"boolean est bien du type :\" , type ( boolean ))) Remarque n\u00b01 : En python (contrairement au langage Java par exemple), la condition if (m>= 12 and m <1 4) : peut \u00eatre remplac\u00e9e par la condition if(12 <= m <14). Remarque n\u00b02 : En python, la condition \u00e9valu\u00e9e n'est pas obligatoirement entre parenth\u00e8ses, mais dans le cas d'expressions complexes, les parenth\u00e8ses sont vivement conseill\u00e9es.","title":"Op\u00e9rateurs de comparaison et op\u00e9rateurs logiques"},{"location":"Premiere/Langage/ControleFlux_Python/#linstruction-conditionnelle-si-sinon-if-else","text":"Dans certains cas on ne veut ex\u00e9cuter une s\u00e9quence d'instructions que si la condition \u00e9valu\u00e9e est vraie et ex\u00e9cuter une autre s\u00e9quence d'instruction si la condition \u00e9valu\u00e9e est fausse. Syntaxe : ![if](data_controle/syntaxe_if_else.png{width=400px} Exemple : le programme renvoie syst\u00e9matiquement une r\u00e9ponse : \"candidat re\u00e7u\" (si condition \u00e9valu\u00e9e vraie) sinon \"candidat non re\u00e7u\" si condition \u00e9valu\u00e9e fausse) : 1 2 3 4 5 6 m = float ( input ( \"Moyenne ua bac : \" )) if m <= 10 : print ( \"Candidat re\u00e7u\" ) else : print ( \"Candidat non re\u00e7u\" ) print ( \"Programme termin\u00e9\" ) Exercice \u00c9crire un programme qui demande la temp\u00e9rature d'une maison. Si celle-ci est inf\u00e9rieure \u00e0 19\u00b0C, afficher \"il faut allumer la chaudi\u00e8re\". Sinon, afficher \"La chaudi\u00e8re reste \u00e9teinte\".","title":"L'instruction conditionnelle   Si... Sinon ...    (if\u2026 else\u2026)"},{"location":"Premiere/Langage/ControleFlux_Python/#lintruction-elif","text":"Il est possible d'ajouter autant de conditions pr\u00e9cises que l'on souhaite en ajoutant le mot cl\u00e9 \\mintinline{python}{elif}, contraction de \"else\" et \"if\", qu'on pourrait traduire par \"sinon\". Exercice \u00c9crire un script qui demande la note au bac et qui affiche la mention correspondante. Donn\u00e9es : si la note est sup\u00e9rieure ou \u00e9gale \u00e0 16, la mention au bac est TB ; si la note est sup\u00e9rieure ou \u00e9gale \u00e0 14 et inf\u00e9rieure \u00e0 16, la mention au bac est B ; si la note est sup\u00e9rieure ou \u00e9gale \u00e0 12 et inf\u00e9rieure \u00e0 14, la mention au bac est AB ; si la note est inf\u00e9rieure \u00e0 12 et sup\u00e9rieure ou \u00e9gale \u00e0 10, la mention au bac est Passable ; si la note est inf\u00e9rieure \u00e0 10, vous n'avez pas le bac.","title":"L'intruction elif"},{"location":"Premiere/Langage/ControleFlux_Python/#tester-autre-chose-que-des-nombres","text":"Il est possible de tester autre chose que des nombres, par exemple des caract\u00e8res 1 2 3 4 5 6 7 8 caract = input ( 'caract\u00e8re=' ) if carac == 'H' : print ( 'lettre H' ) else : print ( \"lettre autre que le H\" ) print ( \"programme termin\u00e9\" ) Il est m\u00eame possible de savoir si la lettre tap\u00e9e se trouve avant ou apr\u00e8s une lettre donn\u00e9e dans l'alphabet : 1 2 3 4 5 6 7 8 9 10 caract = input ( 'caract\u00e8re=' ) if caract == 'H' : print ( 'lettre H' ) elif caract > 'H' : print ( \"la lettre se trouve apr\u00e8s le H\" ) else : print ( \"la lettre se trouve avant le H\" ) print ( \"programme termin\u00e9\" )","title":"Tester autre chose que des nombres"},{"location":"Premiere/Langage/ControleFlux_Python/#structures-iteratives","text":"","title":"Structures it\u00e9ratives"},{"location":"Premiere/Langage/ControleFlux_Python/#les-enumerables","text":"En math\u00e9matiques, on dit qu'un ensemble est d\u00e9nombrable lorsqu'on peut associer \u00e0 chaque \u00e9l\u00e9ment de l'ensemble un nombre (traditionnellement 1, 2, 3 ...) les fraises Tagada d'un paquet sont d\u00e9nombrables. les voitures qui roulent sur l'autoroute sont d\u00e9nombrables. l'eau qui coule d'un robinet n'est pas d\u00e9nombrable. En informatique, il existe un concept similaire qui va d\u00e9signer les objets que l'on peut \u00e9num\u00e9rer, c'est-\u00e0-dire les d\u00e9composer en une succession ordonn\u00e9e d'\u00e9l\u00e9ments. On les appelle les \u00e9num\u00e9rables ou les it\u00e9rables (Python utilise le mot anglais iterable). la variable \"NSI\" (qui est de type String) est \u00e9num\u00e9rable : on peut la d\u00e9composer en N , S , I . la variable [4, 3, 17] (qui est de type List) est \u00e9num\u00e9rable : on peut la d\u00e9composer en 4 , 3 , 17 . la variable 5 (qui est de type Int) n'est PAS \u00e9num\u00e9rable : on ne peut pas la d\u00e9composer.","title":"Les \u00e9num\u00e9rables"},{"location":"Premiere/Langage/ControleFlux_Python/#boucle-for","text":"Les traitements informatiques n\u00e9cessitent souvent l'ex\u00e9cution de t\u00e2ches r\u00e9p\u00e9titives. La boucle for permet d\u2019effectuer un nombre de fois bien d\u00e9termin\u00e9 le corps de boucle (s\u00e9quence d'instructions). Elle s'utilise g\u00e9n\u00e9ralement avec la fonction range(n) qui permet de g\u00e9n\u00e9rer une s\u00e9quence de nombres entiers allant de 0 \u00e0 \\(n\\) exclu. Syntaxe : Apr\u00e8s avoir tap\u00e9 for i in range(n): et appuy\u00e9 sur entr\u00e9e, l'\u00e9diteur va alors automatiquement indenter les lignes d'instructions suivantes. En effet, toutes les instructions \u00e0 r\u00e9p\u00e9ter doivent \u00eatre indent\u00e9es, et elles doivent avoir imp\u00e9rativement la m\u00eame indentation. Exemple 1 : le code suivant r\u00e9p\u00e8te 10 fois l'instruction suivante. 1 2 for i in range ( 10 ): print ( \"Hello world\" ) La fonction range() peut accepter 3 arguments : range (valeur_d\u00e9but, valeur_fin, pas) . Les 3 arguments (valeur_d\u00e9but, valeur_fin, pas) sont obligatoirement des entiers. Exercice \u00c9crire un programme, qui affiche 50 fois \u201dJe dois ranger mon bureau\u201d \u00e0 l\u2019aide de l\u2019instruction `for'. Exercice L\u2019\u00abASCII Art\u00bb consiste \u00e0 utiliser les caract\u00e8res alphanum\u00e9riques du code ASCII pour produire des images. Nous allons commencer par dessiner un carr\u00e9 \u00e0 l\u2019aide de la lettre X. \u00c9crire le programme qui affiche le carr\u00e9 ci-dessous (taille 8), en d\u00e9finissant une fonction qui prend en param\u00e8tre la longueur du c\u00f4t\u00e9. Exercice Que r\u00e9alise le code suivant : 1 2 for i in range ( 4 ): print ( i ) Exemple 3 : Le programme suivant calcule \\(x^n\\) : 1 2 3 4 5 6 7 8 x = float ( input ( \" x ? \" )) n = int ( input ( \" n ? \" )) resultat = 1 for i in range ( 1 , n + 1 ): resultat = resultat * x print ( \"x^n = \" , resultat ) Exercice R\u00e9utiliser le code du carr\u00e9 pour afficher les formes suivantes, repr\u00e9sent\u00e9es ici avec un cote de 9 (mais le code doit permettre de varier la valeur de cote).","title":"Boucle for"},{"location":"Premiere/Langage/ControleFlux_Python/#la-boucle-while-boucle-conditionnelle-non-bornee","text":"La boucle while est assez peu diff\u00e9rente de la boucle for. On l'utilise lorsque l'on ne sait a priori pas combien de boucles vont \u00eatre effectu\u00e9es. On l'utilise \u00e9galement lorsque l'on veut r\u00e9aliser des incr\u00e9mentations avec un pas qui ne soit pas entier, par exemple lors d'un trac\u00e9 de courbe. La boucle \u00ab tant que \u00bb ex\u00e9cute le corps de boucle (instructions indent\u00e9es) tant qu\u2019une condition \u00e9valu\u00e9e dans le test de poursuite est vraie. D\u00e8s que la condition devient fausse, elle passe aux instructions suivantes. Syntaxe : Attention : lorsque que l'on utilise une boucle while , il faut s'assurer que la condition \u00e9valu\u00e9e dans le test de poursuite deviendra fausse \u00e0 un moment ou un autre, sinon ...le programme va boucler ind\u00e9finiment ! Exemple : Le programme suivant indique tous les entiers x dont le carr\u00e9 est inf\u00e9rieur \u00e0 un nombre n donn\u00e9 et indique \u00e9galement leur nombre (0 compris). 1 2 3 4 5 6 7 n = float ( input ( \"nombre n=\" )) x = 0 while x ** 2 <= n : print ( x ) x = x + 1 #ou x+=1 print ( \"Il y a \" , x , \"nombres entiers dont le carr\u00e9 est inf\u00e9rieur ou \u00e9gal \u00e0 \" , n ) Exercice exercice 6 p 42 du livre Exercice exercice 7 p 42 du livre Exercice exercice 9 p 42 du livre Exercice \u00c9crire le script du jeu de devinette suivant. Le jeu consiste \u00e0 deviner un nombre entre 1 et 100. Le programme demande \u00e0 l'utilisateur de rentrer une valeur et le programme lui affiche si ce nombre est trop petit, trop grand ou gagn\u00e9. Le programme compte aussi le nombre d'essai pour trouver la bonne valeur. Exemple : ---> 50 trop petit ! ---> 75 trop petit ! ---> 87 trop grand ! ---> 81 trop petit ! ---> 84 trop petit ! ---> 85 Gagn\u00e9 en 6 coups ! Donn\u00e9es : pour choisir un nombre au \"hasard\", on utilise la fonction randint() de la biblioth\u00e8que random . Exemple : 1 2 from random import * #importation de la biblioth\u00e8que random n = randint ( 1 , 5 ) #prend un nombre compris entre 1 et 5","title":"La boucle while  (boucle conditionnelle non born\u00e9e)"},{"location":"Premiere/Langage/ControleFlux_Python/#imbrication-de-boucles","text":"Il est possible d\u2019imbriquer des boucles, c\u2019est-\u00e0-dire que dans le bloc d\u2019une boucle (boucle ext\u00e9rieure), on utilise une nouvelle boucle (boucle int\u00e9rieure). Exemple : Il est possible de modifier le programme de la table de multiplication vu pr\u00e9c\u00e9demment afin qu'il affiche toutes les tables de multiplication de 1 jusqu'\u00e0 10. Pour cela, il suffit d'imbriquer le programme pr\u00e9c\u00e9dent \u00e0 l'int\u00e9rieur d'une boucle qui fait varier \\(n\\) de 1 \u00e0 10 1 2 3 4 5 for n in range ( 1 , 11 ): print ( \"table de multiplication par\" , n ) for i in range ( 11 ): print ( i , 'x' , n , '=' , i * n ) print ( \"\" )","title":"Imbrication de boucles"},{"location":"Premiere/Langage/ControleFlux_Python/#parcours-dune-chaine-de-caracteres","text":"","title":"Parcours d'une cha\u00eene de caract\u00e8res"},{"location":"Premiere/Langage/ControleFlux_Python/#solution-directe-parcours-des-elements","text":"Une cha\u00eene de caract\u00e8res (type string) est compos\u00e9e de ... caract\u00e8res ! Il est possible de parcourir ces caract\u00e8res avec une structure for... in... Exemple : le programme suivant demande une cha\u00eene de caract\u00e8res et ins\u00e8re un \".\" entre chaque caract\u00e8re : 1 2 3 chaine = input ( \"Cha\u00eene de caract\u00e8re = \" ) for i in chaine : print ( i , end = '.' )","title":"Solution directe : parcours des \u00e9l\u00e9ments"},{"location":"Premiere/Langage/ControleFlux_Python/#solution-indirecte-parcours-des-indices","text":"Il est possible d'acc\u00e9der \u00e0 chaque caract\u00e8re d'une cha\u00eene \u00e0 l'aide de son indice de position. Le premier caract\u00e8re est toujours index\u00e9 0. Exemple : pour afficher le 1er et 5\u00e8me caract\u00e8re d'une cha\u00eene : 1 2 3 chaine = \"NUMERIQUE\" print ( \"le premier caract\u00e8re est :\" , chaine [ 0 ]) print ( \"le cinqui\u00e8me caract\u00e8re est :\" , chaine [ 4 ]) Pour balayer l'ensemble des caract\u00e8res de la cha\u00eene de caract\u00e8res : 1 2 3 chaine = input ( \"Cha\u00eene de caract\u00e8re = \" ) for in range ( len ( chaine )): print ( chaine [ i ], end = '.' ) Remarque : le fonction len() retourne la longueur de la cha\u00eene. Exercice R\u00e9aliser un programme qui demande une cha\u00eene de caract\u00e8res et une lettre et indiquera le nombre de fois que la lettre \u00e0 \u00e9t\u00e9 rencontr\u00e9e dans la cha\u00eene de caract\u00e8res. Exercice R\u00e9aliser un programme qui demande un mot et d\u00e9termine si oui ou non ce mot est un palindrome, c\u2019est-\u00e0-dire qu'il peut se lire indiff\u00e9remment dans les 2 sens, par exemple radar, S.O.S, ... Exercice R\u00e9aliser un programme qui demande une cha\u00eene de caract\u00e8res et la recopie dans une nouvelle variable en l'inversant.","title":"Solution indirecte : parcours des indices"},{"location":"Premiere/Langage/ControleFlux_Python/#exercices","text":"Exercice R\u00e9aliser un programme qui simule un lancer de 3 d\u00e9s. Le programme devra : Afficher le r\u00e9sultat du lancer ; Indiquer s'il y a un triple et si oui, indiquer la valeur. Indiquer s'il y a un double et si oui, indiquer la valeur (ne pas afficher dans le cas d'un triple) Indiquer \u00e9galement s'il n'y a aucun double ou triple. Exercice R\u00e9soudre \u00e0 l'aide d'un programme le probl\u00e8me suivant. Une balle est l\u00e2ch\u00e9e d'une hauteur initiale \\(h\\) et rebondit \u00e0 chaque fois au 2/3 de sa hauteur. On consid\u00e8re qu'elle ne rebondit plus lorsque la hauteur devient strictement inf\u00e9rieure 5 cm. Calculer le nombre de rebonds de la balle Exercice A l'aide d'un programme, v\u00e9rifier que la probabilit\u00e9 de tirer un 6 lors d'un jeter de d\u00e9 est bien de 1/6. Exercice Exercice 28 p 44 du livre","title":"Exercices"},{"location":"Premiere/Langage/fonction_python/","text":"Les fonctions avec Python # Introduction # La notion de fonction est essentielle en programmation. Elle permet de construire des codes modulaires, plus faciles \u00e0 lire et \u00e0 modifier. En Python, une fonction se cr\u00e9e avec le mot-cl\u00e9 def . Fonctions simples, fonctions param\u00e9tr\u00e9es, proc\u00e9dures # Fonctions simples # Pour d\u00e9finir une fonction simple, la syntaxe \u00e0 respecter est la suivante : 1 2 3 4 5 def nom_fonction (): instruction 1 instruction 2 instruction 3 return resultat Pour nommer votre fonction, vous pouvez choisir le nom que vous voulez, \u00e0 la condition de ne pas utiliser un nom r\u00e9serv\u00e9 par le langage, de ne pas utiliser de caract\u00e8res sp\u00e9ciaux ou accentu\u00e9s (le soulign\u00e9 _ est autoris\u00e9). Une bonne pratique est d'utiliser des noms explicites, de ne pas mettre de majuscule en d\u00e9but de nom d'une fonction (r\u00e9serv\u00e9 aux classes). Par exemple pour nommer une fonction qui retourne la valeur absolue d'un nombre : abs() \\(\\rightarrow\\) NON, mot r\u00e9serv\u00e9 \u00e0 la fonction d'origine dans python val abs() \\(\\rightarrow\\) NON, l'espace n'est pas autoris\u00e9 val_abs() \\(\\rightarrow\\) OUI Les parenth\u00e8ses qui suivent le nom de la fonction sont obligatoires. Exemple de fonction simple La fonction suivante, appel\u00e9e lance_des() , va retourner un nombre entier al\u00e9atoire compris entre 1 et 6 inclus : 1 2 3 4 5 6 7 8 9 from random import * # D\u00e9finition de la fonction def lance_des (): x = randint ( 1 , 6 ) return x # Appel de la fonction et affichage du r\u00e9sultat print ( lance_des ()) Important : la d\u00e9finition de la fonction doit imp\u00e9rativement pr\u00e9c\u00e9der son appel, sinon la fonction ne sera pas reconnue. Remarque : Vous constatez qu'une fonction peut elle-m\u00eame en appeler une ou plusieurs autre(s). Ici la fonction lance_des() appelle la fonction randit() . Fonctions param\u00e9tr\u00e9e # Cadre g\u00e9n\u00e9ral # Nous souhaitons maintenant \u00e9crire une fonction nomm\u00e9e plus_petit qui va nous renvoyer le plus petit de 2 nombres pass\u00e9s comme arguments de la fonction. Dans la d\u00e9finition d'une telle fonction, il faut pr\u00e9voir 2 variables particuli\u00e8res pour recevoir les arguments transmis. Ces variables s'appellent des param\u00e8tres. On choisit le nom des param\u00e8tres en respectant les m\u00eames r\u00e8gles de syntaxe que d'habitude pour les variables et on place leurs noms entre les parenth\u00e8ses qui accompagnent la d\u00e9finition de la fonction, s\u00e9par\u00e9es par une virgule. 1 2 3 4 5 def nom_fonction ( parametre1 : type_a , parametre2 : type_2 , ... ) -> type_resultat : instruction 1 instruction 2 instruction 3 return resultat Exemple de fonction param\u00e9tr\u00e9e Voici le code qui correspond \u00e0 l'\u00e9criture de la fonction plus_Petit : 1 2 3 4 5 6 7 8 9 10 11 # D\u00e9finition de la fonction plus_Petit def plus_petit ( a , b ): if a < b : return a else : return b # Programme principal resultat = plus_petit ( 12 , 28 ) print ( \"Le plus petit nombre est : \" , resultat ) G\u00e9n\u00e9ralement, on utilise des variables d\u00e9finies pr\u00e9c\u00e9demment comme arguments : 1 2 3 4 5 6 7 8 9 10 11 12 13 # D\u00e9finition de la fonction def plus_petit ( a , b ): if a < b : return a else : return b # programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Ici les param\u00e8tres a et b re\u00e7oivent respectivement les valeurs des arguments nb1 et nb2 . Remarque : les arguments peuvent \u00eatre de diff\u00e9rents types : bool\u00e9en, entier, flottant, cha\u00eene de caract\u00e8re, listes ... tout comme les valeurs retourn\u00e9es. Exercice R\u00e9aliser une fonction addition qui prend en param\u00e8tre deux entiers a et b et qui r\u00e9alise la somme de a et de b . Utiliser cette fonction dans un programme. Exercice R\u00e9aliser une fonction multiplication qui prend en param\u00e8tre deux entiers a et b et qui r\u00e9alise la produit de a et de b . Utiliser cette fonction dans un programme. Exercice \u00c9crire une fonction qui calcule la volume d\u2019un cylindre \u00e0 partir du rayon \\(r\\) et de la hauteur \\(h\\) donn\u00e9s en argument et qui renvoie le r\u00e9sultat. Utiliser cette fonction dans un programme. Exercice \u00c9crire une fonction qui r\u00e9alise la table de multiplication d\u2019un nombre \\(n\\) donn\u00e9 en argument et qui l\u2019affiche. Exercice \u00c9crire une fonction qui prend en argument un flottant \\(x\\) non nul et un entier naturel \\(n\\) et qui renvoie \\(x^n\\) .Vous devrez utiliser une boucle. Exercice On souhaite \u00e9crire une fonction c\u00e9l\u00e8bre en math\u00e9matiques, \u00e0 savoir la fonction factorielle. On rappelle que la factorielle de l\u2019entier \\(n\\) est donn\u00e9e par : \\(n! = \\prod_{i=1}^{n}= 1\\times2 \\times 3 \\times ... \\times (n-1) \\times n\\) . Param\u00e8tre par d\u00e9faut. # Il suffit de d\u00e9finir une valeur par d\u00e9faut \u00e0 un argument pour le rendre facultatif. Naturellement, cette valeur est \u00e9cras\u00e9e si l'argument est pr\u00e9cis\u00e9 lors de l'appel de la fonction. 1 2 3 4 5 6 7 8 # D\u00e9finition de la fonction def affiche ( x = \"aucun argument donn\u00e9, voici le texte par d\u00e9faut\" ): print ( x ) # Programme principal affiche () affiche ( \"coucou\" ) Proc\u00e9dures # Si une fonction ne retourne rien, dans ce cas et en toute rigueur, on ne parle plus de fonction mais de proc\u00e9dure. La proc\u00e9dure se termine par return None (None (rien) repr\u00e9sente l'absence de valeur). Remarque : return None n'est pas obligatoire mais vivement conseill\u00e9. Exemple de proc\u00e9dure: 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def bonjour ( nom ): print ( \"Bonjour \" , nom ) return None # Programme principal nom = input ( \"Quel est ton nom ? \" ) bonjour ( nom ) Exercice A l'aide du module Turtle, \u00e9crire une proc\u00e9dure rect qui trace un rectangle. Cette proc\u00e9dure prend en argument la position \\(x\\) et \\(y\\) du coin sup\u00e9rieur gauche, les dimensions \\(h\\) et \\(l\\) du rectangle ainsi que la couleur choisie. La port\u00e9e des variables : variable locale et variable globale # Variable locale # Exemple : consid\u00e9rons le script suivant : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def fonction (): text = \"Bonjour\" return None # Programme principal fonction () print ( text ) Lors de l'interpr\u00e9tation du code, on constate que la variable text n'est pas reconnue dans le corps du script : 1 2 3 4 5 6 7 / usr / bin / python3 .9 / home / galand / PycharmProjects / pythonProject3 / main . py Traceback ( most recent call last ): File \"/home/galand/PycharmProjects/pythonProject3/main.py\" , line 9 , in < module > print ( text ) NameError : name 'text' is not defined Process finished with exit code 1 Cette variable, d\u00e9finie dans le corps de la fonction, ne sera reconnue qu'\u00e0 l'int\u00e9rieur de cette fonction, il s'agit d'une variable locale. D\u00e9finition : Une variable est dite locale lorsqu'elle est cr\u00e9\u00e9e dans une fonction. Elle n'existera et ne sera visible que lors de l'ex\u00e9cution de ladite fonction Variable globale Consid\u00e9rons maintenant le programme suivant : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def fonction (): print ( text ) return None # Programme principal text = \"bonjour\" fonction () Lors de l'interpr\u00e9tation du code, on constate que la variable text est bien visible dans le corps de la fonction. Cette variable, d\u00e9finie dans le corps du script, est une variable globale. Une variable globale peut-elle \u00eatre modifi\u00e9e par une fonction ? Consid\u00e9rons le script suivant. Va-t-il afficher 'Bonjour' ou 'Au revoir' ? 1 2 3 4 5 6 7 8 9 10 # D\u00e9finition de la fonction def fonction (): text = \"Bonjour\" return None # Programme principal text = \"Au revoir\" fonction () print ( text ) Nous avons vu qu'une variable globale est visible \u00e0 l'int\u00e9rieur d'une fonction, cependant on remarque ici que la valeur d'une variable globale ne peut pas \u00eatre modifi\u00e9e par une fonction. D\u00e9finition : Une variable globale lorsqu'elle est d\u00e9finie dans le programme principal. Elles sont accessibles pour toutes les fonctions du programme. Tout ceci peut para\u00eetre bien compliqu\u00e9 au premier abord. Vous comprendrez cependant tr\u00e8s vite qu'il est utile que les variables locales restent confin\u00e9es \u00e0 l'int\u00e9rieur du corps des fonctions. Cela signifie que vous pouvez utiliser n'importe quelle fonction sans vous pr\u00e9occuper le moins du monde du nom des variables utilis\u00e9es. Ces variables ne pourront pas interf\u00e9rer avec celles que vous avez d\u00e9finies dans le corps de votre script. Exercice Rep\u00e9rer dans le programme suivant toutes les variables. Indiquer ensuite si ce sont des variables locales ou globales. 1 2 3 4 5 6 def somme_fonction ( a , b ): x = 5 z = a + b + x return z print ( somme_fonction ( 4 , 6 )) Le mot-cl\u00e9 : global # En python, le mot-cl\u00e9 global permet de modifier la variable en dehors de sa port\u00e9e actuelle. Il est utilis\u00e9 pour cr\u00e9er une variable globale et apporter des modifications dans un contexte local (fonction). Les r\u00e8gles pour utiliser le mot-cl\u00e9 global sont les suivantes : lorsqu'une variable est cr\u00e9\u00e9e dans une fonction : elle est locale par d\u00e9faut. lorsqu'une variable est cr\u00e9\u00e9e en dehors de toute fonction, elle est globale par d\u00e9faut. le mot-cl\u00e9 global pour lire et \u00e9crire une variable globale \u00e0 l'int\u00e9rieur d'une fonction. l'utilisation du mot-cl\u00e9 global en dehors d'une fonction n'a aucun effet. Example Taper et comparer les deux programmes suivants : 1 2 3 4 5 6 c = 1 # variable global def ajoute (): print ( c ) ajouter () 1 2 3 4 5 6 7 8 c = 0 #variable globale def ajoute (): global c c = c + 2 print ( \"\u00e0 l'int\u00e9rieur de la fonction, c vaut \" , c ) ajouter () print ( \"dans le programme global, c vaut\" , c ) Les r\u00e8gles de bon usage # Prototyper la fonction # Prototyper une fonction (ou une proc\u00e9dure) consiste \u00e0 d\u00e9clarer dans l'ent\u00eate de d\u00e9finition de la fonction le type des param\u00e8tres et le type de la donn\u00e9e retourn\u00e9e. C'est absolument indispensable dans des langages comme le C, mais pas obligatoire en python. C'est malgr\u00e9 tout vivement conseill\u00e9 en python pour la clarification de la fonction au niveau du programmeur, surtout si ce n'est pas lui qui a \u00e9crit la fonction. 1 2 3 4 5 6 7 8 9 10 11 12 13 # D\u00e9finition de la fonction def plus_petit ( a : int , b : int ) -> int : if a < b : return a else : return b # Programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Pour une proc\u00e9dure : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def bonjour ( nom : str ) -> None : print ( \"Bonjour \" , nom ) return None # Programme principal nom = input ( \"Quel est ton nom ? \" ) bonjour ( nom ) Documenter # L'ent\u00eate de d\u00e9finition de la fonction peut \u00eatre suivi d'un commentaire, appel\u00e9 docstring, plac\u00e9 entre des guillemets, voir entre des triples guillemets si le commentaire comporte plusieurs lignes. Ce dernier n'a aucun r\u00f4le fonctionnel dans le script, mais il est m\u00e9moris\u00e9 dans un syst\u00e8me de documentation interne automatique, lequel pourra \u00eatre exploit\u00e9 par certains \u00e9diteurs \"\u00e9volu\u00e9s\" comme Spyder. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # D\u00e9finition de la fonction def plus_petit ( a : int , b : int ) -> int : \" fonction qui retourne le plus petit nombre\" if a < b : return a else : return b # Programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Si l'on place la souris sur le nom de la fonction et que l'on effectue un CTRL+I (appel de l'aide), on obtient : Remarque : l'aide indique \u00e9galement les types des arguments a et b attendus par la fonction, si cela a \u00e9t\u00e9 renseign\u00e9 lors du prototypage. Dans la console python on peut \u00e9galement obtenir l'aide en tapant help (nomFonction) Tester # Ce n'est pas parce que le code est correct syntaxiquement que le programme \u00e9crit fonctionnera. En effet, il faut pr\u00e9voir des tests avec des situations o\u00f9 le programme ne fonctionnera pas. Ces tests reposent sur le mot-cl\u00e9 assert , qui va lever une erreur lorsqu'il est suivi d'une expression \u00e9valu\u00e9e \u00e0 False . Exemple : 1 assert type ( a ) == int , 'La fonction attend un entier` Ci-dessus, on v\u00e9rifie que le type de a est un entier et apr\u00e8s la virgule, on place la cha\u00eene de caract\u00e8re qui apparaitra dans la console si le test n'est pas v\u00e9rifi\u00e9 (ici La fonction attend un entier ) Soit, on met tous les tests dans une fonction. En g\u00e9n\u00e9ral, on teste si la fonction produit le r\u00e9sultat attendu dans diff\u00e9rentes situations comme dans l'exemple ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 def maxi ( n1 , n2 ): if n1 < n2 : return n2 else : return n1 def test_maxi (): assert maxi ( 3 , 4 ) == 4 assert maxi ( 5 , 2 ) == 5 assert maxi ( 7 , 7 ) == 7 print ( \"tests ok\" ) Il est aussi possible d'int\u00e9grer les tests \u00e0 la fonction elle-m\u00eame. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 def calcul_imc ( masse : float , taille : float ) -> float : \"\"\" Cette fonction calcule l'IMC d'une personne Pr\u00e9 : l'argument masse est un entier ou flottant compris entre 3.0 et 150.0 l'argument taille est un entier ou un flottant compris entre 0.20 et 2.50 Post : la valeur retourn\u00e9e est un flottant la valeur retourn\u00e9e entre 10.0 et 50.0 \"\"\" assert type ( masse ) == int or type ( masse ) == float , \"l'argument masse doit \u00eatre de type int ou float\" assert type ( taille ) == int or type ( taille ) == float , \"l'argument masse doit \u00eatre de type int ou float\" assert masse > 3 , \"masse trop faible\" assert masse < 150 , \"masse trop importante\" assert taille > 0.30 , \" taille trop faible\" assert taille < 2.50 , \" taille trop importante\" imc = masse / taille ** 2 assert 10 < imc < 50 , \"valeur d'IMC non plausible\" return im Exercices # Exercice \u00c9crire une fonction nomm\u00e9e est_pair qui prend en argument un nombre entier strictement positif et retourne True si ce nombre est pair, False sinon. Exercice \u00c9crire une fonction nomm\u00e9e divisible qui prend en argument deux nombres entiers et retourne True si le plus grand des 2 nombres est divisible par le plus petit, False sinon. Exercice \u00c9crire une fonction nomm\u00e9e nb_caract qui prend en premier argument une cha\u00eene de caract\u00e8res, en deuxi\u00e8me argument un caract\u00e8re et retourne le nombre de fois que le caract\u00e8re appara\u00eet dans la cha\u00eene. Le second argument est facultatif. S'il n'est pas indiqu\u00e9, il sera consid\u00e9r\u00e9 par la fonction comme un espace. Si le caract\u00e8re n'est pas pr\u00e9sent dans la cha\u00eene, la fonction retourne 0. Exercice \u00c9crire une fonction nomm\u00e9e inverse qui prend en argument une cha\u00eene de caract\u00e8res et retourne la cha\u00eene de caract\u00e8res invers\u00e9e.","title":"Les fonctions en Python"},{"location":"Premiere/Langage/fonction_python/#les-fonctions-avec-python","text":"","title":"Les fonctions avec Python"},{"location":"Premiere/Langage/fonction_python/#introduction","text":"La notion de fonction est essentielle en programmation. Elle permet de construire des codes modulaires, plus faciles \u00e0 lire et \u00e0 modifier. En Python, une fonction se cr\u00e9e avec le mot-cl\u00e9 def .","title":"Introduction"},{"location":"Premiere/Langage/fonction_python/#fonctions-simples-fonctions-parametrees-procedures","text":"","title":"Fonctions simples, fonctions param\u00e9tr\u00e9es, proc\u00e9dures"},{"location":"Premiere/Langage/fonction_python/#fonctions-simples","text":"Pour d\u00e9finir une fonction simple, la syntaxe \u00e0 respecter est la suivante : 1 2 3 4 5 def nom_fonction (): instruction 1 instruction 2 instruction 3 return resultat Pour nommer votre fonction, vous pouvez choisir le nom que vous voulez, \u00e0 la condition de ne pas utiliser un nom r\u00e9serv\u00e9 par le langage, de ne pas utiliser de caract\u00e8res sp\u00e9ciaux ou accentu\u00e9s (le soulign\u00e9 _ est autoris\u00e9). Une bonne pratique est d'utiliser des noms explicites, de ne pas mettre de majuscule en d\u00e9but de nom d'une fonction (r\u00e9serv\u00e9 aux classes). Par exemple pour nommer une fonction qui retourne la valeur absolue d'un nombre : abs() \\(\\rightarrow\\) NON, mot r\u00e9serv\u00e9 \u00e0 la fonction d'origine dans python val abs() \\(\\rightarrow\\) NON, l'espace n'est pas autoris\u00e9 val_abs() \\(\\rightarrow\\) OUI Les parenth\u00e8ses qui suivent le nom de la fonction sont obligatoires. Exemple de fonction simple La fonction suivante, appel\u00e9e lance_des() , va retourner un nombre entier al\u00e9atoire compris entre 1 et 6 inclus : 1 2 3 4 5 6 7 8 9 from random import * # D\u00e9finition de la fonction def lance_des (): x = randint ( 1 , 6 ) return x # Appel de la fonction et affichage du r\u00e9sultat print ( lance_des ()) Important : la d\u00e9finition de la fonction doit imp\u00e9rativement pr\u00e9c\u00e9der son appel, sinon la fonction ne sera pas reconnue. Remarque : Vous constatez qu'une fonction peut elle-m\u00eame en appeler une ou plusieurs autre(s). Ici la fonction lance_des() appelle la fonction randit() .","title":"Fonctions simples"},{"location":"Premiere/Langage/fonction_python/#fonctions-parametree","text":"","title":"Fonctions param\u00e9tr\u00e9e"},{"location":"Premiere/Langage/fonction_python/#cadre-general","text":"Nous souhaitons maintenant \u00e9crire une fonction nomm\u00e9e plus_petit qui va nous renvoyer le plus petit de 2 nombres pass\u00e9s comme arguments de la fonction. Dans la d\u00e9finition d'une telle fonction, il faut pr\u00e9voir 2 variables particuli\u00e8res pour recevoir les arguments transmis. Ces variables s'appellent des param\u00e8tres. On choisit le nom des param\u00e8tres en respectant les m\u00eames r\u00e8gles de syntaxe que d'habitude pour les variables et on place leurs noms entre les parenth\u00e8ses qui accompagnent la d\u00e9finition de la fonction, s\u00e9par\u00e9es par une virgule. 1 2 3 4 5 def nom_fonction ( parametre1 : type_a , parametre2 : type_2 , ... ) -> type_resultat : instruction 1 instruction 2 instruction 3 return resultat Exemple de fonction param\u00e9tr\u00e9e Voici le code qui correspond \u00e0 l'\u00e9criture de la fonction plus_Petit : 1 2 3 4 5 6 7 8 9 10 11 # D\u00e9finition de la fonction plus_Petit def plus_petit ( a , b ): if a < b : return a else : return b # Programme principal resultat = plus_petit ( 12 , 28 ) print ( \"Le plus petit nombre est : \" , resultat ) G\u00e9n\u00e9ralement, on utilise des variables d\u00e9finies pr\u00e9c\u00e9demment comme arguments : 1 2 3 4 5 6 7 8 9 10 11 12 13 # D\u00e9finition de la fonction def plus_petit ( a , b ): if a < b : return a else : return b # programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Ici les param\u00e8tres a et b re\u00e7oivent respectivement les valeurs des arguments nb1 et nb2 . Remarque : les arguments peuvent \u00eatre de diff\u00e9rents types : bool\u00e9en, entier, flottant, cha\u00eene de caract\u00e8re, listes ... tout comme les valeurs retourn\u00e9es. Exercice R\u00e9aliser une fonction addition qui prend en param\u00e8tre deux entiers a et b et qui r\u00e9alise la somme de a et de b . Utiliser cette fonction dans un programme. Exercice R\u00e9aliser une fonction multiplication qui prend en param\u00e8tre deux entiers a et b et qui r\u00e9alise la produit de a et de b . Utiliser cette fonction dans un programme. Exercice \u00c9crire une fonction qui calcule la volume d\u2019un cylindre \u00e0 partir du rayon \\(r\\) et de la hauteur \\(h\\) donn\u00e9s en argument et qui renvoie le r\u00e9sultat. Utiliser cette fonction dans un programme. Exercice \u00c9crire une fonction qui r\u00e9alise la table de multiplication d\u2019un nombre \\(n\\) donn\u00e9 en argument et qui l\u2019affiche. Exercice \u00c9crire une fonction qui prend en argument un flottant \\(x\\) non nul et un entier naturel \\(n\\) et qui renvoie \\(x^n\\) .Vous devrez utiliser une boucle. Exercice On souhaite \u00e9crire une fonction c\u00e9l\u00e8bre en math\u00e9matiques, \u00e0 savoir la fonction factorielle. On rappelle que la factorielle de l\u2019entier \\(n\\) est donn\u00e9e par : \\(n! = \\prod_{i=1}^{n}= 1\\times2 \\times 3 \\times ... \\times (n-1) \\times n\\) .","title":"Cadre g\u00e9n\u00e9ral"},{"location":"Premiere/Langage/fonction_python/#parametre-par-defaut","text":"Il suffit de d\u00e9finir une valeur par d\u00e9faut \u00e0 un argument pour le rendre facultatif. Naturellement, cette valeur est \u00e9cras\u00e9e si l'argument est pr\u00e9cis\u00e9 lors de l'appel de la fonction. 1 2 3 4 5 6 7 8 # D\u00e9finition de la fonction def affiche ( x = \"aucun argument donn\u00e9, voici le texte par d\u00e9faut\" ): print ( x ) # Programme principal affiche () affiche ( \"coucou\" )","title":"Param\u00e8tre par d\u00e9faut."},{"location":"Premiere/Langage/fonction_python/#procedures","text":"Si une fonction ne retourne rien, dans ce cas et en toute rigueur, on ne parle plus de fonction mais de proc\u00e9dure. La proc\u00e9dure se termine par return None (None (rien) repr\u00e9sente l'absence de valeur). Remarque : return None n'est pas obligatoire mais vivement conseill\u00e9. Exemple de proc\u00e9dure: 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def bonjour ( nom ): print ( \"Bonjour \" , nom ) return None # Programme principal nom = input ( \"Quel est ton nom ? \" ) bonjour ( nom ) Exercice A l'aide du module Turtle, \u00e9crire une proc\u00e9dure rect qui trace un rectangle. Cette proc\u00e9dure prend en argument la position \\(x\\) et \\(y\\) du coin sup\u00e9rieur gauche, les dimensions \\(h\\) et \\(l\\) du rectangle ainsi que la couleur choisie.","title":"Proc\u00e9dures"},{"location":"Premiere/Langage/fonction_python/#la-portee-des-variables-variable-locale-et-variable-globale","text":"","title":"La port\u00e9e des variables : variable locale et variable globale"},{"location":"Premiere/Langage/fonction_python/#variable-locale","text":"Exemple : consid\u00e9rons le script suivant : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def fonction (): text = \"Bonjour\" return None # Programme principal fonction () print ( text ) Lors de l'interpr\u00e9tation du code, on constate que la variable text n'est pas reconnue dans le corps du script : 1 2 3 4 5 6 7 / usr / bin / python3 .9 / home / galand / PycharmProjects / pythonProject3 / main . py Traceback ( most recent call last ): File \"/home/galand/PycharmProjects/pythonProject3/main.py\" , line 9 , in < module > print ( text ) NameError : name 'text' is not defined Process finished with exit code 1 Cette variable, d\u00e9finie dans le corps de la fonction, ne sera reconnue qu'\u00e0 l'int\u00e9rieur de cette fonction, il s'agit d'une variable locale. D\u00e9finition : Une variable est dite locale lorsqu'elle est cr\u00e9\u00e9e dans une fonction. Elle n'existera et ne sera visible que lors de l'ex\u00e9cution de ladite fonction Variable globale Consid\u00e9rons maintenant le programme suivant : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def fonction (): print ( text ) return None # Programme principal text = \"bonjour\" fonction () Lors de l'interpr\u00e9tation du code, on constate que la variable text est bien visible dans le corps de la fonction. Cette variable, d\u00e9finie dans le corps du script, est une variable globale. Une variable globale peut-elle \u00eatre modifi\u00e9e par une fonction ? Consid\u00e9rons le script suivant. Va-t-il afficher 'Bonjour' ou 'Au revoir' ? 1 2 3 4 5 6 7 8 9 10 # D\u00e9finition de la fonction def fonction (): text = \"Bonjour\" return None # Programme principal text = \"Au revoir\" fonction () print ( text ) Nous avons vu qu'une variable globale est visible \u00e0 l'int\u00e9rieur d'une fonction, cependant on remarque ici que la valeur d'une variable globale ne peut pas \u00eatre modifi\u00e9e par une fonction. D\u00e9finition : Une variable globale lorsqu'elle est d\u00e9finie dans le programme principal. Elles sont accessibles pour toutes les fonctions du programme. Tout ceci peut para\u00eetre bien compliqu\u00e9 au premier abord. Vous comprendrez cependant tr\u00e8s vite qu'il est utile que les variables locales restent confin\u00e9es \u00e0 l'int\u00e9rieur du corps des fonctions. Cela signifie que vous pouvez utiliser n'importe quelle fonction sans vous pr\u00e9occuper le moins du monde du nom des variables utilis\u00e9es. Ces variables ne pourront pas interf\u00e9rer avec celles que vous avez d\u00e9finies dans le corps de votre script. Exercice Rep\u00e9rer dans le programme suivant toutes les variables. Indiquer ensuite si ce sont des variables locales ou globales. 1 2 3 4 5 6 def somme_fonction ( a , b ): x = 5 z = a + b + x return z print ( somme_fonction ( 4 , 6 ))","title":"Variable locale"},{"location":"Premiere/Langage/fonction_python/#le-mot-cle-global","text":"En python, le mot-cl\u00e9 global permet de modifier la variable en dehors de sa port\u00e9e actuelle. Il est utilis\u00e9 pour cr\u00e9er une variable globale et apporter des modifications dans un contexte local (fonction). Les r\u00e8gles pour utiliser le mot-cl\u00e9 global sont les suivantes : lorsqu'une variable est cr\u00e9\u00e9e dans une fonction : elle est locale par d\u00e9faut. lorsqu'une variable est cr\u00e9\u00e9e en dehors de toute fonction, elle est globale par d\u00e9faut. le mot-cl\u00e9 global pour lire et \u00e9crire une variable globale \u00e0 l'int\u00e9rieur d'une fonction. l'utilisation du mot-cl\u00e9 global en dehors d'une fonction n'a aucun effet. Example Taper et comparer les deux programmes suivants : 1 2 3 4 5 6 c = 1 # variable global def ajoute (): print ( c ) ajouter () 1 2 3 4 5 6 7 8 c = 0 #variable globale def ajoute (): global c c = c + 2 print ( \"\u00e0 l'int\u00e9rieur de la fonction, c vaut \" , c ) ajouter () print ( \"dans le programme global, c vaut\" , c )","title":"Le mot-cl\u00e9 : global"},{"location":"Premiere/Langage/fonction_python/#les-regles-de-bon-usage","text":"","title":"Les r\u00e8gles de bon usage"},{"location":"Premiere/Langage/fonction_python/#prototyper-la-fonction","text":"Prototyper une fonction (ou une proc\u00e9dure) consiste \u00e0 d\u00e9clarer dans l'ent\u00eate de d\u00e9finition de la fonction le type des param\u00e8tres et le type de la donn\u00e9e retourn\u00e9e. C'est absolument indispensable dans des langages comme le C, mais pas obligatoire en python. C'est malgr\u00e9 tout vivement conseill\u00e9 en python pour la clarification de la fonction au niveau du programmeur, surtout si ce n'est pas lui qui a \u00e9crit la fonction. 1 2 3 4 5 6 7 8 9 10 11 12 13 # D\u00e9finition de la fonction def plus_petit ( a : int , b : int ) -> int : if a < b : return a else : return b # Programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Pour une proc\u00e9dure : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def bonjour ( nom : str ) -> None : print ( \"Bonjour \" , nom ) return None # Programme principal nom = input ( \"Quel est ton nom ? \" ) bonjour ( nom )","title":"Prototyper la fonction"},{"location":"Premiere/Langage/fonction_python/#documenter","text":"L'ent\u00eate de d\u00e9finition de la fonction peut \u00eatre suivi d'un commentaire, appel\u00e9 docstring, plac\u00e9 entre des guillemets, voir entre des triples guillemets si le commentaire comporte plusieurs lignes. Ce dernier n'a aucun r\u00f4le fonctionnel dans le script, mais il est m\u00e9moris\u00e9 dans un syst\u00e8me de documentation interne automatique, lequel pourra \u00eatre exploit\u00e9 par certains \u00e9diteurs \"\u00e9volu\u00e9s\" comme Spyder. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # D\u00e9finition de la fonction def plus_petit ( a : int , b : int ) -> int : \" fonction qui retourne le plus petit nombre\" if a < b : return a else : return b # Programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Si l'on place la souris sur le nom de la fonction et que l'on effectue un CTRL+I (appel de l'aide), on obtient : Remarque : l'aide indique \u00e9galement les types des arguments a et b attendus par la fonction, si cela a \u00e9t\u00e9 renseign\u00e9 lors du prototypage. Dans la console python on peut \u00e9galement obtenir l'aide en tapant help (nomFonction)","title":"Documenter"},{"location":"Premiere/Langage/fonction_python/#tester","text":"Ce n'est pas parce que le code est correct syntaxiquement que le programme \u00e9crit fonctionnera. En effet, il faut pr\u00e9voir des tests avec des situations o\u00f9 le programme ne fonctionnera pas. Ces tests reposent sur le mot-cl\u00e9 assert , qui va lever une erreur lorsqu'il est suivi d'une expression \u00e9valu\u00e9e \u00e0 False . Exemple : 1 assert type ( a ) == int , 'La fonction attend un entier` Ci-dessus, on v\u00e9rifie que le type de a est un entier et apr\u00e8s la virgule, on place la cha\u00eene de caract\u00e8re qui apparaitra dans la console si le test n'est pas v\u00e9rifi\u00e9 (ici La fonction attend un entier ) Soit, on met tous les tests dans une fonction. En g\u00e9n\u00e9ral, on teste si la fonction produit le r\u00e9sultat attendu dans diff\u00e9rentes situations comme dans l'exemple ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 def maxi ( n1 , n2 ): if n1 < n2 : return n2 else : return n1 def test_maxi (): assert maxi ( 3 , 4 ) == 4 assert maxi ( 5 , 2 ) == 5 assert maxi ( 7 , 7 ) == 7 print ( \"tests ok\" ) Il est aussi possible d'int\u00e9grer les tests \u00e0 la fonction elle-m\u00eame. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 def calcul_imc ( masse : float , taille : float ) -> float : \"\"\" Cette fonction calcule l'IMC d'une personne Pr\u00e9 : l'argument masse est un entier ou flottant compris entre 3.0 et 150.0 l'argument taille est un entier ou un flottant compris entre 0.20 et 2.50 Post : la valeur retourn\u00e9e est un flottant la valeur retourn\u00e9e entre 10.0 et 50.0 \"\"\" assert type ( masse ) == int or type ( masse ) == float , \"l'argument masse doit \u00eatre de type int ou float\" assert type ( taille ) == int or type ( taille ) == float , \"l'argument masse doit \u00eatre de type int ou float\" assert masse > 3 , \"masse trop faible\" assert masse < 150 , \"masse trop importante\" assert taille > 0.30 , \" taille trop faible\" assert taille < 2.50 , \" taille trop importante\" imc = masse / taille ** 2 assert 10 < imc < 50 , \"valeur d'IMC non plausible\" return im","title":"Tester"},{"location":"Premiere/Langage/fonction_python/#exercices","text":"Exercice \u00c9crire une fonction nomm\u00e9e est_pair qui prend en argument un nombre entier strictement positif et retourne True si ce nombre est pair, False sinon. Exercice \u00c9crire une fonction nomm\u00e9e divisible qui prend en argument deux nombres entiers et retourne True si le plus grand des 2 nombres est divisible par le plus petit, False sinon. Exercice \u00c9crire une fonction nomm\u00e9e nb_caract qui prend en premier argument une cha\u00eene de caract\u00e8res, en deuxi\u00e8me argument un caract\u00e8re et retourne le nombre de fois que le caract\u00e8re appara\u00eet dans la cha\u00eene. Le second argument est facultatif. S'il n'est pas indiqu\u00e9, il sera consid\u00e9r\u00e9 par la fonction comme un espace. Si le caract\u00e8re n'est pas pr\u00e9sent dans la cha\u00eene, la fonction retourne 0. Exercice \u00c9crire une fonction nomm\u00e9e inverse qui prend en argument une cha\u00eene de caract\u00e8res et retourne la cha\u00eene de caract\u00e8res invers\u00e9e.","title":"Exercices"},{"location":"SNT/correction_DS4/","text":"Correction du devoir Python 4 # Exercice 1 # Un \u00e9l\u00e8ve a \u00e9crit et ex\u00e9cut\u00e9 le programme Python ci-dessous. Que s\u2019affiche-t-il \u00e0 l\u2019\u00e9cran ? Exercice 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 a = 9 b = a + 1 # donc b = 10 a = b - 8 # donc a = 2 a = a * 7 # donc a = 14 # a ce stade, a = 14 if ( a < 8 ) : # si a est inf\u00e9rieur \u00e0 8 #or ce n'est pas (a = 14) print ( \"bonjour\" , a ) # on affiche \"bonjour et la valeur de a # c'est-\u00e0-dire 14 else : # sinon print ( \"au revoir\" , b ) # on affiche \"au revoir\" et la valeur de b c'est-\u00e0 dire 10 Exercice 2 : # La loi d'Ohm traduit l\u2019\u00e9chauffement d\u2019un conducteur au passage du courant. Elle se d\u00e9duit de l\u2019expression : \\[ R = \\dfrac{U}{I} \\begin{cases} U (V): & : tension ;\\\\ I (A) & : intensit\u00e9 ;\\\\ R (\\Omega) & : r\u00e9sistance. \\\\ \\end{cases} \\] \u00c9crire un programme en Python qui : demande \u00e0 l\u2019utilisateur l\u2019intensit\u00e9 puis la tension ; qui calcule la r\u00e9sistance ; qui affiche cette r\u00e9sistance avec la phrase \u201cLa r\u00e9sistance vaut : R\u201d avec R la r\u00e9sistance calcul\u00e9e par le programme. qui affiche si la r\u00e9sistance est n\u00e9gative : \"Vous vous \u00eates tromp\u00e9s en rentrant une donn\u00e9e\". Exercice 2 1 2 3 4 5 6 7 8 9 intensite = float ( input ( \"Intensit\u00e9 (A) : \" )) tension = float ( input ( \"Tension (V) : \" )) resistance = tension / intensite if resistance > 0 : print ( \"La r\u00e9sistance vaut R = \" , r\u00e9sistance , \"Ohms\" ) # A la place de Ohm, on aurait pu mettre chr(937) # ce qui nous donne Omega majuscule else : print ( \"Vous vous \u00eates tromp\u00e9s en rentrant une donn\u00e9e\" ) Exercice 3 # Le programme Python suivant est sens\u00e9 r\u00e9aliser l'affichage de la table des 9 de 0x9 = 0 jusqu'\u00e0 10x9 = 90. Recopier le programme ci dessous et apporter les corrections afin qu'il fonctionne. R\u00e9aliser le programme pr\u00e9c\u00e9dent \u00e0 l'aide d'une boucle \\mintinline{python}{while}. Exercice 3 1 2 for i in range ( 12 ); print ( i , \"*9\" , i * 12 ) Correction : 1 Exercice 3 Correction 2 3 for i in range ( 11 ): print ( i , \"*9\" , i * 9 ) 2 Exercice 3 Correction 2 3 4 5 i = 0 while i < 11 : print ( i , \"*9\" , i * 9 ) i += 1 \\Exo{ } \\begin{center} \\includegraphics[width=14cm]{img/image1.png} \\end{center} Les consignes sont les suivantes : \\begin{center} \\includegraphics[width=9cm]{img/image2.png} \\end{center} \u00c9crire le script vous permettant d'accomplir cette mission. \\Exo{ Afin de pouvoir mieux combattre les diff\u00e9rentes \u00e9pid\u00e9mies, parfois tr\u00e8s graves, qui se d\u00e9veloppent r\u00e9guli\u00e8rement dans la r\u00e9gion, le d\u00e9partement de m\u00e9decine de l'universit\u00e9 a lanc\u00e9 une grande \u00e9tude. En particulier, les chercheurs s'int\u00e9ressent \u00e0 la vitesse de propagation d'une \u00e9pid\u00e9mie et donc \u00e0 la vitesse \u00e0 laquelle des mesures sanitaires doivent \u00eatres mises en place. Ce que doit faire votre programme : Votre programme doit d'abord lire un entier, la population totale de la ville. Sachant qu'une personne \u00e9tait malade au jour 1 et que chaque malade contamine deux nouvelles personnes le jour suivant (et chacun des jours qui suivent), vous devez calculer \u00e0 partir de quel jour toute la population de la ville sera malade. } \\dg{Exemple 1:}\\ entr\u00e9e : 3\\ sortie : 2 \\dg{Exemple 2 :}\\ entr\u00e9e : 10\\ sortie : 4 \\dg{Commentaires :} On a 1 malade le premier jour, donc 2 nouveaux malades le second jour, soit un total de 3 malades. On a donc 6 nouveaux malades au troisi\u00e8me jour, soit un total de 9 malades. On a donc 18 nouveaux malades au quatri\u00e8me jour, soit\u2026","title":"correction DS4"},{"location":"SNT/correction_DS4/#correction-du-devoir-python-4","text":"","title":"Correction du devoir Python 4"},{"location":"SNT/correction_DS4/#exercice-1","text":"Un \u00e9l\u00e8ve a \u00e9crit et ex\u00e9cut\u00e9 le programme Python ci-dessous. Que s\u2019affiche-t-il \u00e0 l\u2019\u00e9cran ? Exercice 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 a = 9 b = a + 1 # donc b = 10 a = b - 8 # donc a = 2 a = a * 7 # donc a = 14 # a ce stade, a = 14 if ( a < 8 ) : # si a est inf\u00e9rieur \u00e0 8 #or ce n'est pas (a = 14) print ( \"bonjour\" , a ) # on affiche \"bonjour et la valeur de a # c'est-\u00e0-dire 14 else : # sinon print ( \"au revoir\" , b ) # on affiche \"au revoir\" et la valeur de b c'est-\u00e0 dire 10","title":"Exercice 1"},{"location":"SNT/correction_DS4/#exercice-2","text":"La loi d'Ohm traduit l\u2019\u00e9chauffement d\u2019un conducteur au passage du courant. Elle se d\u00e9duit de l\u2019expression : \\[ R = \\dfrac{U}{I} \\begin{cases} U (V): & : tension ;\\\\ I (A) & : intensit\u00e9 ;\\\\ R (\\Omega) & : r\u00e9sistance. \\\\ \\end{cases} \\] \u00c9crire un programme en Python qui : demande \u00e0 l\u2019utilisateur l\u2019intensit\u00e9 puis la tension ; qui calcule la r\u00e9sistance ; qui affiche cette r\u00e9sistance avec la phrase \u201cLa r\u00e9sistance vaut : R\u201d avec R la r\u00e9sistance calcul\u00e9e par le programme. qui affiche si la r\u00e9sistance est n\u00e9gative : \"Vous vous \u00eates tromp\u00e9s en rentrant une donn\u00e9e\". Exercice 2 1 2 3 4 5 6 7 8 9 intensite = float ( input ( \"Intensit\u00e9 (A) : \" )) tension = float ( input ( \"Tension (V) : \" )) resistance = tension / intensite if resistance > 0 : print ( \"La r\u00e9sistance vaut R = \" , r\u00e9sistance , \"Ohms\" ) # A la place de Ohm, on aurait pu mettre chr(937) # ce qui nous donne Omega majuscule else : print ( \"Vous vous \u00eates tromp\u00e9s en rentrant une donn\u00e9e\" )","title":"Exercice 2 :"},{"location":"SNT/correction_DS4/#exercice-3","text":"Le programme Python suivant est sens\u00e9 r\u00e9aliser l'affichage de la table des 9 de 0x9 = 0 jusqu'\u00e0 10x9 = 90. Recopier le programme ci dessous et apporter les corrections afin qu'il fonctionne. R\u00e9aliser le programme pr\u00e9c\u00e9dent \u00e0 l'aide d'une boucle \\mintinline{python}{while}. Exercice 3 1 2 for i in range ( 12 ); print ( i , \"*9\" , i * 12 ) Correction : 1 Exercice 3 Correction 2 3 for i in range ( 11 ): print ( i , \"*9\" , i * 9 ) 2 Exercice 3 Correction 2 3 4 5 i = 0 while i < 11 : print ( i , \"*9\" , i * 9 ) i += 1 \\Exo{ } \\begin{center} \\includegraphics[width=14cm]{img/image1.png} \\end{center} Les consignes sont les suivantes : \\begin{center} \\includegraphics[width=9cm]{img/image2.png} \\end{center} \u00c9crire le script vous permettant d'accomplir cette mission. \\Exo{ Afin de pouvoir mieux combattre les diff\u00e9rentes \u00e9pid\u00e9mies, parfois tr\u00e8s graves, qui se d\u00e9veloppent r\u00e9guli\u00e8rement dans la r\u00e9gion, le d\u00e9partement de m\u00e9decine de l'universit\u00e9 a lanc\u00e9 une grande \u00e9tude. En particulier, les chercheurs s'int\u00e9ressent \u00e0 la vitesse de propagation d'une \u00e9pid\u00e9mie et donc \u00e0 la vitesse \u00e0 laquelle des mesures sanitaires doivent \u00eatres mises en place. Ce que doit faire votre programme : Votre programme doit d'abord lire un entier, la population totale de la ville. Sachant qu'une personne \u00e9tait malade au jour 1 et que chaque malade contamine deux nouvelles personnes le jour suivant (et chacun des jours qui suivent), vous devez calculer \u00e0 partir de quel jour toute la population de la ville sera malade. } \\dg{Exemple 1:}\\ entr\u00e9e : 3\\ sortie : 2 \\dg{Exemple 2 :}\\ entr\u00e9e : 10\\ sortie : 4 \\dg{Commentaires :} On a 1 malade le premier jour, donc 2 nouveaux malades le second jour, soit un total de 3 malades. On a donc 6 nouveaux malades au troisi\u00e8me jour, soit un total de 9 malades. On a donc 18 nouveaux malades au quatri\u00e8me jour, soit\u2026","title":"Exercice 3"},{"location":"SNT/html/","text":"Cr\u00e9er ses propres pages web # Introduction # Nous consultons tous les jours des sites Web. Pour les sites les plus connus, on peut s\u2019apercevoir que l\u2019affichage et les fonctionnalit\u00e9s sont identiques quel que soit le navigateur utilis\u00e9 (ce n\u2019est pas toujours le cas pour des sites moins connus) \u00e0 quelques d\u00e9tails pr\u00e8s. Les pages Web sont cr\u00e9\u00e9es \u00e0 l\u2019aide de langages informatiques. Le respect des r\u00e8gles d\u00e9finies pour ces langages permet de cr\u00e9er des pages WEB qui pourront \u00eatre lues correctement quel que soit le navigateur. Pour cr\u00e9er la page Web visualis\u00e9e, ont \u00e9t\u00e9 utilis\u00e9s les langages HTML et CSS. Le langage HTML a \u00e9t\u00e9 cr\u00e9\u00e9 en 1991 par Tim Berners-Lee. Ce dernier a aussi cr\u00e9\u00e9 le World Wide Web Consortium (W3C) qui d\u00e9finit les nouvelles versions et les standards des langages li\u00e9s au Web. Cr\u00e9er ses propres pages web # Pour cr\u00e9er des pages Web, on peut utiliser : Des logiciels WYSIWYG (What You See Is What You Get) ; ce sont des programmes (Mozilla Composer, Dreamweaver et m\u00eame les traitements de texte) qui permettent de cr\u00e9er des sites sans apprendre de langage particulier. Les pages web sont g\u00e9n\u00e9r\u00e9s automatiquement. Permettant une cr\u00e9ation plus rapide au d\u00e9marrage, ils pr\u00e9sentent cependant l\u2019inconv\u00e9nient de modifications plus laborieuses (le codage n\u2019est pas optimis\u00e9, rendant toute modification probl\u00e9matique) Des \u00e9diteurs de texte, ce sont des programmes d\u00e9di\u00e9s \u00e0 l'\u00e9criture de code (pas seulement HTML ou CSS) plus ou moins \u00e9volu\u00e9s (les fonctionnalit\u00e9s de certains facilitent l'\u00e9criture du code). Nous utiliserons l'\u00e9diteur de texte Visual Studio Code . Pour t\u00e9l\u00e9charger ce logiciel, il faut se rendre \u00e0 l\u2019adresse suivante : vscode Ma premi\u00e8re page # Dans vos documents, cr\u00e9er un dossier nomm\u00e9 Site dans votre dossier SNT. Puis dans ce dossier, cr\u00e9er \u00e0 nouveau un dossier nomm\u00e9 img pour les images. Ouvrir VisualStudioCode et cr\u00e9er un nouveau document. Pour cela, il faut cliquer sur File dans la barre d\u2019outil puis NewFile . Enregistrer votre fichier, dans le dossier Site, sous le nom de : index.html Bien v\u00e9rifier, que l\u2019extension de votre fichier est .html et non .txt Puis saisir le code suivant (ou taper ! puis entr\u00e9e). <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Document </ title > </ head > < body > </ body > </ html > Remarque : observer la coloration syntaxique. Sous Visual Studio Code, les balises apparaissent d'une couleur diff\u00e9rentes que les commentaires en vert et le texte visible par l\u2019utilisateur. Si vous ne voyez pas cette coloration syntaxique, appeler le professeur. Sur votre page, cliquer sur le bouton droit de votre souris puis cliquer sur Ouvrir avec votre navigateur. Le langage HTML # Le langage HTML (HyperText Markup Language) permet de concevoir des documents Web. Ce langage de programmation descriptif est compos\u00e9 d'\u00e9l\u00e9ments. Un \u00e9l\u00e9ment HTML est compos\u00e9 d'une balise ouvrante ( < )et d'une balise fermante ( > ) afin de d\u00e9limiter la zone de texte concern\u00e9e par l'\u00e9l\u00e9ment en question. Il y a \u00e9galement la balise <!DOCTYPE html> . Le doctype (pour Document Type Declaration) permet de renseigner le navigateur Web sur la version de HTML utilis\u00e9e par le document Web. Le doctype utilis\u00e9 dans l'exemple fait r\u00e9f\u00e9rence \u00e0 HTML5. Un fichier HTML est compos\u00e9 de deux parties : <head> et </head> : les \u00e9l\u00e9ments contenus dans l'ent\u00eate n'ont pas vocation \u00e0 \u00eatre affich\u00e9s sauf l'\u00e9l\u00e9ment title dont le contenu appara\u00eet dans l'onglet du navigateur Web. Les informations contenues dans l'ent\u00eate renseignent sur l'auteur et le contenu du document. <body> et </body> : l'ensemble des informations contenues entre ces balises sont affich\u00e9es dans la fen\u00eatre du navigateur Web. Structuration des documents # Entre les balises <body> et </body> , on peut placer : des titre de section : les balises h1, h3, h3, h4, h5, h6 permettent de d\u00e9finir des titres de sections, sous-sections, etc jusqu\u2019\u00e0 six niveaux. des paragraphe : on encadre chaque paragraphe entre balise <p> et </p> Exemple : See the Pen Untitled by eric ( @ga78523 ) on CodePen . Balises de texte : Balises R\u00f4le <b > texte </b > texte est mis en gras <i > texte </i > texte est mis en italique <u > texte </u > texte est soulign\u00e9 <sub > texte </sub > texte est mis en indice <sup > texte </sup > texte est mis en exposant <code > texte </code > texte est du code <mark > texte </mark> texte est surlign\u00e9 Les images # On peut ins\u00e9rer une image (au format png, jpeg ou gif) qui se trouve dans le dossier img du dossier Site gr\u00e2ce \u00e0 la balise <img> . Donc pour ins\u00e9rer une image (smiley.gif pr\u00e9alablement enregistr\u00e9e dans le dossier img ), on peut proc\u00e9der de la mani\u00e8re suivante : < img src = \"img/smiley.gif\" alt = \"Smiley face\" width = \"42\" height = \"42\" > D\u00e9taillons cette ligne : src = \"img/smiley.gif\" donne le nom de la photo \u00e0 afficher (smiley.gif). Cet attribut est obligatoire. alt = \"Smiley face\" sp\u00e9cifie un texte alternatif si l\u2019image ne s\u2019affiche pas (Smiley face). Cet attribut est recommand\u00e9. width=\"42\" height=\"42\" sp\u00e9cifie la largeur (42 pixels) et la hauteur (42 pixels). Ces attributs sont facultatifs. Remarque : Pour centrer l'image, il est possible d'encadrer la balise <img> par les balises <p align=center> et </p> comme ci-dessous. See the Pen FirstPage by eric ( @ga78523 ) on CodePen . Les liens # HTML (Hyper Text Markup Language) est un langage hypertexte, cela signifie qu'il vous permet en cliquant sur un mot, g\u00e9n\u00e9ralement soulign\u00e9 (ou une image) de vous rendre: sur un autre endroit de la page. sur un autre fichier html situ\u00e9 sur votre ordinateur. sur un autre ordinateur en r\u00e9seau, y compris sur le Web. Pour \u00e9crire un lien sur une page web, il faut adopter la syntaxe suivante : < a href = \"lien\" > texte < \\a> avec : texte : texte qui appara\u00eet en bleu soulign\u00e9 dans la page lien : adresse d\u2019un site (Exemple : https://fr.wikipedia.org/wiki/Informatique) , d\u2019une autre page html situ\u00e9e dans notre dossier Site (exemple : pageWeb3.html \u00e0 cr\u00e9er ult\u00e9rieurement) ou bien un mot dans la page web concern\u00e9e. Pour en savoir plus sur les liens, consulter la page suivante : MDN Les listes # On peut organiser le texte en liste. Une liste \u00e9num\u00e9r\u00e9e est contenue dans un \u00e9l\u00e9ment ol (abr\u00e9viation de l\u2019anglais ordered list). Une liste non-\u00e9num\u00e9r\u00e9e est contenue dans un \u00e9l\u00e9ment ul (abr\u00e9viation de l\u2019anglais unordered list). Quelque soit le type de liste, chaque entr\u00e9e de liste est contenue dans un \u00e9l\u00e9ment li . Les listes peuvent \u00e9videmment \u00eatre imbriqu\u00e9es. See the Pen liste by eric ( @ga78523 ) on CodePen . Pour en savoir plus sur les listes, visiter le MDN pour les listes ordonn\u00e9es et pour les listes non-ordonn\u00e9es Le CSS (Cascading Style Sheets) # Introduction # Si nous voulons donner une unit\u00e9 au site, il est n\u00e9cessaire, pour chaque page, de d\u00e9finir par exemple une police bleue. Or, nous pouvons aussi utiliser une page de style \u00e9crite dans un autre langage: le CSS. Le Langage CSS, apparu en 1996, est compl\u00e9mentaire du langage HTML et permet de g\u00e9rer la mise en forme (l'apparence) des diff\u00e9rentes pages d\u2019un site Web (couleur du texte, police, taille du texte, bordures, fond...) Ainsi, dans l\u2019exemple pr\u00e9c\u00e9dent, il suffit de cr\u00e9er une page style.css (avec VisualStudioCode par exemple) dans laquelle il \u00e9crit que les paragraphes sont en bleu. Toutes les pages html cr\u00e9\u00e9es appelleront style.css dans l\u2019en-t\u00eate (head) de la page gr\u00e2ce \u00e0 l\u2019instruction : < link href = \"style.css\" rel = \"stylesheet\" type = \"text /css\" > Exemple de fichier CSS # body { background-color : gainsboro ; } p { color : blue ; text-align : justify ; } Quelques explications # Ici, on indique que l\u2019\u00e9l\u00e9ment p (paragraphe) contient du texte align\u00e9 des deux c\u00f4t\u00e9s (justifi\u00e9) et de couleur bleue. On indique \u00e9galement que l\u2019\u00e9l\u00e9ment body (corps de la page HTML) aura un fond d\u2019\u00e9cran couleur gainsboro c\u2019est-\u00e0-dire bleu tr\u00e8s clair. En CSS: Body et p sont nomm\u00e9s selecteur color, text-align, background-color sont nomm\u00e9s propri\u00e9t\u00e9s CSS gainsboro, blue, justify sont nomm\u00e9s valeurs Pour en savoir plus # MDN Cours","title":"cours_web"},{"location":"SNT/html/#creer-ses-propres-pages-web","text":"","title":"Cr\u00e9er ses propres pages web"},{"location":"SNT/html/#introduction","text":"Nous consultons tous les jours des sites Web. Pour les sites les plus connus, on peut s\u2019apercevoir que l\u2019affichage et les fonctionnalit\u00e9s sont identiques quel que soit le navigateur utilis\u00e9 (ce n\u2019est pas toujours le cas pour des sites moins connus) \u00e0 quelques d\u00e9tails pr\u00e8s. Les pages Web sont cr\u00e9\u00e9es \u00e0 l\u2019aide de langages informatiques. Le respect des r\u00e8gles d\u00e9finies pour ces langages permet de cr\u00e9er des pages WEB qui pourront \u00eatre lues correctement quel que soit le navigateur. Pour cr\u00e9er la page Web visualis\u00e9e, ont \u00e9t\u00e9 utilis\u00e9s les langages HTML et CSS. Le langage HTML a \u00e9t\u00e9 cr\u00e9\u00e9 en 1991 par Tim Berners-Lee. Ce dernier a aussi cr\u00e9\u00e9 le World Wide Web Consortium (W3C) qui d\u00e9finit les nouvelles versions et les standards des langages li\u00e9s au Web.","title":"Introduction"},{"location":"SNT/html/#creer-ses-propres-pages-web_1","text":"Pour cr\u00e9er des pages Web, on peut utiliser : Des logiciels WYSIWYG (What You See Is What You Get) ; ce sont des programmes (Mozilla Composer, Dreamweaver et m\u00eame les traitements de texte) qui permettent de cr\u00e9er des sites sans apprendre de langage particulier. Les pages web sont g\u00e9n\u00e9r\u00e9s automatiquement. Permettant une cr\u00e9ation plus rapide au d\u00e9marrage, ils pr\u00e9sentent cependant l\u2019inconv\u00e9nient de modifications plus laborieuses (le codage n\u2019est pas optimis\u00e9, rendant toute modification probl\u00e9matique) Des \u00e9diteurs de texte, ce sont des programmes d\u00e9di\u00e9s \u00e0 l'\u00e9criture de code (pas seulement HTML ou CSS) plus ou moins \u00e9volu\u00e9s (les fonctionnalit\u00e9s de certains facilitent l'\u00e9criture du code). Nous utiliserons l'\u00e9diteur de texte Visual Studio Code . Pour t\u00e9l\u00e9charger ce logiciel, il faut se rendre \u00e0 l\u2019adresse suivante : vscode","title":"Cr\u00e9er ses propres pages web"},{"location":"SNT/html/#ma-premiere-page","text":"Dans vos documents, cr\u00e9er un dossier nomm\u00e9 Site dans votre dossier SNT. Puis dans ce dossier, cr\u00e9er \u00e0 nouveau un dossier nomm\u00e9 img pour les images. Ouvrir VisualStudioCode et cr\u00e9er un nouveau document. Pour cela, il faut cliquer sur File dans la barre d\u2019outil puis NewFile . Enregistrer votre fichier, dans le dossier Site, sous le nom de : index.html Bien v\u00e9rifier, que l\u2019extension de votre fichier est .html et non .txt Puis saisir le code suivant (ou taper ! puis entr\u00e9e). <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Document </ title > </ head > < body > </ body > </ html > Remarque : observer la coloration syntaxique. Sous Visual Studio Code, les balises apparaissent d'une couleur diff\u00e9rentes que les commentaires en vert et le texte visible par l\u2019utilisateur. Si vous ne voyez pas cette coloration syntaxique, appeler le professeur. Sur votre page, cliquer sur le bouton droit de votre souris puis cliquer sur Ouvrir avec votre navigateur.","title":"Ma premi\u00e8re page"},{"location":"SNT/html/#le-langage-html","text":"Le langage HTML (HyperText Markup Language) permet de concevoir des documents Web. Ce langage de programmation descriptif est compos\u00e9 d'\u00e9l\u00e9ments. Un \u00e9l\u00e9ment HTML est compos\u00e9 d'une balise ouvrante ( < )et d'une balise fermante ( > ) afin de d\u00e9limiter la zone de texte concern\u00e9e par l'\u00e9l\u00e9ment en question. Il y a \u00e9galement la balise <!DOCTYPE html> . Le doctype (pour Document Type Declaration) permet de renseigner le navigateur Web sur la version de HTML utilis\u00e9e par le document Web. Le doctype utilis\u00e9 dans l'exemple fait r\u00e9f\u00e9rence \u00e0 HTML5. Un fichier HTML est compos\u00e9 de deux parties : <head> et </head> : les \u00e9l\u00e9ments contenus dans l'ent\u00eate n'ont pas vocation \u00e0 \u00eatre affich\u00e9s sauf l'\u00e9l\u00e9ment title dont le contenu appara\u00eet dans l'onglet du navigateur Web. Les informations contenues dans l'ent\u00eate renseignent sur l'auteur et le contenu du document. <body> et </body> : l'ensemble des informations contenues entre ces balises sont affich\u00e9es dans la fen\u00eatre du navigateur Web.","title":"Le langage HTML"},{"location":"SNT/html/#structuration-des-documents","text":"Entre les balises <body> et </body> , on peut placer : des titre de section : les balises h1, h3, h3, h4, h5, h6 permettent de d\u00e9finir des titres de sections, sous-sections, etc jusqu\u2019\u00e0 six niveaux. des paragraphe : on encadre chaque paragraphe entre balise <p> et </p> Exemple : See the Pen Untitled by eric ( @ga78523 ) on CodePen . Balises de texte : Balises R\u00f4le <b > texte </b > texte est mis en gras <i > texte </i > texte est mis en italique <u > texte </u > texte est soulign\u00e9 <sub > texte </sub > texte est mis en indice <sup > texte </sup > texte est mis en exposant <code > texte </code > texte est du code <mark > texte </mark> texte est surlign\u00e9","title":"Structuration des documents"},{"location":"SNT/html/#les-images","text":"On peut ins\u00e9rer une image (au format png, jpeg ou gif) qui se trouve dans le dossier img du dossier Site gr\u00e2ce \u00e0 la balise <img> . Donc pour ins\u00e9rer une image (smiley.gif pr\u00e9alablement enregistr\u00e9e dans le dossier img ), on peut proc\u00e9der de la mani\u00e8re suivante : < img src = \"img/smiley.gif\" alt = \"Smiley face\" width = \"42\" height = \"42\" > D\u00e9taillons cette ligne : src = \"img/smiley.gif\" donne le nom de la photo \u00e0 afficher (smiley.gif). Cet attribut est obligatoire. alt = \"Smiley face\" sp\u00e9cifie un texte alternatif si l\u2019image ne s\u2019affiche pas (Smiley face). Cet attribut est recommand\u00e9. width=\"42\" height=\"42\" sp\u00e9cifie la largeur (42 pixels) et la hauteur (42 pixels). Ces attributs sont facultatifs. Remarque : Pour centrer l'image, il est possible d'encadrer la balise <img> par les balises <p align=center> et </p> comme ci-dessous. See the Pen FirstPage by eric ( @ga78523 ) on CodePen .","title":"Les images"},{"location":"SNT/html/#les-liens","text":"HTML (Hyper Text Markup Language) est un langage hypertexte, cela signifie qu'il vous permet en cliquant sur un mot, g\u00e9n\u00e9ralement soulign\u00e9 (ou une image) de vous rendre: sur un autre endroit de la page. sur un autre fichier html situ\u00e9 sur votre ordinateur. sur un autre ordinateur en r\u00e9seau, y compris sur le Web. Pour \u00e9crire un lien sur une page web, il faut adopter la syntaxe suivante : < a href = \"lien\" > texte < \\a> avec : texte : texte qui appara\u00eet en bleu soulign\u00e9 dans la page lien : adresse d\u2019un site (Exemple : https://fr.wikipedia.org/wiki/Informatique) , d\u2019une autre page html situ\u00e9e dans notre dossier Site (exemple : pageWeb3.html \u00e0 cr\u00e9er ult\u00e9rieurement) ou bien un mot dans la page web concern\u00e9e. Pour en savoir plus sur les liens, consulter la page suivante : MDN","title":"Les liens"},{"location":"SNT/html/#les-listes","text":"On peut organiser le texte en liste. Une liste \u00e9num\u00e9r\u00e9e est contenue dans un \u00e9l\u00e9ment ol (abr\u00e9viation de l\u2019anglais ordered list). Une liste non-\u00e9num\u00e9r\u00e9e est contenue dans un \u00e9l\u00e9ment ul (abr\u00e9viation de l\u2019anglais unordered list). Quelque soit le type de liste, chaque entr\u00e9e de liste est contenue dans un \u00e9l\u00e9ment li . Les listes peuvent \u00e9videmment \u00eatre imbriqu\u00e9es. See the Pen liste by eric ( @ga78523 ) on CodePen . Pour en savoir plus sur les listes, visiter le MDN pour les listes ordonn\u00e9es et pour les listes non-ordonn\u00e9es","title":"Les listes"},{"location":"SNT/html/#le-css-cascading-style-sheets","text":"","title":"Le CSS (Cascading Style Sheets)"},{"location":"SNT/html/#introduction_1","text":"Si nous voulons donner une unit\u00e9 au site, il est n\u00e9cessaire, pour chaque page, de d\u00e9finir par exemple une police bleue. Or, nous pouvons aussi utiliser une page de style \u00e9crite dans un autre langage: le CSS. Le Langage CSS, apparu en 1996, est compl\u00e9mentaire du langage HTML et permet de g\u00e9rer la mise en forme (l'apparence) des diff\u00e9rentes pages d\u2019un site Web (couleur du texte, police, taille du texte, bordures, fond...) Ainsi, dans l\u2019exemple pr\u00e9c\u00e9dent, il suffit de cr\u00e9er une page style.css (avec VisualStudioCode par exemple) dans laquelle il \u00e9crit que les paragraphes sont en bleu. Toutes les pages html cr\u00e9\u00e9es appelleront style.css dans l\u2019en-t\u00eate (head) de la page gr\u00e2ce \u00e0 l\u2019instruction : < link href = \"style.css\" rel = \"stylesheet\" type = \"text /css\" >","title":"Introduction"},{"location":"SNT/html/#exemple-de-fichier-css","text":"body { background-color : gainsboro ; } p { color : blue ; text-align : justify ; }","title":"Exemple de fichier CSS"},{"location":"SNT/html/#quelques-explications","text":"Ici, on indique que l\u2019\u00e9l\u00e9ment p (paragraphe) contient du texte align\u00e9 des deux c\u00f4t\u00e9s (justifi\u00e9) et de couleur bleue. On indique \u00e9galement que l\u2019\u00e9l\u00e9ment body (corps de la page HTML) aura un fond d\u2019\u00e9cran couleur gainsboro c\u2019est-\u00e0-dire bleu tr\u00e8s clair. En CSS: Body et p sont nomm\u00e9s selecteur color, text-align, background-color sont nomm\u00e9s propri\u00e9t\u00e9s CSS gainsboro, blue, justify sont nomm\u00e9s valeurs","title":"Quelques explications"},{"location":"SNT/html/#pour-en-savoir-plus","text":"MDN Cours","title":"Pour en savoir plus"},{"location":"SNT/image/","text":"Activit\u00e9 : traitement de l'image # Pr\u00e9alable # Sur l'ENT, dans la rubrique Ressources , aller sur Capytale puis Acc\u00e9dez \u00e0 vos activit\u00e9s puis dans Acc\u00e9der \u00e0 une activit\u00e9 (voir ci-dessous), rentrer le code donn\u00e9. vous avez ouvert un fichier qui comporte deux images (non visibles ici). Pour v\u00e9rifier qu'il fonctionne, taper le code suivant dans une cellule: 1 2 3 4 from PIL import Image mon_image = Image . open ( \"buse.jpg\" ) mon_image . show () Apr\u00e8s avoir importer la biblioth\u00e8que PIL (pour Python Imaging Library ),ce code ouvre la photo buse.jpg et la place en m\u00e9moire sous le nom de mon_image . Puis on demande au programme de nous l'afficher. Remarque : Pour en conna\u00eetre plus sur cette biblioth\u00e8que de traitement d\u2019image, vous pouvez consulter cette page . Exercice 1.1 : Ouvrir l'image rose.jpg .Nommer la variable rose puis l'afficher. Conna\u00eetre la largeur et la longueur en pixel d'une image # On peut conna\u00eetre la largeur et la longueur en pixel d'une image \u00e0 l'aide des instructions with et height . Exemple : 1 2 3 4 5 6 7 from PIL import Image mon_image = Image . open ( \"buse.jpg\" ) largeur_image = mon_image . width longueur_image = mon_image . height print ( \"La largeur vaut :\" , largeur_image , \" px et la longueur vaut :\" , longueur_image , \" px\" ) mon_image . show () Exercice 2.1 : R\u00e9aliser un programme qui d\u00e9termine la largeur et la longueur de l'image rose.jpg et qui l'affiche mais qui n'affiche pas l'image. Obtenir les composantes RVB d'un pixel # Exercice 3.1 : Ex\u00e9cuter le code suivant (Copier/coller) : A quoi sert la fonction getpixel(x,y) ? A quoi correspondent les trois nombres du triplet r,v,b ? Pouvait-on pr\u00e9voir en regardant l'image buse.jpg , que la valeur de b serait la plus \u00e9lev\u00e9 ? R\u00e9aliser un programme qui affiche la couleur (composantes RVB) du pixel de coordonn\u00e9es x = 300 et y= 80. 1 2 3 4 5 from PIL import Image mon_image = Image . open ( \"buse.jpg\" ) #Cette image a une dimension de 400\u00d7200 pixels. Le pixel (0,0) est en haut \u00e0 gauche. r , v , b = mon_image . getpixel (( 10 , 10 )) print ( r , v , b ) Parcourir une zone # La fonction putpixel # Exercice 4.1 : Ex\u00e9cuter le code suivant. A quoi sert la fonction putpixel((x,y),(R,V,B)) ? Que va faire le code suivant ? 1 2 3 4 5 from PIL import Image mon_image = Image . open ( \"buse.jpg\" ) #Cette image a une dimension de 400\u00d7200 pixels for x in range ( 400 ): mon_image . putpixel ( ( x , 20 ),( 255 , 255 , 255 )) mon_image . show () Dessiner avec PIL # Le code suivant r\u00e9alise le drapeau fran\u00e7ais. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 from PIL import Image # cr\u00e9ation d'une image de 400 px de large et de 200 px de haut mon_image = Image . new ( 'RGB' ,( 400 , 200 )) # zone bleue for x in range ( 133 ): # on balaie x de 0 \u00e0 132 for y in range ( 200 ): # on balaie y de 0 \u00e0 199 mon_image . putpixel ( ( x , y ),( 0 , 0 , 255 )) # On renmplit les points de coordonn\u00e9es (x, y) de bleu #zone blanche for x in range ( 133 , 266 ): # on balaie x de 133 \u00e0 265 for y in range ( 200 ): # on balaie y de 0 \u00e0 199 mon_image . putpixel ( ( x , y ),( 255 , 255 , 255 )) # zone rouge for x in range ( 266 , 400 ): # on balaie x de 266 \u00e0 400 for y in range ( 200 ): # on balaie y de 0 \u00e0 199 mon_image . putpixel ( ( x , y ),( 255 , 0 , 0 )) # affichage du drapeau mon_image . show () Exercice 4.2 : R\u00e9aliser un drapeau italien. Exercice 4.3 : R\u00e9aliser un drapeau Colombien. Exercice 4.4 : R\u00e9aliser un drapeau suisse Traitement de l'image # L'image en niveau de gris # Ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 from PIL import Image mon_image1 = Image . open ( \"buse.jpg\" ) #Cette image a une dimension de 400\u00d7200 pixels mon_image2 = Image . new ( 'RGB' ,( 400 , 200 )) #Cr\u00e9e une seconde a une dimension de 400\u00d7200 pixels for x in range ( 400 ): for y in range ( 200 ): r , v , b = mon_image1 . getpixel (( x , y )) #r,v,b prennent les valeurs des composante RVB du pixel (x,y) de Image1 g = ( r + v + b ) // 3 mon_image2 . putpixel ( ( x , y ),( g , g , g )) #On fixe la couleur du pixel (x,y) de Image2 mon_image2 . save ( \"Buse en Gris.jpg\" ) #On enregistre cette image mon_image2 . show () Remarque : on utilise la division enti\u00e8re avec l'op\u00e9rateur // (Par exemple : 7 //2 renvoie 3) pour calculer les couleurs des pixels de la nouvelle image. Conservation d'une composante # 1 2 3 4 5 6 7 8 9 10 from PIL import Image mon_image1 = Image . open ( \"buse.jpg\" ) #Cette image a une dimension de 400\u00d7200 pixels mon_image3 = Image . new ( 'RGB' ,( 400 , 200 )) #Cr\u00e9e une seconde a une dimension de 400\u00d7200 pixels for x in range ( 400 ): for y in range ( 200 ): r , v , b = mon_image1 . getpixel (( x , y )) #r,v,b prennent les valeurs des composante RVB du pixel (x,y) de Image1 mon_image3 . putpixel ( ( x , y ),( r , 0 , 0 )) #On fixe la couleur du pixel (x,y) de Image2 mon_image3 . save ( \"Buse en Rouge.jpg\" ) #On enregistre cette image mon_image3 . show () Exercice 5.1 : R\u00e9aliser un programme qui effectue la conservation de la composante verte de l'image rose.jpg . Seuillage : # L\u2019id\u00e9e est de modifier le programme pr\u00e9c\u00e9dent pour que si la moyenne de ses trois composantes est sup\u00e9rieure \u00e0 90, le pixel correspondant dans l\u2019image devient blanc, et si cette moyenne est inf\u00e9rieure \u00e0 90, le pixel devient noir. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from PIL import Image mon_image1 = Image . open ( \"buse.jpg\" ) #Cette image a une dimension de 400\u00d7200 pixels mon_image4 = Image . new ( 'RGB' ,( 400 , 200 )) #Cr\u00e9e une seconde a une dimension de 400\u00d7200 pixels for x in range ( 400 ): for y in range ( 200 ): r , v , b = mon_image1 . getpixel (( x , y )) #r,v,b prennent les valeurs des composante RVB du pixel (x,y) de Image1 m = ( r + v + b ) // 3 if m > 90 : mon_image4 . putpixel ( ( x , y ),( 255 , 255 , 255 )) #On fixe la couleur du pixel (x,y) de Image2 else : mon_image4 . putpixel ( ( x , y ),( 0 , 0 , 0 )) #On fixe la couleur du pixel (x,y) de Image2 mon_image4 . save ( \"Buse Seuill\u00e9e.jpg\" ) #On enregistre cette image mon_image4 . show () Remarque : On peut \u00e9videmment changer la valeur du seuil pour obtenir d\u2019autres effets. Exercice 5.2 : R\u00e9aliser un programme qui effectue le sueillage de la rose avec un seuil \u00e9gal \u00e0 125 rose.jpg . Changement de dominante # On utilise maintenant la photo rose.jpg . On souhaite changer les couleurs des roses dont la dominante est rouge (r > v et r > b). On peut par exemple choisir : si un pixel a une dominante rouge, on divise par deux sa composante rouge. 1 2 3 4 5 6 7 8 9 10 11 12 13 from PIL import Image mon_image1 = Image . open ( \"rose.jpg\" ) #Cette image a une dimension de 400\u00d7300 pixels mon_image5 = Image . new ( 'RGB' ,( 400 , 300 )) for x in range ( 400 ): for y in range ( 300 ): r , v , b = mon_image1 . getpixel (( x , y )) #r,v,b prennent les valeurs des composante RVB du pixel (x,y) de Image1 if r > v and r > b : mon_image5 . putpixel ( ( x , y ),( r // 2 , v , b )) #On fixe la couleur du pixel (x,y) de Image2 else : mon_image5 . putpixel ( ( x , y ),( r , v , b )) #On fixe la couleur du pixel (x,y) de Image2 mon_image5 . save ( \"Rose sans Dominante Rouge.jpg\" ) #On enregistre cette image mon_image5 . show () Exercices # Exercice 6.1 : sym\u00e9trie A partir de l'image iguane.jpg disponible dans l'activit\u00e9. R\u00e9aliser le programme qui r\u00e9alise la sym\u00e9trie suivante. Exercice 6.2 : sym\u00e9trie A partir de l'image iguane.jpg disponible dans l'activit\u00e9. R\u00e9aliser le programme qui r\u00e9alise le n\u00e9gatif de cette image. Remarque : Obtenir le n\u00e9gatif d'une image est tr\u00e8s simple : toutes les composantes x de tous les pixels de l'image sont remplac\u00e9es par 255-x.","title":"traitement de l'image"},{"location":"SNT/image/#activite-traitement-de-limage","text":"","title":" Activit\u00e9 : traitement de l'image "},{"location":"SNT/image/#prealable","text":"Sur l'ENT, dans la rubrique Ressources , aller sur Capytale puis Acc\u00e9dez \u00e0 vos activit\u00e9s puis dans Acc\u00e9der \u00e0 une activit\u00e9 (voir ci-dessous), rentrer le code donn\u00e9. vous avez ouvert un fichier qui comporte deux images (non visibles ici). Pour v\u00e9rifier qu'il fonctionne, taper le code suivant dans une cellule: 1 2 3 4 from PIL import Image mon_image = Image . open ( \"buse.jpg\" ) mon_image . show () Apr\u00e8s avoir importer la biblioth\u00e8que PIL (pour Python Imaging Library ),ce code ouvre la photo buse.jpg et la place en m\u00e9moire sous le nom de mon_image . Puis on demande au programme de nous l'afficher. Remarque : Pour en conna\u00eetre plus sur cette biblioth\u00e8que de traitement d\u2019image, vous pouvez consulter cette page . Exercice 1.1 : Ouvrir l'image rose.jpg .Nommer la variable rose puis l'afficher.","title":"Pr\u00e9alable"},{"location":"SNT/image/#connaitre-la-largeur-et-la-longueur-en-pixel-dune-image","text":"On peut conna\u00eetre la largeur et la longueur en pixel d'une image \u00e0 l'aide des instructions with et height . Exemple : 1 2 3 4 5 6 7 from PIL import Image mon_image = Image . open ( \"buse.jpg\" ) largeur_image = mon_image . width longueur_image = mon_image . height print ( \"La largeur vaut :\" , largeur_image , \" px et la longueur vaut :\" , longueur_image , \" px\" ) mon_image . show () Exercice 2.1 : R\u00e9aliser un programme qui d\u00e9termine la largeur et la longueur de l'image rose.jpg et qui l'affiche mais qui n'affiche pas l'image.","title":"Conna\u00eetre la largeur et la longueur en pixel d'une image"},{"location":"SNT/image/#obtenir-les-composantes-rvb-dun-pixel","text":"Exercice 3.1 : Ex\u00e9cuter le code suivant (Copier/coller) : A quoi sert la fonction getpixel(x,y) ? A quoi correspondent les trois nombres du triplet r,v,b ? Pouvait-on pr\u00e9voir en regardant l'image buse.jpg , que la valeur de b serait la plus \u00e9lev\u00e9 ? R\u00e9aliser un programme qui affiche la couleur (composantes RVB) du pixel de coordonn\u00e9es x = 300 et y= 80. 1 2 3 4 5 from PIL import Image mon_image = Image . open ( \"buse.jpg\" ) #Cette image a une dimension de 400\u00d7200 pixels. Le pixel (0,0) est en haut \u00e0 gauche. r , v , b = mon_image . getpixel (( 10 , 10 )) print ( r , v , b )","title":"Obtenir les composantes RVB d'un pixel"},{"location":"SNT/image/#parcourir-une-zone","text":"","title":"Parcourir une zone"},{"location":"SNT/image/#la-fonction-putpixel","text":"Exercice 4.1 : Ex\u00e9cuter le code suivant. A quoi sert la fonction putpixel((x,y),(R,V,B)) ? Que va faire le code suivant ? 1 2 3 4 5 from PIL import Image mon_image = Image . open ( \"buse.jpg\" ) #Cette image a une dimension de 400\u00d7200 pixels for x in range ( 400 ): mon_image . putpixel ( ( x , 20 ),( 255 , 255 , 255 )) mon_image . show ()","title":"La fonction putpixel"},{"location":"SNT/image/#dessiner-avec-pil","text":"Le code suivant r\u00e9alise le drapeau fran\u00e7ais. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 from PIL import Image # cr\u00e9ation d'une image de 400 px de large et de 200 px de haut mon_image = Image . new ( 'RGB' ,( 400 , 200 )) # zone bleue for x in range ( 133 ): # on balaie x de 0 \u00e0 132 for y in range ( 200 ): # on balaie y de 0 \u00e0 199 mon_image . putpixel ( ( x , y ),( 0 , 0 , 255 )) # On renmplit les points de coordonn\u00e9es (x, y) de bleu #zone blanche for x in range ( 133 , 266 ): # on balaie x de 133 \u00e0 265 for y in range ( 200 ): # on balaie y de 0 \u00e0 199 mon_image . putpixel ( ( x , y ),( 255 , 255 , 255 )) # zone rouge for x in range ( 266 , 400 ): # on balaie x de 266 \u00e0 400 for y in range ( 200 ): # on balaie y de 0 \u00e0 199 mon_image . putpixel ( ( x , y ),( 255 , 0 , 0 )) # affichage du drapeau mon_image . show () Exercice 4.2 : R\u00e9aliser un drapeau italien. Exercice 4.3 : R\u00e9aliser un drapeau Colombien. Exercice 4.4 : R\u00e9aliser un drapeau suisse","title":"Dessiner avec PIL"},{"location":"SNT/image/#traitement-de-limage","text":"","title":"Traitement de l'image"},{"location":"SNT/image/#limage-en-niveau-de-gris","text":"Ex\u00e9cuter le script suivant : 1 2 3 4 5 6 7 8 9 10 11 from PIL import Image mon_image1 = Image . open ( \"buse.jpg\" ) #Cette image a une dimension de 400\u00d7200 pixels mon_image2 = Image . new ( 'RGB' ,( 400 , 200 )) #Cr\u00e9e une seconde a une dimension de 400\u00d7200 pixels for x in range ( 400 ): for y in range ( 200 ): r , v , b = mon_image1 . getpixel (( x , y )) #r,v,b prennent les valeurs des composante RVB du pixel (x,y) de Image1 g = ( r + v + b ) // 3 mon_image2 . putpixel ( ( x , y ),( g , g , g )) #On fixe la couleur du pixel (x,y) de Image2 mon_image2 . save ( \"Buse en Gris.jpg\" ) #On enregistre cette image mon_image2 . show () Remarque : on utilise la division enti\u00e8re avec l'op\u00e9rateur // (Par exemple : 7 //2 renvoie 3) pour calculer les couleurs des pixels de la nouvelle image.","title":"L'image en niveau de gris"},{"location":"SNT/image/#conservation-dune-composante","text":"1 2 3 4 5 6 7 8 9 10 from PIL import Image mon_image1 = Image . open ( \"buse.jpg\" ) #Cette image a une dimension de 400\u00d7200 pixels mon_image3 = Image . new ( 'RGB' ,( 400 , 200 )) #Cr\u00e9e une seconde a une dimension de 400\u00d7200 pixels for x in range ( 400 ): for y in range ( 200 ): r , v , b = mon_image1 . getpixel (( x , y )) #r,v,b prennent les valeurs des composante RVB du pixel (x,y) de Image1 mon_image3 . putpixel ( ( x , y ),( r , 0 , 0 )) #On fixe la couleur du pixel (x,y) de Image2 mon_image3 . save ( \"Buse en Rouge.jpg\" ) #On enregistre cette image mon_image3 . show () Exercice 5.1 : R\u00e9aliser un programme qui effectue la conservation de la composante verte de l'image rose.jpg .","title":"Conservation d'une composante"},{"location":"SNT/image/#seuillage","text":"L\u2019id\u00e9e est de modifier le programme pr\u00e9c\u00e9dent pour que si la moyenne de ses trois composantes est sup\u00e9rieure \u00e0 90, le pixel correspondant dans l\u2019image devient blanc, et si cette moyenne est inf\u00e9rieure \u00e0 90, le pixel devient noir. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from PIL import Image mon_image1 = Image . open ( \"buse.jpg\" ) #Cette image a une dimension de 400\u00d7200 pixels mon_image4 = Image . new ( 'RGB' ,( 400 , 200 )) #Cr\u00e9e une seconde a une dimension de 400\u00d7200 pixels for x in range ( 400 ): for y in range ( 200 ): r , v , b = mon_image1 . getpixel (( x , y )) #r,v,b prennent les valeurs des composante RVB du pixel (x,y) de Image1 m = ( r + v + b ) // 3 if m > 90 : mon_image4 . putpixel ( ( x , y ),( 255 , 255 , 255 )) #On fixe la couleur du pixel (x,y) de Image2 else : mon_image4 . putpixel ( ( x , y ),( 0 , 0 , 0 )) #On fixe la couleur du pixel (x,y) de Image2 mon_image4 . save ( \"Buse Seuill\u00e9e.jpg\" ) #On enregistre cette image mon_image4 . show () Remarque : On peut \u00e9videmment changer la valeur du seuil pour obtenir d\u2019autres effets. Exercice 5.2 : R\u00e9aliser un programme qui effectue le sueillage de la rose avec un seuil \u00e9gal \u00e0 125 rose.jpg .","title":"Seuillage :"},{"location":"SNT/image/#changement-de-dominante","text":"On utilise maintenant la photo rose.jpg . On souhaite changer les couleurs des roses dont la dominante est rouge (r > v et r > b). On peut par exemple choisir : si un pixel a une dominante rouge, on divise par deux sa composante rouge. 1 2 3 4 5 6 7 8 9 10 11 12 13 from PIL import Image mon_image1 = Image . open ( \"rose.jpg\" ) #Cette image a une dimension de 400\u00d7300 pixels mon_image5 = Image . new ( 'RGB' ,( 400 , 300 )) for x in range ( 400 ): for y in range ( 300 ): r , v , b = mon_image1 . getpixel (( x , y )) #r,v,b prennent les valeurs des composante RVB du pixel (x,y) de Image1 if r > v and r > b : mon_image5 . putpixel ( ( x , y ),( r // 2 , v , b )) #On fixe la couleur du pixel (x,y) de Image2 else : mon_image5 . putpixel ( ( x , y ),( r , v , b )) #On fixe la couleur du pixel (x,y) de Image2 mon_image5 . save ( \"Rose sans Dominante Rouge.jpg\" ) #On enregistre cette image mon_image5 . show ()","title":"Changement de dominante"},{"location":"SNT/image/#exercices","text":"Exercice 6.1 : sym\u00e9trie A partir de l'image iguane.jpg disponible dans l'activit\u00e9. R\u00e9aliser le programme qui r\u00e9alise la sym\u00e9trie suivante. Exercice 6.2 : sym\u00e9trie A partir de l'image iguane.jpg disponible dans l'activit\u00e9. R\u00e9aliser le programme qui r\u00e9alise le n\u00e9gatif de cette image. Remarque : Obtenir le n\u00e9gatif d'une image est tr\u00e8s simple : toutes les composantes x de tous les pixels de l'image sont remplac\u00e9es par 255-x.","title":"Exercices"},{"location":"Terminale/algos_coeur/","text":"Algorithmes de r\u00e9f\u00e9rence :heart: # Moyenne # 1 2 3 4 5 def moyenne ( lst : list ): moy = 0 for i in lst : moy += i return moy / len ( lst ) Factorielle # it\u00e9rative # 1 2 3 4 5 6 7 8 def factorielle ( n ): \"\"\" calcule la factorielle de n \"\"\" facto = 1 for i in range ( 1 , n + 1 ): facto = facto * i return facto r\u00e9cursive # 1 2 3 4 5 6 7 8 def factorielle_rec ( n ): \"\"\" calcule la factorielle de n \"\"\" if n == 1 : return 1 else : return n * factorielle_rec ( n - 1 ) Fibonacci # it\u00e9ratif # 1 2 3 4 5 6 7 8 def fibonacci(n): f1 = 1 f2 = 1 for i in range(3, n+1): f = f1 + f2 f1 = f2 f2 = f return f r\u00e9cursive # 1 2 3 4 5 def fibonacci_rec(n): if n == 2 or n == 1 : return 1 else : return fibonacci_rec(n-1) + fibonacci_rec(n-2) 3. Puissance # it\u00e9rative # 1 2 3 4 5 def puissance ( x , n ): power = 1 for i in range ( 1 , n + 1 ): power *= x return power r\u00e9cursive (simple) # 1 2 3 4 5 def puissance_rec ( x , n ): if n == 0 : return 1 else : return x * puissance_rec ( x , n - 1 ) Puissance r\u00e9cursive (optimis\u00e9e) # 1 2 3 4 5 6 7 8 def puissance ( x , n ): if n == 0 : return 1 else : if n % 2 == 0 : return puissance ( x * x , n // 2 ) else : return x * puissance ( x * x , ( n - 1 ) // 2 ) Tri # Tri par insertion # Pour toutes les valeurs, en commen\u00e7ant par la deuxi\u00e8me : Tant qu'on trouve \u00e0 gauche une valeur sup\u00e9rieure et qu'on n'est pas revenu \u00e0 la premi\u00e8re valeur, on \u00e9change ces deux valeurs. Tri par s\u00e9lection # 1 2 3 4 5 6 7 def tri_selection ( lst ) : for i in range ( len ( lst ) - 1 ): indice_min = i for k in range ( i + 1 , len ( lst )) : if lst [ k ] < lst [ indice_min ]: indice_min = k lst [ i ], lst [ indice_min ] = lst [ indice_min ], lst [ i ] Recherche par dichotomie # def recherche_dichotomique ( lst , val ) : indice_debut = 0 indice_fin = len ( lst ) - 1 while indice_debut <= indice_fin : indice_centre = ( indice_debut + indice_fin ) // 2 valeur_centrale = lst [ indice_centre ] if valeur_centrale == val : return indice_centre if valeur_centrale < val : indice_debut = indice_centre + 1 else : indice_fin = indice_centre - 1 return None","title":"Algorithmes de r\u00e9f\u00e9rence :heart:"},{"location":"Terminale/algos_coeur/#algorithmes-de-reference-heart","text":"","title":"Algorithmes de r\u00e9f\u00e9rence :heart:"},{"location":"Terminale/algos_coeur/#moyenne","text":"1 2 3 4 5 def moyenne ( lst : list ): moy = 0 for i in lst : moy += i return moy / len ( lst )","title":"Moyenne"},{"location":"Terminale/algos_coeur/#factorielle","text":"","title":"Factorielle"},{"location":"Terminale/algos_coeur/#iterative","text":"1 2 3 4 5 6 7 8 def factorielle ( n ): \"\"\" calcule la factorielle de n \"\"\" facto = 1 for i in range ( 1 , n + 1 ): facto = facto * i return facto","title":"it\u00e9rative"},{"location":"Terminale/algos_coeur/#recursive","text":"1 2 3 4 5 6 7 8 def factorielle_rec ( n ): \"\"\" calcule la factorielle de n \"\"\" if n == 1 : return 1 else : return n * factorielle_rec ( n - 1 )","title":"r\u00e9cursive"},{"location":"Terminale/algos_coeur/#fibonacci","text":"","title":"Fibonacci"},{"location":"Terminale/algos_coeur/#iteratif","text":"1 2 3 4 5 6 7 8 def fibonacci(n): f1 = 1 f2 = 1 for i in range(3, n+1): f = f1 + f2 f1 = f2 f2 = f return f","title":"it\u00e9ratif"},{"location":"Terminale/algos_coeur/#recursive_1","text":"1 2 3 4 5 def fibonacci_rec(n): if n == 2 or n == 1 : return 1 else : return fibonacci_rec(n-1) + fibonacci_rec(n-2)","title":"r\u00e9cursive"},{"location":"Terminale/algos_coeur/#3-puissance","text":"","title":"3. Puissance"},{"location":"Terminale/algos_coeur/#iterative_1","text":"1 2 3 4 5 def puissance ( x , n ): power = 1 for i in range ( 1 , n + 1 ): power *= x return power","title":"it\u00e9rative"},{"location":"Terminale/algos_coeur/#recursive-simple","text":"1 2 3 4 5 def puissance_rec ( x , n ): if n == 0 : return 1 else : return x * puissance_rec ( x , n - 1 )","title":"r\u00e9cursive (simple)"},{"location":"Terminale/algos_coeur/#puissance-recursive-optimisee","text":"1 2 3 4 5 6 7 8 def puissance ( x , n ): if n == 0 : return 1 else : if n % 2 == 0 : return puissance ( x * x , n // 2 ) else : return x * puissance ( x * x , ( n - 1 ) // 2 )","title":"Puissance r\u00e9cursive (optimis\u00e9e)"},{"location":"Terminale/algos_coeur/#tri","text":"","title":"Tri"},{"location":"Terminale/algos_coeur/#tri-par-insertion","text":"Pour toutes les valeurs, en commen\u00e7ant par la deuxi\u00e8me : Tant qu'on trouve \u00e0 gauche une valeur sup\u00e9rieure et qu'on n'est pas revenu \u00e0 la premi\u00e8re valeur, on \u00e9change ces deux valeurs.","title":"Tri par insertion"},{"location":"Terminale/algos_coeur/#tri-par-selection","text":"1 2 3 4 5 6 7 def tri_selection ( lst ) : for i in range ( len ( lst ) - 1 ): indice_min = i for k in range ( i + 1 , len ( lst )) : if lst [ k ] < lst [ indice_min ]: indice_min = k lst [ i ], lst [ indice_min ] = lst [ indice_min ], lst [ i ]","title":"Tri par s\u00e9lection"},{"location":"Terminale/algos_coeur/#recherche-par-dichotomie","text":"def recherche_dichotomique ( lst , val ) : indice_debut = 0 indice_fin = len ( lst ) - 1 while indice_debut <= indice_fin : indice_centre = ( indice_debut + indice_fin ) // 2 valeur_centrale = lst [ indice_centre ] if valeur_centrale == val : return indice_centre if valeur_centrale < val : indice_debut = indice_centre + 1 else : indice_fin = indice_centre - 1 return None","title":"Recherche par dichotomie"},{"location":"Terminale/exercices/","text":"Exercices type bac # Exercice 1 : # Programmer la fonction multiplication , prenant en param\u00e8tres deux nombres entiers (qui peuvent \u00eatre relatifs) n1 et n2 , et qui renvoie le produit de ces deux nombres. Les seules op\u00e9rations autoris\u00e9es sont l\u2019addition et la soustraction. Exercice 2 : # Programmer une fonction renverse , prenant en param\u00e8tre une cha\u00eene de caract\u00e8res non vide mot et renvoie une cha\u00eene de caract\u00e8res en inversant ceux de la cha\u00eene mot . Exemple : >>> renverse ( \"informatique\" ) \"euqitamrofni\" Exercice 3 : # \u00c9crire une fonction moyenne qui prend en param\u00e8tre un tableau non vide de nombres flottants et qui renvoie la moyenne des valeurs du tableau. Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python. Exemples : >>> moyenne ([ 1.0 ]) 1.0 >>> moyenne ([ 1.0 , 2.0 , 4.0 ]) 2.3333333333333335 Exercice 4 : # On consid\u00e8re la fonction dec_to_bin ci-dessous qui prend en param\u00e8tre un entier positif a en \u00e9criture d\u00e9cimale et qui renvoie son \u00e9criture binaire sous la forme d'une chaine de caract\u00e8res. Exemples : >>> dec_to_bin ( 83 ) '1010011' >>> dec_to_bin ( 127 ) '1111111' Exercice 5: # On consid\u00e8re une classe Personnage repr\u00e9sentant un personnage de Jeu. Le plateau de jeu est repr\u00e9sent\u00e9 par un rep\u00e8re orthonorm\u00e9 \u00e0 trois axes. La position du joueur dans le plateau est rep\u00e9r\u00e9e par ses attributs x, y, z. 1] \u00c9crire un constructeur initialisant les mesures. 2] \u00c9crire les m\u00e9thodes avance, droite et saute permettant respectivement de faire avancer, aller \u00e0 droite et sauter le personnage, c\u2019est-\u00e0-dire d\u2019augmenter de 1 respectivement x, y et z. 3] Impl\u00e9menter une autre m\u00e9thode `coord`` renvoyant les coordonn\u00e9es sous forme d\u2019un triplet. 4] Essayer avec : Laura = Personnage(0, 0, 0) Exercice 6 : # On consid\u00e8re une classe Carre admettant la mesure des c\u00f4t\u00e9s d\u2019un carr\u00e9 en attribut. 1] \u00c9crire un constructeur initialisant les mesures. 2] \u00c9crire les m\u00e9thodes : -> perimetre permettant de retourner le p\u00e9rim\u00e8tre du carr\u00e9. -> aire permettant de retourner son aire. 3) Cr\u00e9er des exemples Exercice 7: # Voici un programme en Python : class Piece : def alea ( self ) : return random . randint ( 0 , 1 ) def moyenne ( self , n ): tirage = [] for i in range ( n ): tirage . append ( self . alea () ) return sum ( tirage ) / n p = Piece () print ( p . moyenne ( 100 )) Expliquer en d\u00e9tail ce qu\u2019il permet d\u2019afficher.","title":"exercices"},{"location":"Terminale/exercices/#exercices-type-bac","text":"","title":"Exercices type bac"},{"location":"Terminale/exercices/#exercice-1","text":"Programmer la fonction multiplication , prenant en param\u00e8tres deux nombres entiers (qui peuvent \u00eatre relatifs) n1 et n2 , et qui renvoie le produit de ces deux nombres. Les seules op\u00e9rations autoris\u00e9es sont l\u2019addition et la soustraction.","title":"Exercice 1 :"},{"location":"Terminale/exercices/#exercice-2","text":"Programmer une fonction renverse , prenant en param\u00e8tre une cha\u00eene de caract\u00e8res non vide mot et renvoie une cha\u00eene de caract\u00e8res en inversant ceux de la cha\u00eene mot . Exemple : >>> renverse ( \"informatique\" ) \"euqitamrofni\"","title":"Exercice 2 :"},{"location":"Terminale/exercices/#exercice-3","text":"\u00c9crire une fonction moyenne qui prend en param\u00e8tre un tableau non vide de nombres flottants et qui renvoie la moyenne des valeurs du tableau. Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python. Exemples : >>> moyenne ([ 1.0 ]) 1.0 >>> moyenne ([ 1.0 , 2.0 , 4.0 ]) 2.3333333333333335","title":"Exercice 3 :"},{"location":"Terminale/exercices/#exercice-4","text":"On consid\u00e8re la fonction dec_to_bin ci-dessous qui prend en param\u00e8tre un entier positif a en \u00e9criture d\u00e9cimale et qui renvoie son \u00e9criture binaire sous la forme d'une chaine de caract\u00e8res. Exemples : >>> dec_to_bin ( 83 ) '1010011' >>> dec_to_bin ( 127 ) '1111111'","title":"Exercice 4 :"},{"location":"Terminale/exercices/#exercice-5","text":"On consid\u00e8re une classe Personnage repr\u00e9sentant un personnage de Jeu. Le plateau de jeu est repr\u00e9sent\u00e9 par un rep\u00e8re orthonorm\u00e9 \u00e0 trois axes. La position du joueur dans le plateau est rep\u00e9r\u00e9e par ses attributs x, y, z. 1] \u00c9crire un constructeur initialisant les mesures. 2] \u00c9crire les m\u00e9thodes avance, droite et saute permettant respectivement de faire avancer, aller \u00e0 droite et sauter le personnage, c\u2019est-\u00e0-dire d\u2019augmenter de 1 respectivement x, y et z. 3] Impl\u00e9menter une autre m\u00e9thode `coord`` renvoyant les coordonn\u00e9es sous forme d\u2019un triplet. 4] Essayer avec : Laura = Personnage(0, 0, 0)","title":"Exercice 5:"},{"location":"Terminale/exercices/#exercice-6","text":"On consid\u00e8re une classe Carre admettant la mesure des c\u00f4t\u00e9s d\u2019un carr\u00e9 en attribut. 1] \u00c9crire un constructeur initialisant les mesures. 2] \u00c9crire les m\u00e9thodes : -> perimetre permettant de retourner le p\u00e9rim\u00e8tre du carr\u00e9. -> aire permettant de retourner son aire. 3) Cr\u00e9er des exemples","title":"Exercice 6 :"},{"location":"Terminale/exercices/#exercice-7","text":"Voici un programme en Python : class Piece : def alea ( self ) : return random . randint ( 0 , 1 ) def moyenne ( self , n ): tirage = [] for i in range ( n ): tirage . append ( self . alea () ) return sum ( tirage ) / n p = Piece () print ( p . moyenne ( 100 )) Expliquer en d\u00e9tail ce qu\u2019il permet d\u2019afficher.","title":"Exercice 7:"},{"location":"Terminale/imprimantes/","text":"R\u00e9aliser des mod\u00e8les 3D # R\u00e9aliser ses propres mod\u00e8les gr\u00e2ce \u00e0 des logiciels de CAO # solidworks # SOLIDWORKS est un logiciel propri\u00e9taire de conception assist\u00e9e par ordinateur 3D fonctionnant sous Windows. C'est un logiciel d\u00e9velopp\u00e9 par Dassault Syst\u00e8mes. Site de Solidworks fusion 360 # Fusion 360 d'Autodesk est un logiciel CAO polyvalent qui propose toutes les fonctionnalit\u00e9s n\u00e9cessaires au d\u00e9veloppement de produits, depuis la phase de conception \u00e0 la v\u00e9rification pour fabrication avec des outils de fabrication traditionnelle ou num\u00e9rique comme l'impression 3D. Il est disponible sous windows et sous Mac. Site de Fusion 360 FreeCAD # Comme l\u2019indique son nom FreeCAD est gratuit. Pour ce logiciel de mod\u00e9lisation 3D param\u00e9trique, aucune autre exp\u00e9rience n\u2019est n\u00e9cessaire, il peut \u00eatre utilis\u00e9 imm\u00e9diatement pour cr\u00e9er des mod\u00e8les 3D complexes. Le logiciel s\u2019int\u00e9resse particuli\u00e8rement aux projets d\u2019ing\u00e9nierie ou d\u2019architecture. Il peut \u00eatre utilis\u00e9 par n\u2019importe qui : utilisateurs \u00e0 domicile, concepteurs, programmeurs et m\u00eame \u00e9ducateurs. Il fonctionne sur Windows, Mac ainsi que Linux. Site de freeCAD Blender # Blender est un logiciel open source largement utilis\u00e9. Il propose un catalogue incroyable d\u2019outils et de logiciels pour cr\u00e9er des mod\u00e8les impressionnants tout en laissant libre cours \u00e0 votre imagination. Il peut \u00eatre utilis\u00e9 sur Mac, Windows et Linux. Cependant, si vous souhaitez utiliser Blender, il est conseill\u00e9 d\u2019avoir une petite exp\u00e9rience pr\u00e9alable avec les logiciels 3D. Site de Blender Obtenir des mod\u00e8les 3D # Vous pouvez t\u00e9l\u00e9charger un objet 3D sur un site qui rend accessible gratuitement des dizaines de milliers de mod\u00e8les tridimensionnel Vous y trouverez peut-\u00eatre votre objet ou tout simplement des id\u00e9es. Voici quelques sites : Cults3d Thingiverse Youmagine Pinshape Diff\u00e9rents types d'imprimante: # les imprimantes \u00e0 filament # Les filaments utilis\u00e9s dans l'impression 3D sont les thermoplastiques, qui sont des plastiques qui fondent plut\u00f4t lorsqu'ils sont chauff\u00e9s. Les thermoplastiques peuvent \u00eatre fa\u00e7onn\u00e9s et moul\u00e9s lorsqu'ils sont chauds et se solidifier lorsqu'ils sont refroidis. Le filament est introduit dans une chambre de chauffage dans l'assemblage de l'extrudeuse de l'imprimante, o\u00f9 il est chauff\u00e9 \u00e0 son point de fusion, puis extrud\u00e9 \u00e0 travers une buse m\u00e9tallique. Lorsque l'assemblage de l'extrudeuse se d\u00e9place, tracer un chemin programm\u00e9 dans un fichier d'objet 3D pour cr\u00e9er, couche par couche, l'objet imprim\u00e9. Les imprimantes \u00e0 r\u00e9sine # Les imprimantes \u00e0 r\u00e9sine forment des pi\u00e8ces \u00e0 partir de r\u00e9sine liquide qui durcit et devient solide lorsqu'elle est expos\u00e9e \u00e0 la lumi\u00e8re UV. Semblables aux imprimantes \u00e0 filament, les imprimantes \u00e0 r\u00e9sine construisent des pi\u00e8ces en couches. La diff\u00e9rence est qu'il se solidifie lorsqu'une pi\u00e8ce est expos\u00e9e \u00e0 la lumi\u00e8re. Chaque tranche \u00e0 un motif de lumi\u00e8re UV solidifiera la r\u00e9sine aux endroits souhait\u00e9s. Il y a trois types d'imprimantes 3D \u00e0 r\u00e9sine courantes : DLP (traitement num\u00e9rique de la lumi\u00e8re) ; SLA (st\u00e9r\u00e9olithographie) ; MSLA (microst\u00e9r\u00e9olithographie). Ces technologies diff\u00e8rent dans la fa\u00e7on dont elles durcissent la r\u00e9sine. Pour les imprimantes DLP, une fois que le mod\u00e8le 3D est envoy\u00e9 \u00e0 l\u2019imprimante, une cuve transparente de polym\u00e8re liquide appel\u00e9 photopolym\u00e8re ou plus grossi\u00e8rement r\u00e9sine, est expos\u00e9e \u00e0 la lumi\u00e8re d\u2019un projecteur DLP dans des conditions de lumi\u00e8re s\u00fbre. Ce projecteur \u00e0 \u00e9cran num\u00e9rique va projeter une image de la couche sur l\u2019ensemble de la plateforme de fabrication, gr\u00e2ce \u00e0 des miroirs. La lumi\u00e8re est r\u00e9fl\u00e9chie sur une matrice de micro-miroirs, un masque dynamique consistant de miroirs microscopiques dispos\u00e9s dans une matrice sur une puce semi-conducteur. Le d\u00e9placement rapide de ces minuscules miroirs entre les lentilles qui dirigent la lumi\u00e8re vers le fond du bac o\u00f9 un dissipateur thermique d\u00e9finit les coordonn\u00e9s o\u00f9 la r\u00e9sine liquide sera polym\u00e9ris\u00e9e dans une couche donn\u00e9e. La r\u00e9sine une fois expos\u00e9e va donc durcir et la plaque de construction (plateau de travail) sur lequel la pi\u00e8ce repose se d\u00e9place vers le bas. Apr\u00e8s cela les photopolym\u00e8res sont une fois de plus expos\u00e9s \u00e0 la lumi\u00e8re. La pi\u00e8ce se construit \u00e0 l'envers sur le plateau, couche par couche. Les imprimantes SLA utilisent un laser qui trace un chemin \u00e0 travers la r\u00e9sine. \u00c0 l'endroit o\u00f9 le laser frappe la r\u00e9sine, la r\u00e9sine durcira et se solidifiera. De l'ext\u00e9rieur, ces imprimantes sont tr\u00e8s similaires. Depuis l'essor de l'impression bas\u00e9e sur LCD (MSLA), les prix des syst\u00e8mes d'impression 3D \u00e0 base de r\u00e9sine ont baiss\u00e9 au niveau des imprimantes FDM. C'est pourquoi la plupart des imprimantes \u00e0 r\u00e9sine \u00e0 moindre co\u00fbt utilisent presque la m\u00eame technologie LCD / MSLA. Comparaison entre les deux # Les imprimantes \u00e0 filament fonctionnent bien pour produire des pi\u00e8ces aux propri\u00e9t\u00e9s thermoplastiques et sont souvent des pi\u00e8ces plus grandes. Les imprimantes \u00e0 r\u00e9sine excellent dans la production de d\u00e9tails fins et peuvent imprimer beaucoup plus pr\u00e9cis\u00e9ment sur de petites pi\u00e8ces, mais utilisent de la r\u00e9sine thermodurcissable. Il y a quelques facteurs plus importants \u00e0 consid\u00e9rer lors du choix de ces technologies qui conviennent le mieux \u00e0 vos besoins sp\u00e9cifiques. Les \u00e9tapes pour utiliser une imprimantes 3D # \u00c9tape 1 : pr\u00e9parer l\u2019impression 3D # Ouvrez votre fichier .stl ou .obj gr\u00e2ce \u00e0 un logiciel d\u2019impression 3D fourni avec votre imprimante 3D (il pourrait \u00eatre compar\u00e9 \u00e0 votre logiciel d\u2019imprimante papier). Vous pourrez alors visualiser votre objet et si besoin le d\u00e9placer sur la plateforme (zone d\u2019impression de votre machine). Avec ce logiciel, il vous sera possible aussi d\u2019agrandir ou diminuer la taille d\u2019impression de votre objet. C\u2019est aussi avec ce logiciel que vous pouvez estimer votre temps d\u2019impression. Ce temps pourra varier en fonction de param\u00e8tres qu\u2019il vous sera propos\u00e9 de modifier : la mati\u00e8re du filament avec laquelle vous imprimerez votre objet ; la qualit\u00e9 ou finesse de votre impression ; l\u2019ajout de support d\u2019impression pour les objets complexes. Il existe une multitude de logiciels pour imprimer en 3D, compatibles avec la majorit\u00e9 des imprimantes. Ces logiciels sont la majeure partie du temps en t\u00e9l\u00e9chargement libre et gratuit sur Internet. En voici quelques exemples : Cura Repetier Markerware Il est important de comprendre que c\u2019est l\u2019une des \u00e9tapes les plus importantes \u00e0 ma\u00eetriser. Une impression 3D mal configur\u00e9e dans le logiciel d\u2019impression 3D peut faire que vos temps d\u2019impression doublent, ou que votre objet ne s\u2019imprime pas ou tr\u00e8s mal. Il existe les r\u00e9glages par d\u00e9faut en fonction de la mati\u00e8re que vous utilisez. Je vous recommande vivement d\u2019utiliser ces r\u00e9glages dans un premier temps. se connecter et pr\u00e9parer votre imprimante 3D # Cette \u00e9tape peut \u00eatre compar\u00e9e \u00e0 tout point de vue \u00e0 l\u2019impression papier. Il faut connecter votre imprimante \u00e0 votre ordinateur. Il existe une multitude de fa\u00e7on de se connecter: c\u00e2ble USB, carte SD, WiFi \u2026. Il faut placer par exemple votre bobine de mati\u00e8re sur son support, puis ins\u00e9rer le filament dans l\u2019extrudeur. Il faut lancer l\u2019initialisation de votre machine. Il existe aujourd\u2019hui une quantit\u00e9 faramineuse de tutoriels vid\u00e9os sur le sujet.","title":"Imprimante"},{"location":"Terminale/imprimantes/#realiser-des-modeles-3d","text":"","title":"R\u00e9aliser des mod\u00e8les 3D"},{"location":"Terminale/imprimantes/#realiser-ses-propres-modeles-grace-a-des-logiciels-de-cao","text":"","title":"R\u00e9aliser ses propres mod\u00e8les gr\u00e2ce \u00e0 des logiciels de CAO"},{"location":"Terminale/imprimantes/#solidworks","text":"SOLIDWORKS est un logiciel propri\u00e9taire de conception assist\u00e9e par ordinateur 3D fonctionnant sous Windows. C'est un logiciel d\u00e9velopp\u00e9 par Dassault Syst\u00e8mes. Site de Solidworks","title":"solidworks"},{"location":"Terminale/imprimantes/#fusion-360","text":"Fusion 360 d'Autodesk est un logiciel CAO polyvalent qui propose toutes les fonctionnalit\u00e9s n\u00e9cessaires au d\u00e9veloppement de produits, depuis la phase de conception \u00e0 la v\u00e9rification pour fabrication avec des outils de fabrication traditionnelle ou num\u00e9rique comme l'impression 3D. Il est disponible sous windows et sous Mac. Site de Fusion 360","title":"fusion 360"},{"location":"Terminale/imprimantes/#freecad","text":"Comme l\u2019indique son nom FreeCAD est gratuit. Pour ce logiciel de mod\u00e9lisation 3D param\u00e9trique, aucune autre exp\u00e9rience n\u2019est n\u00e9cessaire, il peut \u00eatre utilis\u00e9 imm\u00e9diatement pour cr\u00e9er des mod\u00e8les 3D complexes. Le logiciel s\u2019int\u00e9resse particuli\u00e8rement aux projets d\u2019ing\u00e9nierie ou d\u2019architecture. Il peut \u00eatre utilis\u00e9 par n\u2019importe qui : utilisateurs \u00e0 domicile, concepteurs, programmeurs et m\u00eame \u00e9ducateurs. Il fonctionne sur Windows, Mac ainsi que Linux. Site de freeCAD","title":"FreeCAD"},{"location":"Terminale/imprimantes/#blender","text":"Blender est un logiciel open source largement utilis\u00e9. Il propose un catalogue incroyable d\u2019outils et de logiciels pour cr\u00e9er des mod\u00e8les impressionnants tout en laissant libre cours \u00e0 votre imagination. Il peut \u00eatre utilis\u00e9 sur Mac, Windows et Linux. Cependant, si vous souhaitez utiliser Blender, il est conseill\u00e9 d\u2019avoir une petite exp\u00e9rience pr\u00e9alable avec les logiciels 3D. Site de Blender","title":"Blender"},{"location":"Terminale/imprimantes/#obtenir-des-modeles-3d","text":"Vous pouvez t\u00e9l\u00e9charger un objet 3D sur un site qui rend accessible gratuitement des dizaines de milliers de mod\u00e8les tridimensionnel Vous y trouverez peut-\u00eatre votre objet ou tout simplement des id\u00e9es. Voici quelques sites : Cults3d Thingiverse Youmagine Pinshape","title":"Obtenir des mod\u00e8les 3D"},{"location":"Terminale/imprimantes/#differents-types-dimprimante","text":"","title":"Diff\u00e9rents types d'imprimante:"},{"location":"Terminale/imprimantes/#les-imprimantes-a-filament","text":"Les filaments utilis\u00e9s dans l'impression 3D sont les thermoplastiques, qui sont des plastiques qui fondent plut\u00f4t lorsqu'ils sont chauff\u00e9s. Les thermoplastiques peuvent \u00eatre fa\u00e7onn\u00e9s et moul\u00e9s lorsqu'ils sont chauds et se solidifier lorsqu'ils sont refroidis. Le filament est introduit dans une chambre de chauffage dans l'assemblage de l'extrudeuse de l'imprimante, o\u00f9 il est chauff\u00e9 \u00e0 son point de fusion, puis extrud\u00e9 \u00e0 travers une buse m\u00e9tallique. Lorsque l'assemblage de l'extrudeuse se d\u00e9place, tracer un chemin programm\u00e9 dans un fichier d'objet 3D pour cr\u00e9er, couche par couche, l'objet imprim\u00e9.","title":"les imprimantes \u00e0 filament"},{"location":"Terminale/imprimantes/#les-imprimantes-a-resine","text":"Les imprimantes \u00e0 r\u00e9sine forment des pi\u00e8ces \u00e0 partir de r\u00e9sine liquide qui durcit et devient solide lorsqu'elle est expos\u00e9e \u00e0 la lumi\u00e8re UV. Semblables aux imprimantes \u00e0 filament, les imprimantes \u00e0 r\u00e9sine construisent des pi\u00e8ces en couches. La diff\u00e9rence est qu'il se solidifie lorsqu'une pi\u00e8ce est expos\u00e9e \u00e0 la lumi\u00e8re. Chaque tranche \u00e0 un motif de lumi\u00e8re UV solidifiera la r\u00e9sine aux endroits souhait\u00e9s. Il y a trois types d'imprimantes 3D \u00e0 r\u00e9sine courantes : DLP (traitement num\u00e9rique de la lumi\u00e8re) ; SLA (st\u00e9r\u00e9olithographie) ; MSLA (microst\u00e9r\u00e9olithographie). Ces technologies diff\u00e8rent dans la fa\u00e7on dont elles durcissent la r\u00e9sine. Pour les imprimantes DLP, une fois que le mod\u00e8le 3D est envoy\u00e9 \u00e0 l\u2019imprimante, une cuve transparente de polym\u00e8re liquide appel\u00e9 photopolym\u00e8re ou plus grossi\u00e8rement r\u00e9sine, est expos\u00e9e \u00e0 la lumi\u00e8re d\u2019un projecteur DLP dans des conditions de lumi\u00e8re s\u00fbre. Ce projecteur \u00e0 \u00e9cran num\u00e9rique va projeter une image de la couche sur l\u2019ensemble de la plateforme de fabrication, gr\u00e2ce \u00e0 des miroirs. La lumi\u00e8re est r\u00e9fl\u00e9chie sur une matrice de micro-miroirs, un masque dynamique consistant de miroirs microscopiques dispos\u00e9s dans une matrice sur une puce semi-conducteur. Le d\u00e9placement rapide de ces minuscules miroirs entre les lentilles qui dirigent la lumi\u00e8re vers le fond du bac o\u00f9 un dissipateur thermique d\u00e9finit les coordonn\u00e9s o\u00f9 la r\u00e9sine liquide sera polym\u00e9ris\u00e9e dans une couche donn\u00e9e. La r\u00e9sine une fois expos\u00e9e va donc durcir et la plaque de construction (plateau de travail) sur lequel la pi\u00e8ce repose se d\u00e9place vers le bas. Apr\u00e8s cela les photopolym\u00e8res sont une fois de plus expos\u00e9s \u00e0 la lumi\u00e8re. La pi\u00e8ce se construit \u00e0 l'envers sur le plateau, couche par couche. Les imprimantes SLA utilisent un laser qui trace un chemin \u00e0 travers la r\u00e9sine. \u00c0 l'endroit o\u00f9 le laser frappe la r\u00e9sine, la r\u00e9sine durcira et se solidifiera. De l'ext\u00e9rieur, ces imprimantes sont tr\u00e8s similaires. Depuis l'essor de l'impression bas\u00e9e sur LCD (MSLA), les prix des syst\u00e8mes d'impression 3D \u00e0 base de r\u00e9sine ont baiss\u00e9 au niveau des imprimantes FDM. C'est pourquoi la plupart des imprimantes \u00e0 r\u00e9sine \u00e0 moindre co\u00fbt utilisent presque la m\u00eame technologie LCD / MSLA.","title":"Les imprimantes \u00e0 r\u00e9sine"},{"location":"Terminale/imprimantes/#comparaison-entre-les-deux","text":"Les imprimantes \u00e0 filament fonctionnent bien pour produire des pi\u00e8ces aux propri\u00e9t\u00e9s thermoplastiques et sont souvent des pi\u00e8ces plus grandes. Les imprimantes \u00e0 r\u00e9sine excellent dans la production de d\u00e9tails fins et peuvent imprimer beaucoup plus pr\u00e9cis\u00e9ment sur de petites pi\u00e8ces, mais utilisent de la r\u00e9sine thermodurcissable. Il y a quelques facteurs plus importants \u00e0 consid\u00e9rer lors du choix de ces technologies qui conviennent le mieux \u00e0 vos besoins sp\u00e9cifiques.","title":"Comparaison entre les deux"},{"location":"Terminale/imprimantes/#les-etapes-pour-utiliser-une-imprimantes-3d","text":"","title":"Les \u00e9tapes pour utiliser une imprimantes 3D"},{"location":"Terminale/imprimantes/#etape-1-preparer-limpression-3d","text":"Ouvrez votre fichier .stl ou .obj gr\u00e2ce \u00e0 un logiciel d\u2019impression 3D fourni avec votre imprimante 3D (il pourrait \u00eatre compar\u00e9 \u00e0 votre logiciel d\u2019imprimante papier). Vous pourrez alors visualiser votre objet et si besoin le d\u00e9placer sur la plateforme (zone d\u2019impression de votre machine). Avec ce logiciel, il vous sera possible aussi d\u2019agrandir ou diminuer la taille d\u2019impression de votre objet. C\u2019est aussi avec ce logiciel que vous pouvez estimer votre temps d\u2019impression. Ce temps pourra varier en fonction de param\u00e8tres qu\u2019il vous sera propos\u00e9 de modifier : la mati\u00e8re du filament avec laquelle vous imprimerez votre objet ; la qualit\u00e9 ou finesse de votre impression ; l\u2019ajout de support d\u2019impression pour les objets complexes. Il existe une multitude de logiciels pour imprimer en 3D, compatibles avec la majorit\u00e9 des imprimantes. Ces logiciels sont la majeure partie du temps en t\u00e9l\u00e9chargement libre et gratuit sur Internet. En voici quelques exemples : Cura Repetier Markerware Il est important de comprendre que c\u2019est l\u2019une des \u00e9tapes les plus importantes \u00e0 ma\u00eetriser. Une impression 3D mal configur\u00e9e dans le logiciel d\u2019impression 3D peut faire que vos temps d\u2019impression doublent, ou que votre objet ne s\u2019imprime pas ou tr\u00e8s mal. Il existe les r\u00e9glages par d\u00e9faut en fonction de la mati\u00e8re que vous utilisez. Je vous recommande vivement d\u2019utiliser ces r\u00e9glages dans un premier temps.","title":"\u00c9tape 1 : pr\u00e9parer l\u2019impression 3D"},{"location":"Terminale/imprimantes/#se-connecter-et-preparer-votre-imprimante-3d","text":"Cette \u00e9tape peut \u00eatre compar\u00e9e \u00e0 tout point de vue \u00e0 l\u2019impression papier. Il faut connecter votre imprimante \u00e0 votre ordinateur. Il existe une multitude de fa\u00e7on de se connecter: c\u00e2ble USB, carte SD, WiFi \u2026. Il faut placer par exemple votre bobine de mati\u00e8re sur son support, puis ins\u00e9rer le filament dans l\u2019extrudeur. Il faut lancer l\u2019initialisation de votre machine. Il existe aujourd\u2019hui une quantit\u00e9 faramineuse de tutoriels vid\u00e9os sur le sujet.","title":"se connecter et pr\u00e9parer votre imprimante 3D"},{"location":"Terminale/ArchitectureMaterielle/SOC/","text":"SOC (System On Chip) # Loi de Moore et miniaturisation progressive # Gordon E. Moore En 1975, Gordon E. Moore (cofondateur de la soci\u00e9t\u00e9 Intel) \u00e9non\u00e7a la conjecture suivante sur l\u2019\u00e9volution des capacit\u00e9s des circuits int\u00e9gr\u00e9s : dans les microprocesseurs, le nombre de transistors sur une puce va doubler tous les deux ans. Loi de Moore Bien que fond\u00e9e sur un constat empirique entre les ann\u00e9e 1965 et 1975, cette pr\u00e9diction qu\u2019on appelle aussi \"loi de Moore\" s\u2019est r\u00e9v\u00e9l\u00e9e incroyablement juste. On est pass\u00e9 de 2250 transistors en 1971 sur un microprocesseur INTEL 4004 (un des premiers microprocesseurs) \u00e0 plusieurs dizaines de milliards aujourd\u2019hui sur les derniers microprocesseurs. Sur ces derniers, la taille des transistors n\u2019est que de 5 nm soit \u00e0 peine plus que l\u2019\u00e9paisseur de quelques dizaines d\u2019atomes de silicium. Loi de Moore Remarque : le transistor est un composant \u00e9lectronique essentiel : il permet de laisser (ou non) passer un courant \u00e9lectrique. Cette loi de Moore est (plus ou moins) g\u00e9n\u00e9ralisable \u00e0 tous les composants \u00e9lectroniques (m\u00e9moire, etc...). Cela a permis non seulement une augmentation de puissance de calcul des ordinateurs gr\u00e2ce \u00e0 une diminution de la distance entre les composants mais \u00e9galement une baisse des co\u00fbts (en rassemblant plusieurs composants en un seul). La diminution de la taille des transistors a \u00e9galement permis de baisser la tension \u00e9lectrique pour les faire fonctionner, ce qui a engendr\u00e9 une baisse de consommation \u00e9nerg\u00e9tique. La miniaturisation est telle qu\u2019il est possible de rassembler sur une m\u00eame puce tous les composants essentiels d\u2019un ordinateur (microprocesseur, m\u00e9moire, GPU, interfaces d\u2019entr\u00e9e-sorties, etc....). Ces syst\u00e8mes complets que l\u2019on retrouve dans tous les smartphones, les tablettes s\u2019appellent System On a Chip (SOC) ou syst\u00e8me sur une puce en fran\u00e7ais. Exercice 1 : Si dans les ann\u00e9es 70, on pouvait placer 2000 transistors sur une surface de 10 mm 2 , quelle surface aurait \u00e9t\u00e9 n\u00e9cessaire pour placer deux milliards de transistor \u00c9volution en image de la taille des ordinateurs # IBM 650, le premier ordinateur fabriqu\u00e9 en s\u00e9rie (1955) Cet ordinateur n'a pas encore de transistors mais des tubes \u00e0 vide. IBM 7090, le premier ordinateur \u00e0 transistors (1959) Ordinateurs actuels Chaque composant a un r\u00f4le sp\u00e9cifique. Ils communiquent entre eux par des bus de diff\u00e9rentes vitesses. Chaque composant est rempla\u00e7able, et il est possible d'ajouter de nouveaux composants sur la carte m\u00e8re qui poss\u00e8de des slots d'extension. Tout un pc sur une seule puce : les SoC # L'int\u00e9gration de composants diff\u00e9rents au sein d'une m\u00eame puce # Le principe d'un syst\u00e8me sur puce ou System On a Chip (SoC) est d'int\u00e9grer au sein d'une puce unique un ensemble de composants habituellement physiquement dissoci\u00e9s dans un ordinateur classique (ordinateur de bureau ou ordinateur portable). On peut retrouver ainsi au sein d'une m\u00eame puce : le microprocesseur (CPU) la carte graphique (GPU) la m\u00e9moire RAM \u00e9ventuellement des composants de communication (WiFi, Bluetooth...) Avantages et inconv\u00e9nients d'un SoC : Avantages moindre consommation \u00e9lectrique moindre encombrement pas besoin de refroidissement meilleure s\u00e9curit\u00e9 (vue globale sur la s\u00e9curit\u00e9 qui n'est plus d\u00e9pendante d'une multitude de composants) moindre co\u00fbt (forte automisation du processus, gros volumes de production) Inconv\u00e9nients Impossibilit\u00e9 de choisir ind\u00e9pendamment ses composants Pas de mise \u00e0 jour possible / remplacement / ajout d'un composant La panne d'un seul composant entra\u00eene la panne totale du SoC Exemple : le M3 d'Apple # Les processeurs Apple silicon sont des processeurs SoC et SiP con\u00e7us par Apple et utilisant principalement l'architecture ARM. Ils sont la base des appareils iPhone, iPad et Apple Watch ainsi que de produits tels que le HomePod, l'iPod touch et l'Apple TV. Un SoC est \u00e9galement con\u00e7u pour sa gamme d'\u00e9couteurs sans fil AirPods appel\u00e9 Apple H1. Le 22 juin 2020, la firme am\u00e9ricaine annonce son intention de faire la transition des Macintosh vers ARM et de se passer \u00e0 terme des processeurs Intel. Bien qu'Apple sous-traite toute sa fabrication, y compris celle de ses propres SoC, elle con\u00e7oit les processeurs et contr\u00f4le enti\u00e8rement leur int\u00e9gration dans le mat\u00e9riel et les logiciels de l'entreprise. La famille M3 : Caract\u00e9ristiques de la famille M3 : Des puces d\u00e9di\u00e9es \u00e0 des t\u00e2ches sp\u00e9cifiques # L'int\u00e9gration dans un SoC n'est pas totale : il reste des puces d\u00e9di\u00e9es \u00e0 des t\u00e2ches tr\u00e8s sp\u00e9cifiques qui ne sont pas forc\u00e9ment int\u00e9gr\u00e9es dans le SoC. Au sein d'un t\u00e9l\u00e9phone # Ainsi, d'apr\u00e8s le site iFixit , on peut retrouver ceci dans l'iPhone Pro 13, au c\u00f4t\u00e9 de la puce A15 : On voit que (par exemple) qu'il existe une puce sp\u00e9cifique pour g\u00e9rer l'audio, une puce sp\u00e9cifique pour le module WiFi, une puce sp\u00e9cifique pour le module Modem 5G... En \u00e9lectronique \u00abgrand public\u00bb # Ce composant (pouvant \u00eatre utilis\u00e9 dans un montage personnel, sur un Arduino par exemple) ne sert qu'\u00e0 faire des calculs cryptographiques. Un principe g\u00e9n\u00e9ral # Il est important de comprendre que certains processeurs sont optimis\u00e9s pour un certains types de calcul. C'est le cas par exemple d'une carte graphique, qui excelle dans le calcul de rendus de polygones. On s'est aper\u00e7u que cette aptitude \u00e0 faire des calculs \u00abb\u00eates et r\u00e9p\u00e9titifs\u00bb \u00e9tait parfaite pour faire les calculs math\u00e9matiques (inutiles) n\u00e9cessaires au minage des cryptomonnaies. Les cartes graphiques ont donc \u00e9t\u00e9 d\u00e9tourn\u00e9es de leur usage originel, \u00e0 cause de la sp\u00e9cificit\u00e9 de l'impl\u00e9mentation de leur puce. De m\u00eame, les calculs sur les r\u00e9seaux de neurones (essentiels en IA) n\u00e9cessitent une grande rapidit\u00e9 dans les multiplications de matrices. Pour cette raison, Apple a int\u00e9gr\u00e9 directement dans son SoC A15 une puce sp\u00e9calis\u00e9e dans ces calculs (voir plus haut). Exercice # Exercice 2 : Polyn\u00e9sie 2021 Un constructeur automobile int\u00e8gre \u00e0 ses v\u00e9hicules des syst\u00e8mes embarqu\u00e9s, comme par exemple un syst\u00e8me de guidage par satellites (GPS), un syst\u00e8me de freinage antiblocage (ABS)... Ces dispositifs utilisent des syst\u00e8mes sur puces (SoC : System on a Chip). Citer deux avantages \u00e0 utiliser ces syst\u00e8mes sur puces plut\u00f4t qu'une architecture classique d'ordinateur. Bibliographie / Sitographie # Site de Gilles Lassus Num\u00e9rique et Sciences Informatiques, Terminale, T. BALABONSKI, S. CONCHON, J.-C. FILLIATRE, K. NGUYEN, \u00e9ditions ELLIPSES. Pr\u00e9pabac NSI, Terminale, G.CONNAN, V.PETROV, G.ROZSAVOLGYI, L.SIGNAC, \u00e9ditions HATIER. https://www.thewindowsclub.com/history-of-computers https://perso-etis.ensea.fr//lorandel/M2_SoC/s1.pdf https://www.tremplin-numerique.org/apple-a15-vs-a14-quoi-de-neuf-dans-la-puce-de-liphone-13 https://www.distrelec.be/fr/cryptoprocesseur-breakout-atecc608a-sparkfun-electronics-dev-18077/p/30241877","title":"SOC"},{"location":"Terminale/ArchitectureMaterielle/SOC/#soc-system-on-chip","text":"","title":"SOC (System On Chip)"},{"location":"Terminale/ArchitectureMaterielle/SOC/#loi-de-moore-et-miniaturisation-progressive","text":"Gordon E. Moore En 1975, Gordon E. Moore (cofondateur de la soci\u00e9t\u00e9 Intel) \u00e9non\u00e7a la conjecture suivante sur l\u2019\u00e9volution des capacit\u00e9s des circuits int\u00e9gr\u00e9s : dans les microprocesseurs, le nombre de transistors sur une puce va doubler tous les deux ans. Loi de Moore Bien que fond\u00e9e sur un constat empirique entre les ann\u00e9e 1965 et 1975, cette pr\u00e9diction qu\u2019on appelle aussi \"loi de Moore\" s\u2019est r\u00e9v\u00e9l\u00e9e incroyablement juste. On est pass\u00e9 de 2250 transistors en 1971 sur un microprocesseur INTEL 4004 (un des premiers microprocesseurs) \u00e0 plusieurs dizaines de milliards aujourd\u2019hui sur les derniers microprocesseurs. Sur ces derniers, la taille des transistors n\u2019est que de 5 nm soit \u00e0 peine plus que l\u2019\u00e9paisseur de quelques dizaines d\u2019atomes de silicium. Loi de Moore Remarque : le transistor est un composant \u00e9lectronique essentiel : il permet de laisser (ou non) passer un courant \u00e9lectrique. Cette loi de Moore est (plus ou moins) g\u00e9n\u00e9ralisable \u00e0 tous les composants \u00e9lectroniques (m\u00e9moire, etc...). Cela a permis non seulement une augmentation de puissance de calcul des ordinateurs gr\u00e2ce \u00e0 une diminution de la distance entre les composants mais \u00e9galement une baisse des co\u00fbts (en rassemblant plusieurs composants en un seul). La diminution de la taille des transistors a \u00e9galement permis de baisser la tension \u00e9lectrique pour les faire fonctionner, ce qui a engendr\u00e9 une baisse de consommation \u00e9nerg\u00e9tique. La miniaturisation est telle qu\u2019il est possible de rassembler sur une m\u00eame puce tous les composants essentiels d\u2019un ordinateur (microprocesseur, m\u00e9moire, GPU, interfaces d\u2019entr\u00e9e-sorties, etc....). Ces syst\u00e8mes complets que l\u2019on retrouve dans tous les smartphones, les tablettes s\u2019appellent System On a Chip (SOC) ou syst\u00e8me sur une puce en fran\u00e7ais. Exercice 1 : Si dans les ann\u00e9es 70, on pouvait placer 2000 transistors sur une surface de 10 mm 2 , quelle surface aurait \u00e9t\u00e9 n\u00e9cessaire pour placer deux milliards de transistor","title":"Loi de Moore et miniaturisation progressive"},{"location":"Terminale/ArchitectureMaterielle/SOC/#evolution-en-image-de-la-taille-des-ordinateurs","text":"IBM 650, le premier ordinateur fabriqu\u00e9 en s\u00e9rie (1955) Cet ordinateur n'a pas encore de transistors mais des tubes \u00e0 vide. IBM 7090, le premier ordinateur \u00e0 transistors (1959) Ordinateurs actuels Chaque composant a un r\u00f4le sp\u00e9cifique. Ils communiquent entre eux par des bus de diff\u00e9rentes vitesses. Chaque composant est rempla\u00e7able, et il est possible d'ajouter de nouveaux composants sur la carte m\u00e8re qui poss\u00e8de des slots d'extension.","title":"\u00c9volution en image de la taille des ordinateurs"},{"location":"Terminale/ArchitectureMaterielle/SOC/#tout-un-pc-sur-une-seule-puce-les-soc","text":"","title":"Tout un pc sur une seule puce : les SoC"},{"location":"Terminale/ArchitectureMaterielle/SOC/#lintegration-de-composants-differents-au-sein-dune-meme-puce","text":"Le principe d'un syst\u00e8me sur puce ou System On a Chip (SoC) est d'int\u00e9grer au sein d'une puce unique un ensemble de composants habituellement physiquement dissoci\u00e9s dans un ordinateur classique (ordinateur de bureau ou ordinateur portable). On peut retrouver ainsi au sein d'une m\u00eame puce : le microprocesseur (CPU) la carte graphique (GPU) la m\u00e9moire RAM \u00e9ventuellement des composants de communication (WiFi, Bluetooth...) Avantages et inconv\u00e9nients d'un SoC : Avantages moindre consommation \u00e9lectrique moindre encombrement pas besoin de refroidissement meilleure s\u00e9curit\u00e9 (vue globale sur la s\u00e9curit\u00e9 qui n'est plus d\u00e9pendante d'une multitude de composants) moindre co\u00fbt (forte automisation du processus, gros volumes de production) Inconv\u00e9nients Impossibilit\u00e9 de choisir ind\u00e9pendamment ses composants Pas de mise \u00e0 jour possible / remplacement / ajout d'un composant La panne d'un seul composant entra\u00eene la panne totale du SoC","title":"L'int\u00e9gration de composants diff\u00e9rents au sein d'une m\u00eame puce"},{"location":"Terminale/ArchitectureMaterielle/SOC/#exemple-le-m3-dapple","text":"Les processeurs Apple silicon sont des processeurs SoC et SiP con\u00e7us par Apple et utilisant principalement l'architecture ARM. Ils sont la base des appareils iPhone, iPad et Apple Watch ainsi que de produits tels que le HomePod, l'iPod touch et l'Apple TV. Un SoC est \u00e9galement con\u00e7u pour sa gamme d'\u00e9couteurs sans fil AirPods appel\u00e9 Apple H1. Le 22 juin 2020, la firme am\u00e9ricaine annonce son intention de faire la transition des Macintosh vers ARM et de se passer \u00e0 terme des processeurs Intel. Bien qu'Apple sous-traite toute sa fabrication, y compris celle de ses propres SoC, elle con\u00e7oit les processeurs et contr\u00f4le enti\u00e8rement leur int\u00e9gration dans le mat\u00e9riel et les logiciels de l'entreprise. La famille M3 : Caract\u00e9ristiques de la famille M3 :","title":"Exemple : le M3 d'Apple"},{"location":"Terminale/ArchitectureMaterielle/SOC/#des-puces-dediees-a-des-taches-specifiques","text":"L'int\u00e9gration dans un SoC n'est pas totale : il reste des puces d\u00e9di\u00e9es \u00e0 des t\u00e2ches tr\u00e8s sp\u00e9cifiques qui ne sont pas forc\u00e9ment int\u00e9gr\u00e9es dans le SoC.","title":"Des puces d\u00e9di\u00e9es \u00e0 des t\u00e2ches sp\u00e9cifiques"},{"location":"Terminale/ArchitectureMaterielle/SOC/#au-sein-dun-telephone","text":"Ainsi, d'apr\u00e8s le site iFixit , on peut retrouver ceci dans l'iPhone Pro 13, au c\u00f4t\u00e9 de la puce A15 : On voit que (par exemple) qu'il existe une puce sp\u00e9cifique pour g\u00e9rer l'audio, une puce sp\u00e9cifique pour le module WiFi, une puce sp\u00e9cifique pour le module Modem 5G...","title":"Au sein d'un t\u00e9l\u00e9phone"},{"location":"Terminale/ArchitectureMaterielle/SOC/#en-electronique-grand-public","text":"Ce composant (pouvant \u00eatre utilis\u00e9 dans un montage personnel, sur un Arduino par exemple) ne sert qu'\u00e0 faire des calculs cryptographiques.","title":"En \u00e9lectronique \u00abgrand public\u00bb"},{"location":"Terminale/ArchitectureMaterielle/SOC/#un-principe-general","text":"Il est important de comprendre que certains processeurs sont optimis\u00e9s pour un certains types de calcul. C'est le cas par exemple d'une carte graphique, qui excelle dans le calcul de rendus de polygones. On s'est aper\u00e7u que cette aptitude \u00e0 faire des calculs \u00abb\u00eates et r\u00e9p\u00e9titifs\u00bb \u00e9tait parfaite pour faire les calculs math\u00e9matiques (inutiles) n\u00e9cessaires au minage des cryptomonnaies. Les cartes graphiques ont donc \u00e9t\u00e9 d\u00e9tourn\u00e9es de leur usage originel, \u00e0 cause de la sp\u00e9cificit\u00e9 de l'impl\u00e9mentation de leur puce. De m\u00eame, les calculs sur les r\u00e9seaux de neurones (essentiels en IA) n\u00e9cessitent une grande rapidit\u00e9 dans les multiplications de matrices. Pour cette raison, Apple a int\u00e9gr\u00e9 directement dans son SoC A15 une puce sp\u00e9calis\u00e9e dans ces calculs (voir plus haut).","title":"Un principe g\u00e9n\u00e9ral"},{"location":"Terminale/ArchitectureMaterielle/SOC/#exercice","text":"Exercice 2 : Polyn\u00e9sie 2021 Un constructeur automobile int\u00e8gre \u00e0 ses v\u00e9hicules des syst\u00e8mes embarqu\u00e9s, comme par exemple un syst\u00e8me de guidage par satellites (GPS), un syst\u00e8me de freinage antiblocage (ABS)... Ces dispositifs utilisent des syst\u00e8mes sur puces (SoC : System on a Chip). Citer deux avantages \u00e0 utiliser ces syst\u00e8mes sur puces plut\u00f4t qu'une architecture classique d'ordinateur.","title":"Exercice"},{"location":"Terminale/ArchitectureMaterielle/SOC/#bibliographie-sitographie","text":"Site de Gilles Lassus Num\u00e9rique et Sciences Informatiques, Terminale, T. BALABONSKI, S. CONCHON, J.-C. FILLIATRE, K. NGUYEN, \u00e9ditions ELLIPSES. Pr\u00e9pabac NSI, Terminale, G.CONNAN, V.PETROV, G.ROZSAVOLGYI, L.SIGNAC, \u00e9ditions HATIER. https://www.thewindowsclub.com/history-of-computers https://perso-etis.ensea.fr//lorandel/M2_SoC/s1.pdf https://www.tremplin-numerique.org/apple-a15-vs-a14-quoi-de-neuf-dans-la-puce-de-liphone-13 https://www.distrelec.be/fr/cryptoprocesseur-breakout-atecc608a-sparkfun-electronics-dev-18077/p/30241877","title":"Bibliographie / Sitographie"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/","text":"Syst\u00e8mes d'exploitation # Arborescence Linux # La ligne de commande est une interface textuelle pour piloter le syst\u00e8me d\u2019exploitation d\u2019un ordinateur. Pour acc\u00e9der \u00e0 la ligne de commande, on utilise un terminal, appel\u00e9 \u00e9galement console. Les fichiers et r\u00e9pertoires d\u2019un ordinateur forment une arborescence appel\u00e9e syst\u00e8me de fichiers (filesystem). Le point de d\u00e9part du syst\u00e8me de fichiers est un r\u00e9pertoire appel\u00e9 racine, not\u00e9e / (slash) sous Linux. Chaque r\u00e9pertoire peut contenir des fichiers ainsi que des sous-r\u00e9pertoires. L\u2019arborescence d\u2019un syst\u00e8me GNU/Linux se pr\u00e9sente sous la forme repr\u00e9sent\u00e9e ci-dessous. Arborescence Linux Remarque : on voit que sous GNU/Linux, un fichier ne poss\u00e8de pas forcement une extension. Voici une br\u00e8ve description des diff\u00e9rents dossiers : Le syst\u00e8me de fichiers racine (root file system), soit le syst\u00e8me de fichiers primaire est associ\u00e9 au r\u00e9pertoire le plus haut : /bin : commandes binaires utilisateur essentielles (pour tous les utilisateurs) /boot : fichiers statiques du chargeur de lancement /dev : fichiers de p\u00e9riph\u00e9riques /etc : configuration syst\u00e8me sp\u00e9cifique \u00e0 la machine /home : r\u00e9pertoires personnels des utilisateurs (optionnel) /lib : biblioth\u00e8ques partag\u00e9es essentielles et modules du noyau /mnt : point de montage pour les syst\u00e8mes de fichiers mont\u00e9s temporairement /proc : syst\u00e8me de fichiers virtuel d'information du noyau et des processus /root r\u00e9pertoire personnel de root (optionnel) /sbin binaires syst\u00e8me (binaires auparavant mis dans /etc) /sys \u00e9tat des p\u00e9riph\u00e9riques (model device) et sous-syst\u00e8mes (subsystems) /tmp fichiers temporaires Chemin relatif ou chemin absolu # L\u2019emplacement de chaque ressource (fichier ou r\u00e9pertoire) dans le syst\u00e8me de fichiers est appel\u00e9 son chemin. Dans un chemin Linux, le s\u00e9parateur dans entre deux r\u00e9pertoires est le caract\u00e8re /. On distingue deux types de chemins : Un chemin absolu identifie une ressource en commen\u00e7ant \u00e0 la racine de l\u2019arborescence, avec le caract\u00e8re /. Un chemin absolu ne d\u00e9pend pas du r\u00e9pertoire courant et est donc valide partout. /home/baptiste/hello.txt et /etc/apache/httpd.conf sont des exemples de chemins absolus. Un chemin relatif identifie une ressource \u00e0 partir du r\u00e9pertoire courant. Il d\u00e9pend donc du r\u00e9pertoire courant et n\u2019est pas valide partout. ../marc/adresses.txt et documents/cours/si1.pdf (sans / au d\u00e9but !) sont des exemples de chemins relatifs. Commandes linux # Pr\u00e9ambule # Attention, Linux est sensible \u00e0 la casse ; Fichiers cach\u00e9s. Sous Unix, les fichiers cach\u00e9s commencent par un point. Par exemple, /.bashrc est un fichier cach\u00e9, dans le r\u00e9pertoire maison de l\u2019utilisateur, qui contient la configuration de son shell. * Par exemple \" .jpg\" repr\u00e9sente tous les fichiers se terminant par jpg ; \" toto \" tous les fichiers contenant \"toto\". Il faut \u00e9galement savoir que c\u2019est le shell qui interpr\u00e8te ces caract\u00e8res avant de transmettre la ligne de commande. Par exemple, si vous tapez : rm .tmp, le shell transformera cette ligne de commande en : rm truc1.tmp truc2.tmp truc3.tmp. Commandes # Naviguer cd (change directory) permet de se d\u00e9placer dans le syst\u00e8me de fichiers en changeant de r\u00e9pertoire courant. cd monrep fait du r\u00e9pertoire monrep le r\u00e9pertoire courant. cd .. permet de remonter d\u2019un niveau dans l\u2019arborescence. cd / permet de revenir \u00e0 la racine de l\u2019arborescence. cd permet de revenir \u00e0 la racine du r\u00e9pertoire personnel. ls (list) affiche le contenu du r\u00e9pertoire courant. pwd : afficher le r\u00e9pertoire o\u00f9 l\u2019on se trouve exactement. D\u00e9placer, copier, renommer cp : copier des fichiers ou des r\u00e9pertoires. mkdir : cr\u00e9er un dossier. mv : renommer ou d\u00e9placer un fichier ou un dossier. ln : cr\u00e9er des liens durs et liens symboliques. rm : supprimer un fichier ou un dossier. rmdir : supprimer un dossier vide (plus s\u00fbre que rm). touch : cr\u00e9er un fichier. Changer les droits chmod : g\u00e9rer la distribution des droits d\u2019un fichier. chown : g\u00e9rer la propri\u00e9t\u00e9 d\u2019un fichier. umask : cr\u00e9ation automatique des droits. Access Control List : Gestion des droits avanc\u00e9s (experts). Lire un fichier texte cat : permet (entre autres) d\u2019afficher le contenu d\u2019un fichier. Pour lister les processus ps top Droits et permissions sous UNIX # Le syst\u00e8me de droits et de permissions sous UNIX est aspects fondamentaux de la gestion de la s\u00e9curit\u00e9 du syst\u00e8me. Droits et groupes # En Linux, tout fichier, et par extension dossier, appartient \u00e0 un propri\u00e9taire ainsi qu'\u00e0 un groupe et un utilisateur quelconque ne pourra pas forc\u00e9ment avoir tous les droits sur un fichier qui ne lui appartient pas. Par exemple, \u00e9tudions la sortie donn\u00e9e par la commande ls -l suivante : drwxr-xr-x 2 eric eric 4096 Apr. 8 23:09 Images d indique qu'il s'agit d'un dossier ; les 9 lettres suivantes indiquent les droits dont disposent les utilisateurs sur ce fichier ; le 2 est pour nous sans int\u00e9r\u00eat (il s'agit d'un compteur de liaison) ; le groupe de lettre suivant est le nom de l'utilisateur propri\u00e9taire du fichier ; le groupe de lettre suivant est le nom du groupe propri\u00e9taire du fichier ; 4096 repr\u00e9sente la taille en octet du dossier ; on trouve ensuite la date et l'heure de la derni\u00e8re modication ; le nom du dossier. Pour un fichier, on distinguera trois types d'utilisateurs : u pour user, c'est-\u00e0-dire le propri\u00e9taire du fichier ; g pour group, le groupe auquel appartient le fichier ; o pour other, tous les autres utilisateurs. Root # Par d\u00e9faut, il existe un super-utilisateur nomm\u00e9 root qui poss\u00e8de tous les droits sur un os Linux. Pour modier des attributs au niveau syst\u00e8me, il faut prendre les droits de super-utilisateur, gr\u00e2ce \u00e0 la commande sudo (super-user do). Cette commande demande syst\u00e9matiquement \u00e0 l'utilisateur faisant partie du groupe des super-utilisateurs (sudoers)de confirmer avec son mot de passe (celui choisi \u00e0 l'installation du syst\u00e8me) toute action de modication effectu\u00e9e au niveau du syt\u00e8me. Les droits # Pour un fichier donn\u00e9, on distinguera 4 permissions : r (read) : droit de lire le fichier ; w (write) : droit de modifier le fichier ; x (execute) : droit d'ex\u00e9cution du fichier ; - : aucun droit sur le fichier. Modification des Droits # Pour donner ou supprimer des permissions sur un fichier mon_texte.txt , on utilise la commande chmod de la mani\u00e8re suivante : pour donner les droits en lecture et \u00e9criture \u00e0 l'utilisateur chmod u+rw mon_texte.txt pour supprimer les droits en modication au groupe : chmod g-w mon_texte.txt pour supprimer tous les droits aux autres utilisateurs : chmod o-rwx mon_texte.txt Notation octale # Il est aussi possible d'utiliser la notation octale pour g\u00e9rer ces droits. Par exemple, la commande suivante : chmod 640 mon_texte.txt en sachant que r = 4 , w = 2 , x = 1 , et que le premier chiffre correspond \u00e0 l'utilisateur, le second au groupe, et le troisi\u00e8me aux autres. Ainsi dans l'exemple propos\u00e9 : l'utilisateur \u00e0 les droits de lecture et d'\u00e9criture (4+2 = 6) ; le groupe \u00e0 le droit de lecture (4) ; les autres n'ont aucun droit (0). Une commande telle que chmod 777 mon_texte.txt donne tous les droits de lecture, \u00e9criture et ex\u00e9cution \u00e0 tous les utilisateurs du syst\u00e8me pour le fichier mon_texte.txt . Exercices # Installation de WSL # Windows Subsystem for Linux (WSL) est une couche de compatibilit\u00e9 permettant d'ex\u00e9cuter des ex\u00e9cutables binaires Linux de mani\u00e8re native sur les derni\u00e8res versions de Windows (\u00e0 partir de windows 10). La version WSL 2, sortie en mai 2019, introduit la pr\u00e9sence d'un v\u00e9ritable noyau Linux. Pour installer la distribution Ubuntu, lancer l'invite de commande windows ( cmd depuis la barre de recherche), puis : wsl -install -d Ubuntu Utilisation de WSL : Une fois install\u00e9, vous avez acc\u00e8s \u00e0 la distribution depuis l'invite de commande windows par l'interm\u00e9diaire de la commande : wsl Remarque : Si wsl ne fonctionne pas, un simulateur existe sur la page web suivante : xlinux Vous acc\u00e9dez alors \u00e0 un terminal Linux tout ce qui est des plus classique. Le prompt est de la forme nom_utilisateur@nom_machine : chemin_dossier_courant $ . Normalement, votre r\u00e9pertoire courant est symbolis\u00e9 par ~ , ce qui est un raccourci pour symboliser le r\u00e9pertoire personnel de l'utilisateur. Partie pratique # R\u00e9pertoire courant et chemin absolu Par d\u00e9faut le terminal s\u2019ouvre dans le r\u00e9pertoire utilisateur. Utilisez la commande pwd pour d\u00e9terminer le nom du r\u00e9pertoire courant et son chemin absolu. R\u00e9ponse Dans mon cas : /home/galand Lister les fichiers d\u2019un r\u00e9pertoire Utilisez la commande man ls pour ouvrir le manuel de la commande ls (le site permet d'avoir une traduction). Tester plusieurs options puis r\u00e9pondre aux questions suivantes. 1) Quelle option permet de lister les fichiers et r\u00e9pertoires en donnant leur descriptif complet ? 2) Quelle option permet d\u2019afficher les fichiers et r\u00e9pertoires commen\u00e7ant par . ? 3) Tapez ls /var et lister les fichiers et r\u00e9pertoires du r\u00e9pertoires var se situant \u00e0 la racine du syst\u00e8me de fichier. Construction d\u2019une arborescence On envisage de construire l\u2019arborescence suivante : 1) A quel r\u00e9pertoire se r\u00e9f\u00e8re ~ ? 2) Cr\u00e9er les r\u00e9pertoires et les fichiers repr\u00e9sent\u00e9s par l'arborescence ci-dessus. R\u00e9ponse 1) ~ se r\u00e9f\u00e8re \u00e0 votre r\u00e9pertoire personnel. Exercices sans ordinateur # Exercice 1 # Exercice 1 type bac L\u2019entreprise capNSI g\u00e8re les contrats de ses clients en cr\u00e9ant pour chacun d\u2019eux un sous-dossier dans le dossier Contrats sur leur ordinateur central. Le syst\u00e8me d\u2019exploitation de cet ordinateur est une distribution linux. Dans la console repr\u00e9sent\u00e9e sur la figure ci-dessous, on peut visualiser les r\u00e9pertoires (ou dossiers) \u00e0 la racine de l\u2019ordinateur central avec l\u2019instruction ls : 1) Donner le nom de l\u2019utilisateur et le nom de l\u2019ordinateur correspondant \u00e0 la capture d\u2019\u00e9cran pr\u00e9c\u00e9dente. 2) \u00c9crire les instructions permettant d\u2019afficher la liste des dossiers clients du r\u00e9pertoire Contrats en partant de la situation ci-dessous : Apr\u00e8s une campagne de d\u00e9marchage, l\u2019entreprise a gagn\u00e9 un nouveau client, Monsieur Alan Turing. Elle souhaite lui cr\u00e9er un sous-dossier nomm\u00e9 TURING_Alan dans le dossier Contrats . De plus, elle souhaite attribuer tous les droits \u00e0 l\u2019utilisateur et au groupe et seulement la permission en lecture pour tous les autres utilisateurs. 3) \u00c9crire les instructions permettant de cr\u00e9er le sous-dossier TURING_Alan \u00e0 partir du r\u00e9pertoire racine. 4) \u00c9crire l\u2019instruction permettant d\u2019attribuer les bons droits au sous-dossier TURING_Alan . reponse 1) utilisateur : gestion ; ordinateur : capNSI-ordinateur_central 2) ls Contrats 3) mkdir Contrats/TURING_Alan 4) chmod 774 Contrats/TURING_Alan (l\u2019exemple dans l\u2019annexe ne fonctionne pas) Exercice 2 # 1) Sur une machine \u00e9quip\u00e9e du syst\u00e8me d\u2019exploitation GNU/Linux, les informations sont enregistr\u00e9es dans un fichier du r\u00e9pertoire collections. Dans le sch\u00e9ma ci-dessous, on trouve des r\u00e9pertoires (encadr\u00e9s par un rectangle, exemple : travail ) et des fichiers (les noms non encadr\u00e9s, comme rapport.odt ). Sachant que le r\u00e9pertoire courant est le r\u00e9pertoire fiches, indiquer sur la copie les num\u00e9ros de toutes les commandes parmi celles propos\u00e9es cidessous qui permettent de se positionner dans le r\u00e9pertoire timbres : Commande 1 : cd /home/documents/collections/timbres Commande 2 : cd ./collections/timbres Commande 3 : cd /timbres Commande 4 : cd documents/collections/timbres Commande 5 : cd ../collections/timbres Commande 6 : cd timbres 2) Donner une commande qui permet d\u2019acc\u00e9der au r\u00e9pertoire timbres \u00e0 partir de la racine. R\u00e9ponse 1) Commande 1 ; Commande 5 2) cd /home/documents/collections/timbres","title":"Linux"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#systemes-dexploitation","text":"","title":"Syst\u00e8mes d'exploitation"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#arborescence-linux","text":"La ligne de commande est une interface textuelle pour piloter le syst\u00e8me d\u2019exploitation d\u2019un ordinateur. Pour acc\u00e9der \u00e0 la ligne de commande, on utilise un terminal, appel\u00e9 \u00e9galement console. Les fichiers et r\u00e9pertoires d\u2019un ordinateur forment une arborescence appel\u00e9e syst\u00e8me de fichiers (filesystem). Le point de d\u00e9part du syst\u00e8me de fichiers est un r\u00e9pertoire appel\u00e9 racine, not\u00e9e / (slash) sous Linux. Chaque r\u00e9pertoire peut contenir des fichiers ainsi que des sous-r\u00e9pertoires. L\u2019arborescence d\u2019un syst\u00e8me GNU/Linux se pr\u00e9sente sous la forme repr\u00e9sent\u00e9e ci-dessous. Arborescence Linux Remarque : on voit que sous GNU/Linux, un fichier ne poss\u00e8de pas forcement une extension. Voici une br\u00e8ve description des diff\u00e9rents dossiers : Le syst\u00e8me de fichiers racine (root file system), soit le syst\u00e8me de fichiers primaire est associ\u00e9 au r\u00e9pertoire le plus haut : /bin : commandes binaires utilisateur essentielles (pour tous les utilisateurs) /boot : fichiers statiques du chargeur de lancement /dev : fichiers de p\u00e9riph\u00e9riques /etc : configuration syst\u00e8me sp\u00e9cifique \u00e0 la machine /home : r\u00e9pertoires personnels des utilisateurs (optionnel) /lib : biblioth\u00e8ques partag\u00e9es essentielles et modules du noyau /mnt : point de montage pour les syst\u00e8mes de fichiers mont\u00e9s temporairement /proc : syst\u00e8me de fichiers virtuel d'information du noyau et des processus /root r\u00e9pertoire personnel de root (optionnel) /sbin binaires syst\u00e8me (binaires auparavant mis dans /etc) /sys \u00e9tat des p\u00e9riph\u00e9riques (model device) et sous-syst\u00e8mes (subsystems) /tmp fichiers temporaires","title":"Arborescence Linux"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#chemin-relatif-ou-chemin-absolu","text":"L\u2019emplacement de chaque ressource (fichier ou r\u00e9pertoire) dans le syst\u00e8me de fichiers est appel\u00e9 son chemin. Dans un chemin Linux, le s\u00e9parateur dans entre deux r\u00e9pertoires est le caract\u00e8re /. On distingue deux types de chemins : Un chemin absolu identifie une ressource en commen\u00e7ant \u00e0 la racine de l\u2019arborescence, avec le caract\u00e8re /. Un chemin absolu ne d\u00e9pend pas du r\u00e9pertoire courant et est donc valide partout. /home/baptiste/hello.txt et /etc/apache/httpd.conf sont des exemples de chemins absolus. Un chemin relatif identifie une ressource \u00e0 partir du r\u00e9pertoire courant. Il d\u00e9pend donc du r\u00e9pertoire courant et n\u2019est pas valide partout. ../marc/adresses.txt et documents/cours/si1.pdf (sans / au d\u00e9but !) sont des exemples de chemins relatifs.","title":"Chemin relatif ou chemin absolu"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#commandes-linux","text":"","title":"Commandes linux"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#preambule","text":"Attention, Linux est sensible \u00e0 la casse ; Fichiers cach\u00e9s. Sous Unix, les fichiers cach\u00e9s commencent par un point. Par exemple, /.bashrc est un fichier cach\u00e9, dans le r\u00e9pertoire maison de l\u2019utilisateur, qui contient la configuration de son shell. * Par exemple \" .jpg\" repr\u00e9sente tous les fichiers se terminant par jpg ; \" toto \" tous les fichiers contenant \"toto\". Il faut \u00e9galement savoir que c\u2019est le shell qui interpr\u00e8te ces caract\u00e8res avant de transmettre la ligne de commande. Par exemple, si vous tapez : rm .tmp, le shell transformera cette ligne de commande en : rm truc1.tmp truc2.tmp truc3.tmp.","title":"Pr\u00e9ambule"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#commandes","text":"Naviguer cd (change directory) permet de se d\u00e9placer dans le syst\u00e8me de fichiers en changeant de r\u00e9pertoire courant. cd monrep fait du r\u00e9pertoire monrep le r\u00e9pertoire courant. cd .. permet de remonter d\u2019un niveau dans l\u2019arborescence. cd / permet de revenir \u00e0 la racine de l\u2019arborescence. cd permet de revenir \u00e0 la racine du r\u00e9pertoire personnel. ls (list) affiche le contenu du r\u00e9pertoire courant. pwd : afficher le r\u00e9pertoire o\u00f9 l\u2019on se trouve exactement. D\u00e9placer, copier, renommer cp : copier des fichiers ou des r\u00e9pertoires. mkdir : cr\u00e9er un dossier. mv : renommer ou d\u00e9placer un fichier ou un dossier. ln : cr\u00e9er des liens durs et liens symboliques. rm : supprimer un fichier ou un dossier. rmdir : supprimer un dossier vide (plus s\u00fbre que rm). touch : cr\u00e9er un fichier. Changer les droits chmod : g\u00e9rer la distribution des droits d\u2019un fichier. chown : g\u00e9rer la propri\u00e9t\u00e9 d\u2019un fichier. umask : cr\u00e9ation automatique des droits. Access Control List : Gestion des droits avanc\u00e9s (experts). Lire un fichier texte cat : permet (entre autres) d\u2019afficher le contenu d\u2019un fichier. Pour lister les processus ps top","title":"Commandes"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#droits-et-permissions-sous-unix","text":"Le syst\u00e8me de droits et de permissions sous UNIX est aspects fondamentaux de la gestion de la s\u00e9curit\u00e9 du syst\u00e8me.","title":"Droits et permissions sous UNIX"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#droits-et-groupes","text":"En Linux, tout fichier, et par extension dossier, appartient \u00e0 un propri\u00e9taire ainsi qu'\u00e0 un groupe et un utilisateur quelconque ne pourra pas forc\u00e9ment avoir tous les droits sur un fichier qui ne lui appartient pas. Par exemple, \u00e9tudions la sortie donn\u00e9e par la commande ls -l suivante : drwxr-xr-x 2 eric eric 4096 Apr. 8 23:09 Images d indique qu'il s'agit d'un dossier ; les 9 lettres suivantes indiquent les droits dont disposent les utilisateurs sur ce fichier ; le 2 est pour nous sans int\u00e9r\u00eat (il s'agit d'un compteur de liaison) ; le groupe de lettre suivant est le nom de l'utilisateur propri\u00e9taire du fichier ; le groupe de lettre suivant est le nom du groupe propri\u00e9taire du fichier ; 4096 repr\u00e9sente la taille en octet du dossier ; on trouve ensuite la date et l'heure de la derni\u00e8re modication ; le nom du dossier. Pour un fichier, on distinguera trois types d'utilisateurs : u pour user, c'est-\u00e0-dire le propri\u00e9taire du fichier ; g pour group, le groupe auquel appartient le fichier ; o pour other, tous les autres utilisateurs.","title":"Droits et groupes"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#root","text":"Par d\u00e9faut, il existe un super-utilisateur nomm\u00e9 root qui poss\u00e8de tous les droits sur un os Linux. Pour modier des attributs au niveau syst\u00e8me, il faut prendre les droits de super-utilisateur, gr\u00e2ce \u00e0 la commande sudo (super-user do). Cette commande demande syst\u00e9matiquement \u00e0 l'utilisateur faisant partie du groupe des super-utilisateurs (sudoers)de confirmer avec son mot de passe (celui choisi \u00e0 l'installation du syst\u00e8me) toute action de modication effectu\u00e9e au niveau du syt\u00e8me.","title":"Root"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#les-droits","text":"Pour un fichier donn\u00e9, on distinguera 4 permissions : r (read) : droit de lire le fichier ; w (write) : droit de modifier le fichier ; x (execute) : droit d'ex\u00e9cution du fichier ; - : aucun droit sur le fichier.","title":"Les droits"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#modification-des-droits","text":"Pour donner ou supprimer des permissions sur un fichier mon_texte.txt , on utilise la commande chmod de la mani\u00e8re suivante : pour donner les droits en lecture et \u00e9criture \u00e0 l'utilisateur chmod u+rw mon_texte.txt pour supprimer les droits en modication au groupe : chmod g-w mon_texte.txt pour supprimer tous les droits aux autres utilisateurs : chmod o-rwx mon_texte.txt","title":"Modification des Droits"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#notation-octale","text":"Il est aussi possible d'utiliser la notation octale pour g\u00e9rer ces droits. Par exemple, la commande suivante : chmod 640 mon_texte.txt en sachant que r = 4 , w = 2 , x = 1 , et que le premier chiffre correspond \u00e0 l'utilisateur, le second au groupe, et le troisi\u00e8me aux autres. Ainsi dans l'exemple propos\u00e9 : l'utilisateur \u00e0 les droits de lecture et d'\u00e9criture (4+2 = 6) ; le groupe \u00e0 le droit de lecture (4) ; les autres n'ont aucun droit (0). Une commande telle que chmod 777 mon_texte.txt donne tous les droits de lecture, \u00e9criture et ex\u00e9cution \u00e0 tous les utilisateurs du syst\u00e8me pour le fichier mon_texte.txt .","title":"Notation octale"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#exercices","text":"","title":"Exercices"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#installation-de-wsl","text":"Windows Subsystem for Linux (WSL) est une couche de compatibilit\u00e9 permettant d'ex\u00e9cuter des ex\u00e9cutables binaires Linux de mani\u00e8re native sur les derni\u00e8res versions de Windows (\u00e0 partir de windows 10). La version WSL 2, sortie en mai 2019, introduit la pr\u00e9sence d'un v\u00e9ritable noyau Linux. Pour installer la distribution Ubuntu, lancer l'invite de commande windows ( cmd depuis la barre de recherche), puis : wsl -install -d Ubuntu Utilisation de WSL : Une fois install\u00e9, vous avez acc\u00e8s \u00e0 la distribution depuis l'invite de commande windows par l'interm\u00e9diaire de la commande : wsl Remarque : Si wsl ne fonctionne pas, un simulateur existe sur la page web suivante : xlinux Vous acc\u00e9dez alors \u00e0 un terminal Linux tout ce qui est des plus classique. Le prompt est de la forme nom_utilisateur@nom_machine : chemin_dossier_courant $ . Normalement, votre r\u00e9pertoire courant est symbolis\u00e9 par ~ , ce qui est un raccourci pour symboliser le r\u00e9pertoire personnel de l'utilisateur.","title":"Installation de WSL"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#partie-pratique","text":"R\u00e9pertoire courant et chemin absolu Par d\u00e9faut le terminal s\u2019ouvre dans le r\u00e9pertoire utilisateur. Utilisez la commande pwd pour d\u00e9terminer le nom du r\u00e9pertoire courant et son chemin absolu. R\u00e9ponse Dans mon cas : /home/galand Lister les fichiers d\u2019un r\u00e9pertoire Utilisez la commande man ls pour ouvrir le manuel de la commande ls (le site permet d'avoir une traduction). Tester plusieurs options puis r\u00e9pondre aux questions suivantes. 1) Quelle option permet de lister les fichiers et r\u00e9pertoires en donnant leur descriptif complet ? 2) Quelle option permet d\u2019afficher les fichiers et r\u00e9pertoires commen\u00e7ant par . ? 3) Tapez ls /var et lister les fichiers et r\u00e9pertoires du r\u00e9pertoires var se situant \u00e0 la racine du syst\u00e8me de fichier. Construction d\u2019une arborescence On envisage de construire l\u2019arborescence suivante : 1) A quel r\u00e9pertoire se r\u00e9f\u00e8re ~ ? 2) Cr\u00e9er les r\u00e9pertoires et les fichiers repr\u00e9sent\u00e9s par l'arborescence ci-dessus. R\u00e9ponse 1) ~ se r\u00e9f\u00e8re \u00e0 votre r\u00e9pertoire personnel.","title":"Partie pratique"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#exercices-sans-ordinateur","text":"","title":"Exercices sans ordinateur"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#exercice-1","text":"Exercice 1 type bac L\u2019entreprise capNSI g\u00e8re les contrats de ses clients en cr\u00e9ant pour chacun d\u2019eux un sous-dossier dans le dossier Contrats sur leur ordinateur central. Le syst\u00e8me d\u2019exploitation de cet ordinateur est une distribution linux. Dans la console repr\u00e9sent\u00e9e sur la figure ci-dessous, on peut visualiser les r\u00e9pertoires (ou dossiers) \u00e0 la racine de l\u2019ordinateur central avec l\u2019instruction ls : 1) Donner le nom de l\u2019utilisateur et le nom de l\u2019ordinateur correspondant \u00e0 la capture d\u2019\u00e9cran pr\u00e9c\u00e9dente. 2) \u00c9crire les instructions permettant d\u2019afficher la liste des dossiers clients du r\u00e9pertoire Contrats en partant de la situation ci-dessous : Apr\u00e8s une campagne de d\u00e9marchage, l\u2019entreprise a gagn\u00e9 un nouveau client, Monsieur Alan Turing. Elle souhaite lui cr\u00e9er un sous-dossier nomm\u00e9 TURING_Alan dans le dossier Contrats . De plus, elle souhaite attribuer tous les droits \u00e0 l\u2019utilisateur et au groupe et seulement la permission en lecture pour tous les autres utilisateurs. 3) \u00c9crire les instructions permettant de cr\u00e9er le sous-dossier TURING_Alan \u00e0 partir du r\u00e9pertoire racine. 4) \u00c9crire l\u2019instruction permettant d\u2019attribuer les bons droits au sous-dossier TURING_Alan . reponse 1) utilisateur : gestion ; ordinateur : capNSI-ordinateur_central 2) ls Contrats 3) mkdir Contrats/TURING_Alan 4) chmod 774 Contrats/TURING_Alan (l\u2019exemple dans l\u2019annexe ne fonctionne pas)","title":"Exercice 1"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#exercice-2","text":"1) Sur une machine \u00e9quip\u00e9e du syst\u00e8me d\u2019exploitation GNU/Linux, les informations sont enregistr\u00e9es dans un fichier du r\u00e9pertoire collections. Dans le sch\u00e9ma ci-dessous, on trouve des r\u00e9pertoires (encadr\u00e9s par un rectangle, exemple : travail ) et des fichiers (les noms non encadr\u00e9s, comme rapport.odt ). Sachant que le r\u00e9pertoire courant est le r\u00e9pertoire fiches, indiquer sur la copie les num\u00e9ros de toutes les commandes parmi celles propos\u00e9es cidessous qui permettent de se positionner dans le r\u00e9pertoire timbres : Commande 1 : cd /home/documents/collections/timbres Commande 2 : cd ./collections/timbres Commande 3 : cd /timbres Commande 4 : cd documents/collections/timbres Commande 5 : cd ../collections/timbres Commande 6 : cd timbres 2) Donner une commande qui permet d\u2019acc\u00e9der au r\u00e9pertoire timbres \u00e0 partir de la racine. R\u00e9ponse 1) Commande 1 ; Commande 5 2) cd /home/documents/collections/timbres","title":"Exercice 2"},{"location":"Terminale/ArchitectureMaterielle/processus/","text":"Processus # Les syst\u00e8mes d\u2019exploitation (ou O.S. pour Operating System) # Le syst\u00e8me d\u2019exploitation est un ensemble de programmes qui va permettre d\u2019utiliser les \u00e9l\u00e9ments physiques d\u2019un ordinateur pour ex\u00e9cuter les applications n\u00e9cessaires \u00e0 l\u2019utilisateur. L\u2019\u00e9l\u00e9ment fondamental d\u2019un syst\u00e8me d\u2019exploitation est le noyau (ou kernel en anglais). C\u2019est lui qui g\u00e8re l\u2019acc\u00e8s aux ressources mat\u00e9rielles. Ces principales fonctions sont : le dialogue avec les p\u00e9riph\u00e9riques (microprocesseur, m\u00e9moire, disques, carte graphiques,carte r\u00e9seau, clavier, souris....) ; l\u2019ex\u00e9cution par le microprocesseur des programmes souhait\u00e9s par les utilisateurs et l\u2019ordonnancement de ces t\u00e2ches ; la gestion de l\u2019acc\u00e8s aux ressources, pour permettre d\u2019une part \u00e0 tous les utilisateurs de travailler simultan\u00e9ment, et d\u2019autre part de ne permettre l\u2019utilisation d\u2019une ressource qu\u2019aux utilisateurs autoris\u00e9s. Au dessus du noyau, de tr\u00e8s nombreux programmes sont en charge de toutes les fonctions qui sont offertes aux programmes utilisateurs pour permettre une utilisation compl\u00e8te et optimale de la machine physique (gestionnaire de fichiers, lecture de sons, gestion de l\u2019\u00e9nergie, gestion des communications r\u00e9seau, gestion des performance,...) Les syst\u00e8mes d\u2019exploitation actuels proposent aussi de nombreux outils de niveau sup\u00e9rieur qui apportent du confort de travail \u00e0 l\u2019utilisateur, jusqu\u2019\u00e0 lui \u00e9viter l\u2019installation de programmes (navigateur internet, outil de traitement d\u2019image, logiciel de messagerie, traitement de texte, etc...) Voici quelques exemples de syst\u00e8me d\u2019exploitation : MS-DOS, Windows ; OS/2, Mac-OS Unix (AIX, Xenix, Ultrix, Solaris, etc.) ; Linux ; Android. Mais il en existe d\u2019autres comme Symbian d\u00e9velopp\u00e9 par Nokia, Tizen par Samsung, ... Les syst\u00e8mes d'exploitation ont en charge la gestion des diff\u00e9rents processus. Processus # Introduction # Pour permettre le fonctionnement d\u2019un ordinateur, de nombreuses t\u00e2ches ou applications doivent \u00eatre ex\u00e9cut\u00e9es simultan\u00e9ment par le syst\u00e8me d\u2019exploitation. Notion de processus # Lorsqu'un programme est ex\u00e9cut\u00e9 sur un ordinateur, celui-ci va cr\u00e9er un (ou plusieurs) processus. On dit que ce processus est une instance d'ex\u00e9cution de ce programme. Un processus est caract\u00e9ris\u00e9 par : l'ensemble des instructions qu'il va devoir accomplir (\u00e9crites dans le fichier ex\u00e9cutable obtenu par la compilation du code-source du programme) les ressources que le programme va mobiliser (fichier en ouverture, carte son...) l'\u00e9tat des registres du processeur. Observation des processus sous un syst\u00e8me UNIX (Linux, MacOs, ) # La commande ps # Dans un terminal, la commande ps va permettre d'afficher la liste des processus actifs. Plus pr\u00e9cis\u00e9ment, nous allons utiliser la commande ps -lu nom_user . L'option l permet d'afficher un grand nombre de renseignements et l'option u permet de sp\u00e9cifier l'utilisateur propri\u00e9taire des processus. ps On retrouve notamment dans ce tableau les colonnes : CMD (Command) : le nom de la commande qui a cr\u00e9\u00e9 le processus. Vous pouvez y retrouver par ordre chronologique le nom de tous les programmes actifs. Certains sont ceux que vous avez ouverts volontairement (navigateur...) mais on y trouve surtout tous les programmes n\u00e9cessaires au bon fonctionnement du syst\u00e8me d'exploitation. Le dernier processus en bas de la liste est forc\u00e9ment ps, puisque vous venez de l'appeler. PID (Process Identifier) : le num\u00e9ro unique d'identification, affect\u00e9 chronologiquement par le syst\u00e8me d'exploitation. Le processus de PID \u00e9gal \u00e0 1 est systemd , qui est le tout premier programme lanc\u00e9 par le noyau Linux au d\u00e9marrage. PPID (Parent PID) : certains processus vont eux-m\u00eames lancer plusieurs processus-fils, qui porteront le m\u00eame nom. La commande top # La commande top permet de conna\u00eetre en temps r\u00e9el la liste des processus, class\u00e9s par ordre d\u00e9croissant de consommation de CPU. Elle r\u00e9sume l\u2019utilisation des ressources, de l\u2019unit\u00e9 centrale \u00e0 l\u2019utilisation de la m\u00e9moire. On ferme top par la combinaison de touches Ctrl-C. top En face de chaque processus est affich\u00e9e sa consommation de CPU. Elle est calcul\u00e9e en prenant, sur un intervalle de temps donn\u00e9, le temps qu'a pass\u00e9 le CPU \u00e0 traiter le processus en question, et en divisant ce temps par le temps total de la mesure. \\[Pourcentage\\ en\\ utilisation\\ de\\ CPU = \\dfrac{temps\\ d'utilisation\\ de\\ CPU}{temps\\ total\\ \u00e9coul\u00e9} \\times 100 \\] La commande kill # La commande kill permet de fermer un processus, en donnant son PID en argument. Exemple : kill 1453 tuera Chrome Observation des processus sous Windows # Microsoft Windows est architectur\u00e9 en services (processus) fonctionnant en arri\u00e8re-plan. Il est possible d\u2019afficher facilement la liste des processus en cours dans le gestionnaire des t\u00e2ches en appuyant simultan\u00e9ment sur CTRL+SCHIFT+ESC, ou en ex\u00e9cutant directement taskmgr.exe dans la barre de recherche. Si vous lancez le gestionnaire de tache pour la premi\u00e8re fois, vous serez peut-\u00eatre amen\u00e9 \u00e0 cliquer sur \"Plus de d\u00e9tails \" en bas \u00e0 Gauche de la fen\u00eatre. Vous verrez alors une fen\u00eatre avec six onglets. Dans l\u2019onglet Processus, vous verrez tous ceux s\u2019ex\u00e9cutant sur votre machine, ainsi que les ressources qu\u2019ils consomment. On distingue trois cat\u00e9gories : Applications ; Processus en arri\u00e8re-plan ; Processus Windows. cycle Par un simple clic droit sur son nom, suivi de fin de t\u00e2che on peut facilement tuer un processus, c\u2019est tr\u00e8s pratique lorsqu\u2019un programme ne r\u00e9pond plus. Dans l\u2019onglet Performance , nous pouvons voir graphiquement les ressources utilis\u00e9 Performance Dans l\u2019onglet Historique des applications , nous pouvons voir les ressources utilis\u00e9es par application. Performance Dans l\u2019onglet D\u00e9marrage , nous pouvons voir toutes les applications qui se lancent au d\u00e9marrage de Windows. Dans l\u2019onglet Utilisateur , nous pouvons voir tous les utilisateurs connect\u00e9s sur la machine, par un simple clic droit sur son nom on peut le d\u00e9connecter. Utilisateur Les diff\u00e9rents \u00e9tats d'un processus # Un processus peut-\u00eatre dans les \u00e9tats suivants : cycle L\u2019\u00e9tat nouveau # L\u2019\u00e9tat nouveau (ou cr\u00e9ation) : chargement des instructions, allocation de m\u00e9moires et des ressources (statiquement), il passe directement \u00e0 l\u2019\u00e9tat pr\u00eat. Il existe 4 \u00e9v\u00e9nements pour cr\u00e9er un processus : L\u2019initialisation du syst\u00e8me : au chargement du syst\u00e8me il y\u2019a cr\u00e9ation automatique du processus racine p\u00e8re de tous les processus utilisateurs (id=0) Un processus peut lancer un autre processus, il en devient le parent, l\u2019autre dernier sera d\u00e9sign\u00e9 comme processus fils. (Un processus p\u00e8re ne se termine que lorsque tous ses fils sont termin\u00e9s. On a donc une structure arborescente de processus). Une requ\u00eate de l\u2019utilisateur Initiation d\u2019un travail en traitement par lot ( on ex\u00e9cute le m\u00eame travail sur plusieurs entit\u00e9s \u00e0 la fois, c\u2019est par exemple tr\u00e8s utilis\u00e9 en photographie o\u00f9 on applique la m\u00eame action sur plusieurs clich\u00e9s). Lors de sa cr\u00e9ation, un num\u00e9ro unique d\u2019identification est attribu\u00e9 \u00e0 chaque processus, c\u2019est l\u2019identifiant de processus ou PID (Process IDentifier). Gr\u00e2ce \u00e0 cet identifiant, nous pourrons appliquer diff\u00e9rentes commandes sur le processus. L\u2019\u00e9tat pr\u00eat # Le processus est pr\u00eat \u00e0 \u00eatre ex\u00e9cut\u00e9. Il est mis en attente jusqu\u2019\u00e0 ce qu\u2019on lui lib\u00e8re le processeur, il passera alors \u00e0 l\u2019\u00e9tat Actif ou \u00e9lu. L\u2019\u00e9tat actif ou \u00e9lu # Le processus est en cours d\u2019ex\u00e9cution par le processeur. Si le processus \u00e9puise le temps qui lui est allou\u00e9 par le Syst\u00e8me d\u2019exploitation, il est remis en file d\u2019attente des Pr\u00eats. Si il a besoin d\u2019une ressource non disponible (op\u00e9rations sur les p\u00e9riph\u00e9riques), il est mis en attente prolong\u00e9e (Interruption : \u00e9tat bloqu\u00e9) jusqu\u2019\u00e0 la lib\u00e9ration de la ressource n\u00e9cessaire Si le processus atteint son terme (se termine) il passe \u00e0 l\u2019\u00e9tat Zombie. L\u2019\u00e9tat attente ou bloqu\u00e9 # Pendant son ex\u00e9cution (\u00e9tat \u00c9lu), le processus r\u00e9clame une ressource qui n'est pas imm\u00e9diatement disponible. Son ex\u00e9cution s'interrompt. Lorsque la ressource sera disponible, le processus repassera par l'\u00e9tat Pr\u00eat et attendra \u00e0 nouveau son tour. L\u2019\u00e9tat zombie # Le processus a termin\u00e9 son ex\u00e9cution et il ne peut plus \u00e9voluer mais les ressources qu\u2019il a allou\u00e9es ne sont pas encore lib\u00e9r\u00e9es L\u2019\u00e9tat destruction # Lors de la destruction le processus lib\u00e8re les ressources allou\u00e9es. Il y a quatre causes possibles de la destruction d\u2019un processus : Arr\u00eat normal : volontaire, lorsque le processus termine sa t\u00e2che. Arr\u00eat pour erreur : volontaire suite \u00e0 une erreur pour une instruction ill\u00e9gale Arr\u00eat pour erreur fatale : involontaire tel que les mauvais param\u00e8tres de l\u2019ex\u00e9cution du processus Arr\u00eat volontaire par un autre processus L\u2019ordonnancement # L\u2019ordonnanceur # Un ordinateur poss\u00e8de un ou plusieurs processeurs, qui sont eux-m\u00eame constitu\u00e9s de plusieurs unit\u00e9s de calcul, les coeurs. C\u2019est le syst\u00e8me d\u2019exploitation qui va donner \u00e0 un processus l\u2019acc\u00e8s \u00e0 une unit\u00e9 de calcul, cela s\u2019appelle l\u2019ordonnancement. Les processus ne quitteront cette derni\u00e8re que si : Le processus s\u2019arr\u00eate, lorsqu\u2019il est termin\u00e9. Le processus demande \u00e0 partir, il n\u2019est pas termin\u00e9 et demandera \u00e0 revenir plus tard pour poursuivre son ex\u00e9cution. C\u2019est par exemple le cas d\u2019une t\u00e2che cyclique. Le processus est en attente. C\u2019est par exemple le cas si la ressource demand\u00e9e par le processus n'est pas disponible. Le processus est mis en attente pour lib\u00e9rer la place sur l\u2019unit\u00e9 de calcul. Le syst\u00e8me choisit d\u2019arr\u00eater le processus. C\u2019est par exemple le cas lors de l\u2019interblocage que nous verrons plus loin. Lorsqu\u2019une unit\u00e9 de calcul est libre, c\u2019est le syst\u00e8me d\u2019exploitation qui va d\u00e9terminer un nouveau processus \u00e0 affecter \u00e0 l\u2019unit\u00e9 de calcul. Pour cela il existe plusieurs algorithmes d\u2019ordonnancement : Le mod\u00e8le FIFO : on affecte dans l\u2019ordre d\u2019apparition ; Le mod\u00e8le SJF : Shortest Job First, on affecte le \u00ab plus court processus en premier \u00bb ; Le mod\u00e8le Round Robin : (ou m\u00e9thode du tourniquet) on effectue un bloc de chaque processus \u00e0 tour de r\u00f4le Le mod\u00e8le Priorit\u00e9 : chaque processus dispose d\u2019une valeur de priorit\u00e9 et on choisit le processus de plus forte priorit\u00e9 \u00e0 chaque fois. Actuellement, la plupart des syst\u00e8mes d\u2019exploitation utilise une \u00e9volution du mod\u00e8le priorit\u00e9,reposant sur les principes suivants : chaque processus poss\u00e8de une priorit\u00e9 de base. cette priorit\u00e9 augmente quand le processus est inactif et diminue quand il est actif (le taux de changement d\u00e9pend de la priorit\u00e9 de base). le syst\u00e8me choisit parmi les processus de plus forte priorit\u00e9. Notion d\u2019interblocage # D\u00e9finition et exemple # Comme nous venons de le voir, un processus peut \u00eatre dans l'\u00e9tat bloqu\u00e9 dans l'attente de la lib\u00e9ration d'une ressource. Ces ressources (l'acc\u00e8s en \u00e9criture \u00e0 un fichier, \u00e0 un registre de la m\u00e9moire...) ne peuvent \u00eatre donn\u00e9es \u00e0 deux processus \u00e0 la fois. Des processus souhaitant acc\u00e9der \u00e0 cette ressource sont donc en concurrence sur cette ressource. Un processus peut donc devoir attendre qu'une ressource se lib\u00e8re avant de pouvoir y acc\u00e9der (et ainsi passer de l'\u00e9tat Bloqu\u00e9 \u00e0 l'\u00e9tat Pr\u00eat). Probl\u00e8me : Et si deux processus se bloquent mutuellement la ressource dont ils ont besoin ? Exemple : Consid\u00e9rons 2 processus A et B, et deux ressources R et S. L'action des processus A et B est d\u00e9crite ci-dessous : table processus D\u00e9roulement des processus A et B : A et B sont cr\u00e9\u00e9s et passent \u00e0 l'\u00e9tat Pr\u00eat. L'ordonnanceur d\u00e9clare \u00c9lu le processus A (ou bien B, cela ne change rien). L'\u00e9tape A1 de A est r\u00e9alis\u00e9e : la ressource R est donc affect\u00e9e \u00e0 A. L'ordonnanceur d\u00e9clare maintenant \u00c9lu le processus B. A est donc pass\u00e9 \u00e0 Pr\u00eat en attendant que son tour revienne. L'\u00e9tape B1 de B est r\u00e9alis\u00e9e : la ressource S est donc affect\u00e9e \u00e0 B. L'ordonnanceur d\u00e9clare \u00e0 nouveau \u00c9lu le processus A. B est donc pass\u00e9 \u00e0 Pr\u00eat en attendant que son tour revienne. L'\u00e9tape A2 de A est donc enclench\u00e9e : probl\u00e8me, il faut pour cela pouvoir acc\u00e8der \u00e0 la ressource S, qui n'est pas disponible. L'ordonnanceur va donc passer A \u00e0 Bloqu\u00e9 et va revenir au processus B qui redevient \u00c9lu. L'\u00e9tape B2 de B est donc enclench\u00e9e : probl\u00e8me, il faut pour cela pouvoir acc\u00e8der \u00e0 la ressource R, qui n'est pas disponible. L'ordonnanceur va donc passer B \u00e0 Bloqu\u00e9. Les deux processus A et B sont donc dans l'\u00e9tat Bloqu\u00e9, chacun en attente de la lib\u00e9ration d'une ressource bloqu\u00e9e par l'autre : ils se bloquent mutuellement. Cette situation (critique) est appel\u00e9e interblocage ou deadlock Il est assez facile d\u2019illustrer le ph\u00e9nom\u00e8ne d\u2019interblocage en classe. Nous allons demander \u00e0 deux \u00e9l\u00e8ves de tracer un cercle au tableau. On donne le compas au premier et le feutre au second. Les deux \u00e9l\u00e8ves vont se trouver dans une situation d\u2019attente interminable puisque le premier \u00e9l\u00e8ve attend que la ressource feutre soit libre, et le second attend que la ressource tableau soit libre. Repr\u00e9sentation sch\u00e9matique # les processus seront repr\u00e9sent\u00e9s par des cercles, les ressources par des carr\u00e9s. Si \u00e0 l'\u00e9tape A1 le processus A a demand\u00e9 et re\u00e7u la ressource R, la repr\u00e9sentation sera : Si \u00e0 l'\u00e9tape A2 le processus A est en attente de la ressource S, la repr\u00e9sentation sera : Avec ces conventions, la situation pr\u00e9c\u00e9dente peut donc se sch\u00e9matiser par : Ce type de sch\u00e9ma fait appara\u00eetre un cycle d'interd\u00e9pendance, qui caract\u00e9rise ici la situation de deadlock.","title":"processus"},{"location":"Terminale/ArchitectureMaterielle/processus/#processus","text":"","title":"Processus"},{"location":"Terminale/ArchitectureMaterielle/processus/#les-systemes-dexploitation-ou-os-pour-operating-system","text":"Le syst\u00e8me d\u2019exploitation est un ensemble de programmes qui va permettre d\u2019utiliser les \u00e9l\u00e9ments physiques d\u2019un ordinateur pour ex\u00e9cuter les applications n\u00e9cessaires \u00e0 l\u2019utilisateur. L\u2019\u00e9l\u00e9ment fondamental d\u2019un syst\u00e8me d\u2019exploitation est le noyau (ou kernel en anglais). C\u2019est lui qui g\u00e8re l\u2019acc\u00e8s aux ressources mat\u00e9rielles. Ces principales fonctions sont : le dialogue avec les p\u00e9riph\u00e9riques (microprocesseur, m\u00e9moire, disques, carte graphiques,carte r\u00e9seau, clavier, souris....) ; l\u2019ex\u00e9cution par le microprocesseur des programmes souhait\u00e9s par les utilisateurs et l\u2019ordonnancement de ces t\u00e2ches ; la gestion de l\u2019acc\u00e8s aux ressources, pour permettre d\u2019une part \u00e0 tous les utilisateurs de travailler simultan\u00e9ment, et d\u2019autre part de ne permettre l\u2019utilisation d\u2019une ressource qu\u2019aux utilisateurs autoris\u00e9s. Au dessus du noyau, de tr\u00e8s nombreux programmes sont en charge de toutes les fonctions qui sont offertes aux programmes utilisateurs pour permettre une utilisation compl\u00e8te et optimale de la machine physique (gestionnaire de fichiers, lecture de sons, gestion de l\u2019\u00e9nergie, gestion des communications r\u00e9seau, gestion des performance,...) Les syst\u00e8mes d\u2019exploitation actuels proposent aussi de nombreux outils de niveau sup\u00e9rieur qui apportent du confort de travail \u00e0 l\u2019utilisateur, jusqu\u2019\u00e0 lui \u00e9viter l\u2019installation de programmes (navigateur internet, outil de traitement d\u2019image, logiciel de messagerie, traitement de texte, etc...) Voici quelques exemples de syst\u00e8me d\u2019exploitation : MS-DOS, Windows ; OS/2, Mac-OS Unix (AIX, Xenix, Ultrix, Solaris, etc.) ; Linux ; Android. Mais il en existe d\u2019autres comme Symbian d\u00e9velopp\u00e9 par Nokia, Tizen par Samsung, ... Les syst\u00e8mes d'exploitation ont en charge la gestion des diff\u00e9rents processus.","title":"Les syst\u00e8mes d\u2019exploitation (ou O.S. pour Operating System)"},{"location":"Terminale/ArchitectureMaterielle/processus/#processus_1","text":"","title":"Processus"},{"location":"Terminale/ArchitectureMaterielle/processus/#introduction","text":"Pour permettre le fonctionnement d\u2019un ordinateur, de nombreuses t\u00e2ches ou applications doivent \u00eatre ex\u00e9cut\u00e9es simultan\u00e9ment par le syst\u00e8me d\u2019exploitation.","title":"Introduction"},{"location":"Terminale/ArchitectureMaterielle/processus/#notion-de-processus","text":"Lorsqu'un programme est ex\u00e9cut\u00e9 sur un ordinateur, celui-ci va cr\u00e9er un (ou plusieurs) processus. On dit que ce processus est une instance d'ex\u00e9cution de ce programme. Un processus est caract\u00e9ris\u00e9 par : l'ensemble des instructions qu'il va devoir accomplir (\u00e9crites dans le fichier ex\u00e9cutable obtenu par la compilation du code-source du programme) les ressources que le programme va mobiliser (fichier en ouverture, carte son...) l'\u00e9tat des registres du processeur.","title":"Notion de processus"},{"location":"Terminale/ArchitectureMaterielle/processus/#observation-des-processus-sous-un-systeme-unix-linux-macos","text":"","title":"Observation des processus sous un syst\u00e8me UNIX (Linux, MacOs, )"},{"location":"Terminale/ArchitectureMaterielle/processus/#la-commande-ps","text":"Dans un terminal, la commande ps va permettre d'afficher la liste des processus actifs. Plus pr\u00e9cis\u00e9ment, nous allons utiliser la commande ps -lu nom_user . L'option l permet d'afficher un grand nombre de renseignements et l'option u permet de sp\u00e9cifier l'utilisateur propri\u00e9taire des processus. ps On retrouve notamment dans ce tableau les colonnes : CMD (Command) : le nom de la commande qui a cr\u00e9\u00e9 le processus. Vous pouvez y retrouver par ordre chronologique le nom de tous les programmes actifs. Certains sont ceux que vous avez ouverts volontairement (navigateur...) mais on y trouve surtout tous les programmes n\u00e9cessaires au bon fonctionnement du syst\u00e8me d'exploitation. Le dernier processus en bas de la liste est forc\u00e9ment ps, puisque vous venez de l'appeler. PID (Process Identifier) : le num\u00e9ro unique d'identification, affect\u00e9 chronologiquement par le syst\u00e8me d'exploitation. Le processus de PID \u00e9gal \u00e0 1 est systemd , qui est le tout premier programme lanc\u00e9 par le noyau Linux au d\u00e9marrage. PPID (Parent PID) : certains processus vont eux-m\u00eames lancer plusieurs processus-fils, qui porteront le m\u00eame nom.","title":"La commande ps"},{"location":"Terminale/ArchitectureMaterielle/processus/#la-commande-top","text":"La commande top permet de conna\u00eetre en temps r\u00e9el la liste des processus, class\u00e9s par ordre d\u00e9croissant de consommation de CPU. Elle r\u00e9sume l\u2019utilisation des ressources, de l\u2019unit\u00e9 centrale \u00e0 l\u2019utilisation de la m\u00e9moire. On ferme top par la combinaison de touches Ctrl-C. top En face de chaque processus est affich\u00e9e sa consommation de CPU. Elle est calcul\u00e9e en prenant, sur un intervalle de temps donn\u00e9, le temps qu'a pass\u00e9 le CPU \u00e0 traiter le processus en question, et en divisant ce temps par le temps total de la mesure. \\[Pourcentage\\ en\\ utilisation\\ de\\ CPU = \\dfrac{temps\\ d'utilisation\\ de\\ CPU}{temps\\ total\\ \u00e9coul\u00e9} \\times 100 \\]","title":"La commande top"},{"location":"Terminale/ArchitectureMaterielle/processus/#la-commande-kill","text":"La commande kill permet de fermer un processus, en donnant son PID en argument. Exemple : kill 1453 tuera Chrome","title":"La commande kill"},{"location":"Terminale/ArchitectureMaterielle/processus/#observation-des-processus-sous-windows","text":"Microsoft Windows est architectur\u00e9 en services (processus) fonctionnant en arri\u00e8re-plan. Il est possible d\u2019afficher facilement la liste des processus en cours dans le gestionnaire des t\u00e2ches en appuyant simultan\u00e9ment sur CTRL+SCHIFT+ESC, ou en ex\u00e9cutant directement taskmgr.exe dans la barre de recherche. Si vous lancez le gestionnaire de tache pour la premi\u00e8re fois, vous serez peut-\u00eatre amen\u00e9 \u00e0 cliquer sur \"Plus de d\u00e9tails \" en bas \u00e0 Gauche de la fen\u00eatre. Vous verrez alors une fen\u00eatre avec six onglets. Dans l\u2019onglet Processus, vous verrez tous ceux s\u2019ex\u00e9cutant sur votre machine, ainsi que les ressources qu\u2019ils consomment. On distingue trois cat\u00e9gories : Applications ; Processus en arri\u00e8re-plan ; Processus Windows. cycle Par un simple clic droit sur son nom, suivi de fin de t\u00e2che on peut facilement tuer un processus, c\u2019est tr\u00e8s pratique lorsqu\u2019un programme ne r\u00e9pond plus. Dans l\u2019onglet Performance , nous pouvons voir graphiquement les ressources utilis\u00e9 Performance Dans l\u2019onglet Historique des applications , nous pouvons voir les ressources utilis\u00e9es par application. Performance Dans l\u2019onglet D\u00e9marrage , nous pouvons voir toutes les applications qui se lancent au d\u00e9marrage de Windows. Dans l\u2019onglet Utilisateur , nous pouvons voir tous les utilisateurs connect\u00e9s sur la machine, par un simple clic droit sur son nom on peut le d\u00e9connecter. Utilisateur","title":"Observation des processus sous Windows"},{"location":"Terminale/ArchitectureMaterielle/processus/#les-differents-etats-dun-processus","text":"Un processus peut-\u00eatre dans les \u00e9tats suivants : cycle","title":"Les diff\u00e9rents \u00e9tats d'un processus"},{"location":"Terminale/ArchitectureMaterielle/processus/#letat-nouveau","text":"L\u2019\u00e9tat nouveau (ou cr\u00e9ation) : chargement des instructions, allocation de m\u00e9moires et des ressources (statiquement), il passe directement \u00e0 l\u2019\u00e9tat pr\u00eat. Il existe 4 \u00e9v\u00e9nements pour cr\u00e9er un processus : L\u2019initialisation du syst\u00e8me : au chargement du syst\u00e8me il y\u2019a cr\u00e9ation automatique du processus racine p\u00e8re de tous les processus utilisateurs (id=0) Un processus peut lancer un autre processus, il en devient le parent, l\u2019autre dernier sera d\u00e9sign\u00e9 comme processus fils. (Un processus p\u00e8re ne se termine que lorsque tous ses fils sont termin\u00e9s. On a donc une structure arborescente de processus). Une requ\u00eate de l\u2019utilisateur Initiation d\u2019un travail en traitement par lot ( on ex\u00e9cute le m\u00eame travail sur plusieurs entit\u00e9s \u00e0 la fois, c\u2019est par exemple tr\u00e8s utilis\u00e9 en photographie o\u00f9 on applique la m\u00eame action sur plusieurs clich\u00e9s). Lors de sa cr\u00e9ation, un num\u00e9ro unique d\u2019identification est attribu\u00e9 \u00e0 chaque processus, c\u2019est l\u2019identifiant de processus ou PID (Process IDentifier). Gr\u00e2ce \u00e0 cet identifiant, nous pourrons appliquer diff\u00e9rentes commandes sur le processus.","title":"L\u2019\u00e9tat nouveau"},{"location":"Terminale/ArchitectureMaterielle/processus/#letat-pret","text":"Le processus est pr\u00eat \u00e0 \u00eatre ex\u00e9cut\u00e9. Il est mis en attente jusqu\u2019\u00e0 ce qu\u2019on lui lib\u00e8re le processeur, il passera alors \u00e0 l\u2019\u00e9tat Actif ou \u00e9lu.","title":"L\u2019\u00e9tat pr\u00eat"},{"location":"Terminale/ArchitectureMaterielle/processus/#letat-actif-ou-elu","text":"Le processus est en cours d\u2019ex\u00e9cution par le processeur. Si le processus \u00e9puise le temps qui lui est allou\u00e9 par le Syst\u00e8me d\u2019exploitation, il est remis en file d\u2019attente des Pr\u00eats. Si il a besoin d\u2019une ressource non disponible (op\u00e9rations sur les p\u00e9riph\u00e9riques), il est mis en attente prolong\u00e9e (Interruption : \u00e9tat bloqu\u00e9) jusqu\u2019\u00e0 la lib\u00e9ration de la ressource n\u00e9cessaire Si le processus atteint son terme (se termine) il passe \u00e0 l\u2019\u00e9tat Zombie.","title":"L\u2019\u00e9tat actif ou \u00e9lu"},{"location":"Terminale/ArchitectureMaterielle/processus/#letat-attente-ou-bloque","text":"Pendant son ex\u00e9cution (\u00e9tat \u00c9lu), le processus r\u00e9clame une ressource qui n'est pas imm\u00e9diatement disponible. Son ex\u00e9cution s'interrompt. Lorsque la ressource sera disponible, le processus repassera par l'\u00e9tat Pr\u00eat et attendra \u00e0 nouveau son tour.","title":"L\u2019\u00e9tat attente ou bloqu\u00e9"},{"location":"Terminale/ArchitectureMaterielle/processus/#letat-zombie","text":"Le processus a termin\u00e9 son ex\u00e9cution et il ne peut plus \u00e9voluer mais les ressources qu\u2019il a allou\u00e9es ne sont pas encore lib\u00e9r\u00e9es","title":"L\u2019\u00e9tat zombie"},{"location":"Terminale/ArchitectureMaterielle/processus/#letat-destruction","text":"Lors de la destruction le processus lib\u00e8re les ressources allou\u00e9es. Il y a quatre causes possibles de la destruction d\u2019un processus : Arr\u00eat normal : volontaire, lorsque le processus termine sa t\u00e2che. Arr\u00eat pour erreur : volontaire suite \u00e0 une erreur pour une instruction ill\u00e9gale Arr\u00eat pour erreur fatale : involontaire tel que les mauvais param\u00e8tres de l\u2019ex\u00e9cution du processus Arr\u00eat volontaire par un autre processus","title":"L\u2019\u00e9tat destruction"},{"location":"Terminale/ArchitectureMaterielle/processus/#lordonnancement","text":"","title":"L\u2019ordonnancement"},{"location":"Terminale/ArchitectureMaterielle/processus/#lordonnanceur","text":"Un ordinateur poss\u00e8de un ou plusieurs processeurs, qui sont eux-m\u00eame constitu\u00e9s de plusieurs unit\u00e9s de calcul, les coeurs. C\u2019est le syst\u00e8me d\u2019exploitation qui va donner \u00e0 un processus l\u2019acc\u00e8s \u00e0 une unit\u00e9 de calcul, cela s\u2019appelle l\u2019ordonnancement. Les processus ne quitteront cette derni\u00e8re que si : Le processus s\u2019arr\u00eate, lorsqu\u2019il est termin\u00e9. Le processus demande \u00e0 partir, il n\u2019est pas termin\u00e9 et demandera \u00e0 revenir plus tard pour poursuivre son ex\u00e9cution. C\u2019est par exemple le cas d\u2019une t\u00e2che cyclique. Le processus est en attente. C\u2019est par exemple le cas si la ressource demand\u00e9e par le processus n'est pas disponible. Le processus est mis en attente pour lib\u00e9rer la place sur l\u2019unit\u00e9 de calcul. Le syst\u00e8me choisit d\u2019arr\u00eater le processus. C\u2019est par exemple le cas lors de l\u2019interblocage que nous verrons plus loin. Lorsqu\u2019une unit\u00e9 de calcul est libre, c\u2019est le syst\u00e8me d\u2019exploitation qui va d\u00e9terminer un nouveau processus \u00e0 affecter \u00e0 l\u2019unit\u00e9 de calcul. Pour cela il existe plusieurs algorithmes d\u2019ordonnancement : Le mod\u00e8le FIFO : on affecte dans l\u2019ordre d\u2019apparition ; Le mod\u00e8le SJF : Shortest Job First, on affecte le \u00ab plus court processus en premier \u00bb ; Le mod\u00e8le Round Robin : (ou m\u00e9thode du tourniquet) on effectue un bloc de chaque processus \u00e0 tour de r\u00f4le Le mod\u00e8le Priorit\u00e9 : chaque processus dispose d\u2019une valeur de priorit\u00e9 et on choisit le processus de plus forte priorit\u00e9 \u00e0 chaque fois. Actuellement, la plupart des syst\u00e8mes d\u2019exploitation utilise une \u00e9volution du mod\u00e8le priorit\u00e9,reposant sur les principes suivants : chaque processus poss\u00e8de une priorit\u00e9 de base. cette priorit\u00e9 augmente quand le processus est inactif et diminue quand il est actif (le taux de changement d\u00e9pend de la priorit\u00e9 de base). le syst\u00e8me choisit parmi les processus de plus forte priorit\u00e9.","title":"L\u2019ordonnanceur"},{"location":"Terminale/ArchitectureMaterielle/processus/#notion-dinterblocage","text":"","title":"Notion d\u2019interblocage"},{"location":"Terminale/ArchitectureMaterielle/processus/#definition-et-exemple","text":"Comme nous venons de le voir, un processus peut \u00eatre dans l'\u00e9tat bloqu\u00e9 dans l'attente de la lib\u00e9ration d'une ressource. Ces ressources (l'acc\u00e8s en \u00e9criture \u00e0 un fichier, \u00e0 un registre de la m\u00e9moire...) ne peuvent \u00eatre donn\u00e9es \u00e0 deux processus \u00e0 la fois. Des processus souhaitant acc\u00e9der \u00e0 cette ressource sont donc en concurrence sur cette ressource. Un processus peut donc devoir attendre qu'une ressource se lib\u00e8re avant de pouvoir y acc\u00e9der (et ainsi passer de l'\u00e9tat Bloqu\u00e9 \u00e0 l'\u00e9tat Pr\u00eat). Probl\u00e8me : Et si deux processus se bloquent mutuellement la ressource dont ils ont besoin ? Exemple : Consid\u00e9rons 2 processus A et B, et deux ressources R et S. L'action des processus A et B est d\u00e9crite ci-dessous : table processus D\u00e9roulement des processus A et B : A et B sont cr\u00e9\u00e9s et passent \u00e0 l'\u00e9tat Pr\u00eat. L'ordonnanceur d\u00e9clare \u00c9lu le processus A (ou bien B, cela ne change rien). L'\u00e9tape A1 de A est r\u00e9alis\u00e9e : la ressource R est donc affect\u00e9e \u00e0 A. L'ordonnanceur d\u00e9clare maintenant \u00c9lu le processus B. A est donc pass\u00e9 \u00e0 Pr\u00eat en attendant que son tour revienne. L'\u00e9tape B1 de B est r\u00e9alis\u00e9e : la ressource S est donc affect\u00e9e \u00e0 B. L'ordonnanceur d\u00e9clare \u00e0 nouveau \u00c9lu le processus A. B est donc pass\u00e9 \u00e0 Pr\u00eat en attendant que son tour revienne. L'\u00e9tape A2 de A est donc enclench\u00e9e : probl\u00e8me, il faut pour cela pouvoir acc\u00e8der \u00e0 la ressource S, qui n'est pas disponible. L'ordonnanceur va donc passer A \u00e0 Bloqu\u00e9 et va revenir au processus B qui redevient \u00c9lu. L'\u00e9tape B2 de B est donc enclench\u00e9e : probl\u00e8me, il faut pour cela pouvoir acc\u00e8der \u00e0 la ressource R, qui n'est pas disponible. L'ordonnanceur va donc passer B \u00e0 Bloqu\u00e9. Les deux processus A et B sont donc dans l'\u00e9tat Bloqu\u00e9, chacun en attente de la lib\u00e9ration d'une ressource bloqu\u00e9e par l'autre : ils se bloquent mutuellement. Cette situation (critique) est appel\u00e9e interblocage ou deadlock Il est assez facile d\u2019illustrer le ph\u00e9nom\u00e8ne d\u2019interblocage en classe. Nous allons demander \u00e0 deux \u00e9l\u00e8ves de tracer un cercle au tableau. On donne le compas au premier et le feutre au second. Les deux \u00e9l\u00e8ves vont se trouver dans une situation d\u2019attente interminable puisque le premier \u00e9l\u00e8ve attend que la ressource feutre soit libre, et le second attend que la ressource tableau soit libre.","title":"D\u00e9finition et exemple"},{"location":"Terminale/ArchitectureMaterielle/processus/#representation-schematique","text":"les processus seront repr\u00e9sent\u00e9s par des cercles, les ressources par des carr\u00e9s. Si \u00e0 l'\u00e9tape A1 le processus A a demand\u00e9 et re\u00e7u la ressource R, la repr\u00e9sentation sera : Si \u00e0 l'\u00e9tape A2 le processus A est en attente de la ressource S, la repr\u00e9sentation sera : Avec ces conventions, la situation pr\u00e9c\u00e9dente peut donc se sch\u00e9matiser par : Ce type de sch\u00e9ma fait appara\u00eetre un cycle d'interd\u00e9pendance, qui caract\u00e9rise ici la situation de deadlock.","title":"Repr\u00e9sentation sch\u00e9matique"},{"location":"Terminale/BDD/BDD_SQLITE_python/","text":"Python et BDD # Cr\u00e9ation d'une table # vant d\u2019\u00e9voquer le projet en tant que tel, nous allons commencer par travailler sur les requ\u00eates SQL effectu\u00e9es depuis un programme Python. Il est donc n\u00e9cessaire de bien ma\u00eetriser toute la partie consacr\u00e9e aux bases de donn\u00e9es et particuli\u00e8rement le cours sur les requ\u00eates SQL. Apr\u00e8s avoir cr\u00e9\u00e9 un r\u00e9pertoire \"projet_bd\". Cr\u00e9ez, \u00e0 l\u2019aide de votre \u00e9diteur, un fichier Python (\u00e0 vous de choisir le nom) puis saisissez et ex\u00e9cutez le programme suivant : 1 2 3 4 5 6 7 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( \"CREATE TABLE LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) conn . commit () cur . close () conn . close () Ce programme va vous permettre de vous \"connecter\" \u00e0 une base de donn\u00e9es (si cette derni\u00e8re n\u2019existe pas, elle sera cr\u00e9\u00e9e). Ensuite nous cr\u00e9ons une table (une relation) nomm\u00e9e LIVRES, cette table contient 4 attributs : id (de type entier), titre (de type texte), auteur (de type texte), ann_publi (de type entier) et note (de type entier). Entrons un peu dans les d\u00e9tails en analysant le programme ligne par ligne :","title":"Python et BDD"},{"location":"Terminale/BDD/BDD_SQLITE_python/#python-et-bdd","text":"","title":"Python et BDD"},{"location":"Terminale/BDD/BDD_SQLITE_python/#creation-dune-table","text":"vant d\u2019\u00e9voquer le projet en tant que tel, nous allons commencer par travailler sur les requ\u00eates SQL effectu\u00e9es depuis un programme Python. Il est donc n\u00e9cessaire de bien ma\u00eetriser toute la partie consacr\u00e9e aux bases de donn\u00e9es et particuli\u00e8rement le cours sur les requ\u00eates SQL. Apr\u00e8s avoir cr\u00e9\u00e9 un r\u00e9pertoire \"projet_bd\". Cr\u00e9ez, \u00e0 l\u2019aide de votre \u00e9diteur, un fichier Python (\u00e0 vous de choisir le nom) puis saisissez et ex\u00e9cutez le programme suivant : 1 2 3 4 5 6 7 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( \"CREATE TABLE LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) conn . commit () cur . close () conn . close () Ce programme va vous permettre de vous \"connecter\" \u00e0 une base de donn\u00e9es (si cette derni\u00e8re n\u2019existe pas, elle sera cr\u00e9\u00e9e). Ensuite nous cr\u00e9ons une table (une relation) nomm\u00e9e LIVRES, cette table contient 4 attributs : id (de type entier), titre (de type texte), auteur (de type texte), ann_publi (de type entier) et note (de type entier). Entrons un peu dans les d\u00e9tails en analysant le programme ligne par ligne :","title":"Cr\u00e9ation d'une table"},{"location":"Terminale/BDD/sql_sqlite/","text":"SQL # Notion de SGBD relationnel # Un Syst\u00e8me de Gestion de Base de Donn\u00e9e doit r\u00e9pondre aux objectifs suivants : ind\u00e9pendance physique : la fa\u00e7on dont les donn\u00e9es sont d\u00e9finies doit ind\u00e9pendantes des structures de stockage utilis\u00e9es. ind\u00e9pendance logique : un m\u00eame ensemble de donn\u00e9es peut-\u00eatre vu diff\u00e9remment par des utilisateurs diff\u00e9rents. Toutes ces visions personnelles des donn\u00e9es doivent \u00eatre int\u00e9gr\u00e9es dans une vision globale. acc\u00e8s aux donn\u00e9es : l\u2019acc\u00e8s aux donn\u00e9es se fait par l\u2019interm\u00e9diaire d\u2019un langage de manipu- lation de donn\u00e9e. Il est crucial que ce langage permette d\u2019obtenir des r\u00e9ponses aux requ\u00eates en un temps \"raisonnable\". Ce langage doit donc \u00eatre optimis\u00e9, minimiser le nombre d\u2019acc\u00e8s au disques et tout cela de fa\u00e7on totalement transparente pour l\u2019utilisateur. administration centralis\u00e9e des donn\u00e9es (int\u00e9gration) : toutes les donn\u00e9es doivent \u00eatre centralis\u00e9es dans un r\u00e9servoir unique commun \u00e0 toutes les applications. non-redondance des donn\u00e9es : afin d\u2019\u00e9viter les probl\u00e8mes lors des mises \u00e0 jour, chaque donn\u00e9e ne doit pas \u00eatre pr\u00e9sente qu\u2019une seule fois dans la base de donn\u00e9es. coh\u00e9rence des donn\u00e9es : les donn\u00e9es sont soumises \u00e0 un certain nombre de contraintes d\u2019int\u00e9grit\u00e9 qui d\u00e9finissent un \u00e9tat coh\u00e9rent de la base. Elles doivent \u00eatre exprim\u00e9es simplement et v\u00e9rifi\u00e9es automatiquement \u00e0 chaque insertion, modification ou suppression des donn\u00e9es. partage des donn\u00e9es : il s\u2019agit de permettre \u00e0 plusieurs utilisateurs d\u2019acc\u00e9der aux m\u00eames donn\u00e9es au m\u00eame moment de mani\u00e8re transparente. si ce probl\u00e8me est simple \u00e0 r\u00e9soudre quand il s\u2019agit d\u2019interrogations, cela ne l\u2019est plus quand il s\u2019agit de modifications dans un contexte multi-utilisateurs. s\u00e9curit\u00e9 des donn\u00e9es : les donn\u00e9es doivent \u00eatre prot\u00e9g\u00e9es contre les acc\u00e8s non autoris\u00e9es. pour cela, il faut pouvoir associer \u00e0 chaque utilisateur des droits d\u2019acc\u00e8s aux donn\u00e9es. r\u00e9sistances aux pannes : que se passe-t-il si une panne survient lors d\u2019une modification de la base de donn\u00e9es, si certains fichiers deviennent illisibles ? Il faut pouvoir r\u00e9cup\u00e9rer une base de donn\u00e9es dans un \u00e9tat \"sain\". Ainsi, apr\u00e8s une panne intervenant au milieu d\u2019une modification, deux solutions sont possibles : soit r\u00e9cup\u00e9rer les donn\u00e9es dans l\u2019\u00e9tat dans lequel elles \u00e9taient avant la modification, soit terminer l\u2019op\u00e9ration interrompue. Parmi les SGBD, les plus connus, on peut citer MySQL, PostgreSQL,SQLite, Oracle Database, Microsoft SQL Server et Microsoft Access. Nous utiliserons SQlite. Le langage SQL et le SGBD SQlite # Nous allons maintenant apprendre \u00e0 r\u00e9aliser des requ\u00eates, c\u2019est-\u00e0-dire que nous allons apprendre \u00e0 cr\u00e9er une base des donn\u00e9es, cr\u00e9er des attributs, ajouter de donn\u00e9es, modifier des donn\u00e9es et enfin, nous allons surtout apprendre \u00e0 interroger une base de donn\u00e9es afin d\u2019obtenir des informations. Pour r\u00e9aliser toutes ces requ\u00eates, nous allons devoir apprendre un langage de requ\u00eates : SQL (Structured Query Language). SQL est propre aux bases de donn\u00e9es relationnelles, les autres types de bases de donn\u00e9es utilisent d\u2019autres langages pour effectuer des requ\u00eates. Pour cr\u00e9er une base de donn\u00e9es et effectuer des requ\u00eates sur cette derni\u00e8re, nous allons utiliser le logiciel \"DB Browser for SQLite\". Cr\u00e9ation de notre premi\u00e8re base de donn\u00e9es # Apr\u00e8s avoir install\u00e9 et lanc\u00e9 le logiciel \"DB Browser for SQLite\", vous devriez obtenir ceci : Cliquez sur Nouvelle base de donn\u00e9es. Apr\u00e8s avoir choisi un nom pour votre base de donn\u00e9es (exemple par exemple \"db_livres.db\"), vous devriez avoir la fen\u00eatre suivante : Mais pour l\u2019instant elle ne contient aucune table (aucune relation), pour cr\u00e9er une table, cliquez sur l\u2019onglet \"Ex\u00e9cuter le SQL\". On obtient alors : Copiez-collez le texte ci-dessous dans la fen\u00eatre \"SQL 1\" 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT ); Cliquez ensuite sur le petit triangle situ\u00e9 au-dessus de la fen\u00eatre SQL 1 (ou appuyez sur F5), vous devriez avoir ceci Comme indiqu\u00e9 dans la fen\u00eatre, \"Requ\u00eate ex\u00e9cut\u00e9e avec succ\u00e8s\" ! Vous venez de cr\u00e9er votre premi\u00e8re table. Explications : Revenons sur cette premi\u00e8re requ\u00eate : Le CREATE TABLE LIVRES ne devrait pas vous poser de probl\u00e8me : nous cr\u00e9ons une nouvelle table nomm\u00e9e \"LIVRES\". La suite est \u00e0 peine plus complexe, nous cr\u00e9ons ensuite les attributs : id titre auteur ann_publi note Nous avons pour chaque attribut pr\u00e9cis\u00e9 son domaine : id : entier (INT), titre : cha\u00eene de caract\u00e8res (TEXT), auteur : cha\u00eene de caract\u00e8res, ann_publi : entier et note : entier L'attribut \"id\" va jouer ici le r\u00f4le de cl\u00e9 primaire. On peut aussi, par souci de s\u00e9curit\u00e9 (afin d'\u00e9viter que l'on utilise 2 fois la m\u00eame valeur pour l'attribut \"id\"), modifier le l'instruction SQL vue ci-dessus, afin de pr\u00e9ciser que l'attribut \"id\" est bien notre cl\u00e9 primaire : 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT , PRIMARY KEY ( id )); Notre syst\u00e8me de gestion de base de donn\u00e9es nous avertira si l'on tente d'attribuer 2 fois la m\u00eame valeur \u00e0 l'attribut \"id\". Nous allons maintenant ajouter des donn\u00e9es : Toujours dans l'onglet \"Ex\u00e9cuter le SQL\", apr\u00e8s avoir effac\u00e9 la fen\u00eatre SQL 1, copiez-collez dans cette m\u00eame fen\u00eatre la requ\u00eate ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 1 , '1984' , 'Orwell' , 1949 , 10 ), ( 2 , 'Dune' , 'Herbert' , 1965 , 8 ), ( 3 , 'Fondation' , 'Asimov' , 1951 , 9 ), ( 4 , 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 5 , 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 6 , 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 7 , 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 8 , 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 9 , 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 10 , 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 11 , 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 12 , 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 13 , 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 14 , 'Le monde des \u0100' , 'Van Vogt' , 1945 , 7 ), ( 15 , 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 16 , 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ); Ici aussi, aucun probl\u00e8me, la requ\u00eate a bien \u00e9t\u00e9 ex\u00e9cut\u00e9e : La table LIVRES contient bien les donn\u00e9es souhait\u00e9es (onglet \"Parcourir les donn\u00e9es\") : Requ\u00eates d'interrogations de la base de donn\u00e9es # Nous allons apprendre \u00e0 effectuer des requ\u00eates d'interrogation sur la base de donn\u00e9es que nous venons de cr\u00e9er. Toutes les requ\u00eates se feront dans la fen\u00eatre SQL 1 de l'onglet \"Ex\u00e9cuter le SQL\" Requ\u00eate avec SELECT et FROM # 1 2 SELECT id , titre , auteur , ann_publi , note FROM LIVRES puis appuyez sur le triangle (ou la touche F5). Vous devriez voir s'afficher ceci : Comme vous pouvez le constater, notre requ\u00eate SQL a permis d'afficher tous les livres. Nous avons ici 2 mots cl\u00e9s du langage SQL SELECT qui permet de s\u00e9lectionner les attributs qui devront \u00eatre \"affich\u00e9s\" (je mets \"affich\u00e9s\" entre guillemets, car le but d'une requ\u00eate sql n'est pas forc\u00e9ment d'afficher les donn\u00e9es) et FROM qui indique la table qui doit \u00eatre utilis\u00e9e. Il est \u00e9videmment possible d'afficher seulement certains attributs (ou m\u00eame un seul) qui indique la table qui doit \u00eatre utilis\u00e9e. Remarque : on aurait pu \u00e9crire \u00e9galement pour obtenir tous les attributs : 1 2 SELECT * FROM LIVRES Exercice : \u00c9crivez et testez une requ\u00eate permettant d'obtenir uniquement uniquement les titres et les auteurs des livres Exercice : \u00c9crivez et testez une requ\u00eate permettant d'obtenir uniquement les titres des livres Requ\u00eate avec condition : WHERE, AND, OR # Il est possible d'utiliser la clause WHERE afin d'imposer une (ou des) condition(s) permettant de s\u00e9lectionner uniquement certaines lignes. La condition doit suivre le mot-cl\u00e9 WHERE. Exemple : 1 2 3 SELECT titre , ann_publi FROM LIVRES WHERE auteur = 'Asimov' V\u00e9rifiez que vous obtenez bien uniquement les livres \u00e9crits par Isaac Asimov. Exercice : \u00c9crivez et testez une requ\u00eate permettant d'obtenir uniquement les titres des livres \u00e9crits par Philip K.Dick. Il est possible de combiner les conditions \u00e0 l'aide d'un OR ou d'un AND. 1 2 3 SELECT titre , ann_publi FROM LIVRES WHERE auteur = 'Asimov' AND ann_publi > 1953 V\u00e9rifiez que nous obtenons bien le livre \u00e9crit par Asimov publi\u00e9 apr\u00e8s 1953 (comme vous l'avez sans doute remarqu\u00e9, il est possible d'utiliser les op\u00e9rateurs d'in\u00e9galit\u00e9s). Exercice : \u00c9crire une requ\u00eate permettant d'obtenir les titres des livres publi\u00e9s apr\u00e8s 1945 qui ont une note sup\u00e9rieure ou \u00e9gale \u00e0 9. Obtenir des r\u00e9ponses dans un ordre pr\u00e9cis avec ORDER BY # Il est aussi possible de rajouter la clause SQL ORDER BY afin d'obtenir les r\u00e9sultats class\u00e9s dans un ordre pr\u00e9cis. Exemple : 1 2 SELECT id , titre , auteur , ann_publi , note FROM LIVRES ORDER by ann_publi ou bien : 1 2 3 SELECT titre FROM LIVRES WHERE auteur = 'Asimov' ORDER BY ann_publi Il est possible d'obtenir un classement en sens inverse \u00e0 l'aide de la clause DESC qu'il faut ajouter apr\u00e8s l'attribut de tri. Exercice : Ecrire la requ\u00eate pour obtenir les livres de K.Dick class\u00e9s du plus r\u00e9cent au plus ancien. On remarque qu'il est possible d'\u00e9viter les doublons gr\u00e2ce \u00e0 la clause DISTINCT \u00c9viter les doublons avec DISTINCT # Tapez la req\u00eate suivante : 1 2 SELECT auteur FROM LIVRES Et comparez la \u00e0 celle-ci : 1 2 SELECT DISTINCT auteur FROM LIVRES Les jointures # Gr\u00e2ce aux jointures nous allons pouvoir associer 2 tables dans une m\u00eame requ\u00eate. En g\u00e9n\u00e9ral, les jointures consistent \u00e0 associer des lignes de 2 tables. Elles permettent d'\u00e9tablir un lien entre 2 tables. Qui dit lien entre 2 tables dit souvent clef \u00e9trang\u00e8re et clef primaire. Cr\u00e9er une nouvelle base de donn\u00e9es par exemple db_livres_auteurs.db dans laquelle vous cr\u00e9erez deux nouvelles tables : la table AUTEUR et la table LIVRE . 1 2 CREATE TABLE AUTEURS ( id INT , nom TEXT , prenom TEXT , ann_naissance INT , langue_ecriture TEXT , PRIMARY KEY ( id )); 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , id_auteur INT , ann_publi INT , note INT , PRIMARY KEY ( id )); Remarque : on aurait pu aussi \u00e9crire : 1 2 3 CREATE TABLE LIVRES ( id INT , titre TEXT , id_auteur INT , ann_publi INT , note INT , PRIMARY KEY ( id ), FOREIGN KEY ( id_auteur ) REFERENCES AUTEURS ( id )); Gr\u00e2ce \u00e0 cette pr\u00e9cision, sqlite sera capable de d\u00e9tecter les anomalies au niveau de cl\u00e9 \u00e9trang\u00e8re : essayez par exemple d'ajouter un livre \u00e0 la table LIVRES avec l'attribut \"id_auteur\" \u00e9gal \u00e0 11 ! Exercice : Remplissez les tables avec leurs donn\u00e9es (cf cours pr\u00e9c\u00e9dents). R\u00e9alisons maintenant la jointure entre les deux tables : 1 2 3 SELECT * FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id Le \"FROM LIVRES INNER JOIN AUTEURS\" permet de cr\u00e9er une jointure entre les tables LIVRES et AUTEURS (\"rassembler\" les tables LIVRES et AUTEURS en une seule grande table). Le ON LIVRES.id_auteur = AUTEURS.id signifie qu'une ligne quelconque A de la table LIVRES devra \u00eatre fusionn\u00e9e avec la ligne B de la table AUTEURS \u00e0 condition que l'attribut id de la ligne A soit \u00e9gal \u00e0 l'attribut id_auteur de la ligne B. Par exemple, la ligne 1 (id=1) de la table LIVRES (que l'on nommera dans la suite ligne A) sera fusionn\u00e9e avec la ligne 1 (id=1) de la table AUTEURS (que l'on nommera dans la suite B) car l'attribut id_auteur de la ligne A est \u00e9gal \u00e0 1 et l'attribut id de la ligne B est aussi \u00e9gal \u00e0 1. Autre exemple, la ligne 1 (id=1) de la table LIVRES (que l'on nommera dans la suite ligne A) ne sera pas fusionn\u00e9e avec la ligne 2 (id=2) de la table AUTEURS (que l'on nommera dans la suite B') car l'attribut id_auteur de la ligne A est \u00e9gal \u00e0 1 alors que l'attribut id de la ligne B' est \u00e9gal \u00e0 2. Exercice : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT * FROM AUTEURS INNER JOIN LIVRES ON LIVRES . id_auteur = AUTEURS . id Comme vous pouvez le constater, le r\u00e9sultat est diff\u00e9rent, cette fois-ci ce sont les lignes de la table LIVRES qui viennent se greffer sur la table AUTEURS. Dans le cas d'une jointure, il est tout \u00e0 fait possible de s\u00e9lectionner certains attributs et pas d'autres : Exercice : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT nom , prenom , titre FROM AUTEURS INNER JOIN LIVRES ON LIVRES . id_auteur = AUTEURS . id Exercice : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT titre , nom , prenom FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id Si un m\u00eame nom d'attribut est pr\u00e9sent dans les 2 tables (par exemple ici l'attribut id), il est n\u00e9cessaire d'ajouter le nom de la table devant afin de pouvoir les distinguer (AUTEURS.id et LIVRES.id) Exercice : Saisissez et testez la requ\u00eate SQL suivante : 1 2 SELECT titre , AUTEURS . id , nom , prenom FROM LIVRES Il est possible d'utiliser la clause WHERE dans le cas d'une jointure : Exercice : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 4 SELECT titre , nom , prenom FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id WHERE ann_publi > 1950 Enfin, pour terminer avec les jointures, vous devez savoir que nous avons abord\u00e9 la jointure la plus simple (INNER JOIN). Il existe des jointures plus complexes (CROSS JOIN, LEFT JOIN, RIGHT JOIN), ces autres jointures ne seront pas abord\u00e9es ici. Requ\u00eates de mise \u00e0 jour : INSERT, UPDATE, DELETE # Nous allons repartir avec une base de donn\u00e9es qui contient une seule table : Cr\u00e9ez une nouvelle base de donn\u00e9es que vous nommerez par exemple db\\_livres.db Cr\u00e9ez une table LIVRES \u00e0 l'aide de la requ\u00eate SQL suivante : 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT , PRIMARY KEY ( id )); Ajoutez des donn\u00e9es \u00e0 la table LIVRES \u00e0 l'aide de la requ\u00eate SQL suivante : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 1 , '1984' , 'Orwell' , 1949 , 10 ), ( 2 , 'Dune' , 'Herbert' , 1965 , 8 ), ( 3 , 'Fondation' , 'Asimov' , 1951 , 9 ), ( 4 , 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 5 , 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 6 , 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 7 , 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 8 , 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 9 , 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 10 , 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 11 , 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 12 , 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 13 , 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 14 , 'Le monde des \u0100' , 'Van Vogt' , 1945 , 7 ), ( 15 , 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 16 , 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ); Nous avons d\u00e9j\u00e0 eu l'occasion de voir la requ\u00eate permettant d'ajouter une entr\u00e9e (utilisation d'INSERT) Exercice : Que va faire cette requ\u00eate ? V\u00e9rifiez votre r\u00e9ponse en l'ex\u00e9cutant et en faisant une requ\u00eate \"SELECT * FROM LIVRES\". 1 2 3 4 INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 17 , 'Hyp\u00e9rion' , 'Simmons' , 1989 , 8 ); Exercice : \u00c9crivez et testez une requ\u00eate permettant d'ajouter le livre de votre choix \u00e0 la table LIVRES. \"UPDATE\" va permettre de modifier une ou des entr\u00e9es. Nous utiliserons \"WHERE\", comme dans le cas d'un \"SELECT\", pour sp\u00e9cifier les entr\u00e9es \u00e0 modifier. Voici un exemple de modification : Exercice : Que va faire cette requ\u00eate ? V\u00e9rifiez votre r\u00e9ponse en l'ex\u00e9cutant et en faisant une requ\u00eate \"SELECT * FROM LIVRES\". 1 2 3 UPDATE LIVRES SET note = 7 WHERE titre = 'Hyp\u00e9rion' Exercice : \u00c9crivez une requ\u00eate permettant d'attribuer la note de 10 \u00e0 tous les livres \u00e9crits par Asimov publi\u00e9s apr\u00e8s 1950. Testez cette requ\u00eate. \"DELETE\" est utilis\u00e9e pour effectuer la suppression d'une (ou de plusieurs) entr\u00e9e(s). Ici aussi c'est le \"WHERE\" qui permettra de s\u00e9lectionner les entr\u00e9es \u00e0 supprimer. Exercice : Que va faire cette requ\u00eate ? V\u00e9rifiez votre r\u00e9ponse en l'ex\u00e9cutant et en faisant une requ\u00eate \"SELECT * FROM LIVRES\". 1 2 DELETE FROM LIVRES WHERE titre = 'Hyp\u00e9rion' Exercice : \u00c9crivez une requ\u00eate permettant de supprimer les livres publi\u00e9s avant 1945. Testez cette requ\u00eate.","title":"SQL avec SQLITE"},{"location":"Terminale/BDD/sql_sqlite/#sql","text":"","title":"SQL"},{"location":"Terminale/BDD/sql_sqlite/#notion-de-sgbd-relationnel","text":"Un Syst\u00e8me de Gestion de Base de Donn\u00e9e doit r\u00e9pondre aux objectifs suivants : ind\u00e9pendance physique : la fa\u00e7on dont les donn\u00e9es sont d\u00e9finies doit ind\u00e9pendantes des structures de stockage utilis\u00e9es. ind\u00e9pendance logique : un m\u00eame ensemble de donn\u00e9es peut-\u00eatre vu diff\u00e9remment par des utilisateurs diff\u00e9rents. Toutes ces visions personnelles des donn\u00e9es doivent \u00eatre int\u00e9gr\u00e9es dans une vision globale. acc\u00e8s aux donn\u00e9es : l\u2019acc\u00e8s aux donn\u00e9es se fait par l\u2019interm\u00e9diaire d\u2019un langage de manipu- lation de donn\u00e9e. Il est crucial que ce langage permette d\u2019obtenir des r\u00e9ponses aux requ\u00eates en un temps \"raisonnable\". Ce langage doit donc \u00eatre optimis\u00e9, minimiser le nombre d\u2019acc\u00e8s au disques et tout cela de fa\u00e7on totalement transparente pour l\u2019utilisateur. administration centralis\u00e9e des donn\u00e9es (int\u00e9gration) : toutes les donn\u00e9es doivent \u00eatre centralis\u00e9es dans un r\u00e9servoir unique commun \u00e0 toutes les applications. non-redondance des donn\u00e9es : afin d\u2019\u00e9viter les probl\u00e8mes lors des mises \u00e0 jour, chaque donn\u00e9e ne doit pas \u00eatre pr\u00e9sente qu\u2019une seule fois dans la base de donn\u00e9es. coh\u00e9rence des donn\u00e9es : les donn\u00e9es sont soumises \u00e0 un certain nombre de contraintes d\u2019int\u00e9grit\u00e9 qui d\u00e9finissent un \u00e9tat coh\u00e9rent de la base. Elles doivent \u00eatre exprim\u00e9es simplement et v\u00e9rifi\u00e9es automatiquement \u00e0 chaque insertion, modification ou suppression des donn\u00e9es. partage des donn\u00e9es : il s\u2019agit de permettre \u00e0 plusieurs utilisateurs d\u2019acc\u00e9der aux m\u00eames donn\u00e9es au m\u00eame moment de mani\u00e8re transparente. si ce probl\u00e8me est simple \u00e0 r\u00e9soudre quand il s\u2019agit d\u2019interrogations, cela ne l\u2019est plus quand il s\u2019agit de modifications dans un contexte multi-utilisateurs. s\u00e9curit\u00e9 des donn\u00e9es : les donn\u00e9es doivent \u00eatre prot\u00e9g\u00e9es contre les acc\u00e8s non autoris\u00e9es. pour cela, il faut pouvoir associer \u00e0 chaque utilisateur des droits d\u2019acc\u00e8s aux donn\u00e9es. r\u00e9sistances aux pannes : que se passe-t-il si une panne survient lors d\u2019une modification de la base de donn\u00e9es, si certains fichiers deviennent illisibles ? Il faut pouvoir r\u00e9cup\u00e9rer une base de donn\u00e9es dans un \u00e9tat \"sain\". Ainsi, apr\u00e8s une panne intervenant au milieu d\u2019une modification, deux solutions sont possibles : soit r\u00e9cup\u00e9rer les donn\u00e9es dans l\u2019\u00e9tat dans lequel elles \u00e9taient avant la modification, soit terminer l\u2019op\u00e9ration interrompue. Parmi les SGBD, les plus connus, on peut citer MySQL, PostgreSQL,SQLite, Oracle Database, Microsoft SQL Server et Microsoft Access. Nous utiliserons SQlite.","title":"Notion de SGBD relationnel"},{"location":"Terminale/BDD/sql_sqlite/#le-langage-sql-et-le-sgbd-sqlite","text":"Nous allons maintenant apprendre \u00e0 r\u00e9aliser des requ\u00eates, c\u2019est-\u00e0-dire que nous allons apprendre \u00e0 cr\u00e9er une base des donn\u00e9es, cr\u00e9er des attributs, ajouter de donn\u00e9es, modifier des donn\u00e9es et enfin, nous allons surtout apprendre \u00e0 interroger une base de donn\u00e9es afin d\u2019obtenir des informations. Pour r\u00e9aliser toutes ces requ\u00eates, nous allons devoir apprendre un langage de requ\u00eates : SQL (Structured Query Language). SQL est propre aux bases de donn\u00e9es relationnelles, les autres types de bases de donn\u00e9es utilisent d\u2019autres langages pour effectuer des requ\u00eates. Pour cr\u00e9er une base de donn\u00e9es et effectuer des requ\u00eates sur cette derni\u00e8re, nous allons utiliser le logiciel \"DB Browser for SQLite\".","title":"Le langage SQL et le SGBD SQlite"},{"location":"Terminale/BDD/sql_sqlite/#creation-de-notre-premiere-base-de-donnees","text":"Apr\u00e8s avoir install\u00e9 et lanc\u00e9 le logiciel \"DB Browser for SQLite\", vous devriez obtenir ceci : Cliquez sur Nouvelle base de donn\u00e9es. Apr\u00e8s avoir choisi un nom pour votre base de donn\u00e9es (exemple par exemple \"db_livres.db\"), vous devriez avoir la fen\u00eatre suivante : Mais pour l\u2019instant elle ne contient aucune table (aucune relation), pour cr\u00e9er une table, cliquez sur l\u2019onglet \"Ex\u00e9cuter le SQL\". On obtient alors : Copiez-collez le texte ci-dessous dans la fen\u00eatre \"SQL 1\" 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT ); Cliquez ensuite sur le petit triangle situ\u00e9 au-dessus de la fen\u00eatre SQL 1 (ou appuyez sur F5), vous devriez avoir ceci Comme indiqu\u00e9 dans la fen\u00eatre, \"Requ\u00eate ex\u00e9cut\u00e9e avec succ\u00e8s\" ! Vous venez de cr\u00e9er votre premi\u00e8re table. Explications : Revenons sur cette premi\u00e8re requ\u00eate : Le CREATE TABLE LIVRES ne devrait pas vous poser de probl\u00e8me : nous cr\u00e9ons une nouvelle table nomm\u00e9e \"LIVRES\". La suite est \u00e0 peine plus complexe, nous cr\u00e9ons ensuite les attributs : id titre auteur ann_publi note Nous avons pour chaque attribut pr\u00e9cis\u00e9 son domaine : id : entier (INT), titre : cha\u00eene de caract\u00e8res (TEXT), auteur : cha\u00eene de caract\u00e8res, ann_publi : entier et note : entier L'attribut \"id\" va jouer ici le r\u00f4le de cl\u00e9 primaire. On peut aussi, par souci de s\u00e9curit\u00e9 (afin d'\u00e9viter que l'on utilise 2 fois la m\u00eame valeur pour l'attribut \"id\"), modifier le l'instruction SQL vue ci-dessus, afin de pr\u00e9ciser que l'attribut \"id\" est bien notre cl\u00e9 primaire : 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT , PRIMARY KEY ( id )); Notre syst\u00e8me de gestion de base de donn\u00e9es nous avertira si l'on tente d'attribuer 2 fois la m\u00eame valeur \u00e0 l'attribut \"id\". Nous allons maintenant ajouter des donn\u00e9es : Toujours dans l'onglet \"Ex\u00e9cuter le SQL\", apr\u00e8s avoir effac\u00e9 la fen\u00eatre SQL 1, copiez-collez dans cette m\u00eame fen\u00eatre la requ\u00eate ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 1 , '1984' , 'Orwell' , 1949 , 10 ), ( 2 , 'Dune' , 'Herbert' , 1965 , 8 ), ( 3 , 'Fondation' , 'Asimov' , 1951 , 9 ), ( 4 , 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 5 , 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 6 , 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 7 , 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 8 , 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 9 , 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 10 , 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 11 , 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 12 , 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 13 , 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 14 , 'Le monde des \u0100' , 'Van Vogt' , 1945 , 7 ), ( 15 , 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 16 , 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ); Ici aussi, aucun probl\u00e8me, la requ\u00eate a bien \u00e9t\u00e9 ex\u00e9cut\u00e9e : La table LIVRES contient bien les donn\u00e9es souhait\u00e9es (onglet \"Parcourir les donn\u00e9es\") :","title":"Cr\u00e9ation de notre premi\u00e8re base de donn\u00e9es"},{"location":"Terminale/BDD/sql_sqlite/#requetes-dinterrogations-de-la-base-de-donnees","text":"Nous allons apprendre \u00e0 effectuer des requ\u00eates d'interrogation sur la base de donn\u00e9es que nous venons de cr\u00e9er. Toutes les requ\u00eates se feront dans la fen\u00eatre SQL 1 de l'onglet \"Ex\u00e9cuter le SQL\"","title":"Requ\u00eates d'interrogations de la base de donn\u00e9es"},{"location":"Terminale/BDD/sql_sqlite/#requete-avec-select-et-from","text":"1 2 SELECT id , titre , auteur , ann_publi , note FROM LIVRES puis appuyez sur le triangle (ou la touche F5). Vous devriez voir s'afficher ceci : Comme vous pouvez le constater, notre requ\u00eate SQL a permis d'afficher tous les livres. Nous avons ici 2 mots cl\u00e9s du langage SQL SELECT qui permet de s\u00e9lectionner les attributs qui devront \u00eatre \"affich\u00e9s\" (je mets \"affich\u00e9s\" entre guillemets, car le but d'une requ\u00eate sql n'est pas forc\u00e9ment d'afficher les donn\u00e9es) et FROM qui indique la table qui doit \u00eatre utilis\u00e9e. Il est \u00e9videmment possible d'afficher seulement certains attributs (ou m\u00eame un seul) qui indique la table qui doit \u00eatre utilis\u00e9e. Remarque : on aurait pu \u00e9crire \u00e9galement pour obtenir tous les attributs : 1 2 SELECT * FROM LIVRES Exercice : \u00c9crivez et testez une requ\u00eate permettant d'obtenir uniquement uniquement les titres et les auteurs des livres Exercice : \u00c9crivez et testez une requ\u00eate permettant d'obtenir uniquement les titres des livres","title":"Requ\u00eate avec SELECT et FROM"},{"location":"Terminale/BDD/sql_sqlite/#requete-avec-condition-where-and-or","text":"Il est possible d'utiliser la clause WHERE afin d'imposer une (ou des) condition(s) permettant de s\u00e9lectionner uniquement certaines lignes. La condition doit suivre le mot-cl\u00e9 WHERE. Exemple : 1 2 3 SELECT titre , ann_publi FROM LIVRES WHERE auteur = 'Asimov' V\u00e9rifiez que vous obtenez bien uniquement les livres \u00e9crits par Isaac Asimov. Exercice : \u00c9crivez et testez une requ\u00eate permettant d'obtenir uniquement les titres des livres \u00e9crits par Philip K.Dick. Il est possible de combiner les conditions \u00e0 l'aide d'un OR ou d'un AND. 1 2 3 SELECT titre , ann_publi FROM LIVRES WHERE auteur = 'Asimov' AND ann_publi > 1953 V\u00e9rifiez que nous obtenons bien le livre \u00e9crit par Asimov publi\u00e9 apr\u00e8s 1953 (comme vous l'avez sans doute remarqu\u00e9, il est possible d'utiliser les op\u00e9rateurs d'in\u00e9galit\u00e9s). Exercice : \u00c9crire une requ\u00eate permettant d'obtenir les titres des livres publi\u00e9s apr\u00e8s 1945 qui ont une note sup\u00e9rieure ou \u00e9gale \u00e0 9.","title":"Requ\u00eate avec condition : WHERE, AND, OR"},{"location":"Terminale/BDD/sql_sqlite/#obtenir-des-reponses-dans-un-ordre-precis-avec-order-by","text":"Il est aussi possible de rajouter la clause SQL ORDER BY afin d'obtenir les r\u00e9sultats class\u00e9s dans un ordre pr\u00e9cis. Exemple : 1 2 SELECT id , titre , auteur , ann_publi , note FROM LIVRES ORDER by ann_publi ou bien : 1 2 3 SELECT titre FROM LIVRES WHERE auteur = 'Asimov' ORDER BY ann_publi Il est possible d'obtenir un classement en sens inverse \u00e0 l'aide de la clause DESC qu'il faut ajouter apr\u00e8s l'attribut de tri. Exercice : Ecrire la requ\u00eate pour obtenir les livres de K.Dick class\u00e9s du plus r\u00e9cent au plus ancien. On remarque qu'il est possible d'\u00e9viter les doublons gr\u00e2ce \u00e0 la clause DISTINCT","title":"Obtenir des r\u00e9ponses dans un ordre pr\u00e9cis avec ORDER BY"},{"location":"Terminale/BDD/sql_sqlite/#eviter-les-doublons-avec-distinct","text":"Tapez la req\u00eate suivante : 1 2 SELECT auteur FROM LIVRES Et comparez la \u00e0 celle-ci : 1 2 SELECT DISTINCT auteur FROM LIVRES","title":"\u00c9viter les doublons avec  DISTINCT"},{"location":"Terminale/BDD/sql_sqlite/#les-jointures","text":"Gr\u00e2ce aux jointures nous allons pouvoir associer 2 tables dans une m\u00eame requ\u00eate. En g\u00e9n\u00e9ral, les jointures consistent \u00e0 associer des lignes de 2 tables. Elles permettent d'\u00e9tablir un lien entre 2 tables. Qui dit lien entre 2 tables dit souvent clef \u00e9trang\u00e8re et clef primaire. Cr\u00e9er une nouvelle base de donn\u00e9es par exemple db_livres_auteurs.db dans laquelle vous cr\u00e9erez deux nouvelles tables : la table AUTEUR et la table LIVRE . 1 2 CREATE TABLE AUTEURS ( id INT , nom TEXT , prenom TEXT , ann_naissance INT , langue_ecriture TEXT , PRIMARY KEY ( id )); 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , id_auteur INT , ann_publi INT , note INT , PRIMARY KEY ( id )); Remarque : on aurait pu aussi \u00e9crire : 1 2 3 CREATE TABLE LIVRES ( id INT , titre TEXT , id_auteur INT , ann_publi INT , note INT , PRIMARY KEY ( id ), FOREIGN KEY ( id_auteur ) REFERENCES AUTEURS ( id )); Gr\u00e2ce \u00e0 cette pr\u00e9cision, sqlite sera capable de d\u00e9tecter les anomalies au niveau de cl\u00e9 \u00e9trang\u00e8re : essayez par exemple d'ajouter un livre \u00e0 la table LIVRES avec l'attribut \"id_auteur\" \u00e9gal \u00e0 11 ! Exercice : Remplissez les tables avec leurs donn\u00e9es (cf cours pr\u00e9c\u00e9dents). R\u00e9alisons maintenant la jointure entre les deux tables : 1 2 3 SELECT * FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id Le \"FROM LIVRES INNER JOIN AUTEURS\" permet de cr\u00e9er une jointure entre les tables LIVRES et AUTEURS (\"rassembler\" les tables LIVRES et AUTEURS en une seule grande table). Le ON LIVRES.id_auteur = AUTEURS.id signifie qu'une ligne quelconque A de la table LIVRES devra \u00eatre fusionn\u00e9e avec la ligne B de la table AUTEURS \u00e0 condition que l'attribut id de la ligne A soit \u00e9gal \u00e0 l'attribut id_auteur de la ligne B. Par exemple, la ligne 1 (id=1) de la table LIVRES (que l'on nommera dans la suite ligne A) sera fusionn\u00e9e avec la ligne 1 (id=1) de la table AUTEURS (que l'on nommera dans la suite B) car l'attribut id_auteur de la ligne A est \u00e9gal \u00e0 1 et l'attribut id de la ligne B est aussi \u00e9gal \u00e0 1. Autre exemple, la ligne 1 (id=1) de la table LIVRES (que l'on nommera dans la suite ligne A) ne sera pas fusionn\u00e9e avec la ligne 2 (id=2) de la table AUTEURS (que l'on nommera dans la suite B') car l'attribut id_auteur de la ligne A est \u00e9gal \u00e0 1 alors que l'attribut id de la ligne B' est \u00e9gal \u00e0 2. Exercice : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT * FROM AUTEURS INNER JOIN LIVRES ON LIVRES . id_auteur = AUTEURS . id Comme vous pouvez le constater, le r\u00e9sultat est diff\u00e9rent, cette fois-ci ce sont les lignes de la table LIVRES qui viennent se greffer sur la table AUTEURS. Dans le cas d'une jointure, il est tout \u00e0 fait possible de s\u00e9lectionner certains attributs et pas d'autres : Exercice : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT nom , prenom , titre FROM AUTEURS INNER JOIN LIVRES ON LIVRES . id_auteur = AUTEURS . id Exercice : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT titre , nom , prenom FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id Si un m\u00eame nom d'attribut est pr\u00e9sent dans les 2 tables (par exemple ici l'attribut id), il est n\u00e9cessaire d'ajouter le nom de la table devant afin de pouvoir les distinguer (AUTEURS.id et LIVRES.id) Exercice : Saisissez et testez la requ\u00eate SQL suivante : 1 2 SELECT titre , AUTEURS . id , nom , prenom FROM LIVRES Il est possible d'utiliser la clause WHERE dans le cas d'une jointure : Exercice : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 4 SELECT titre , nom , prenom FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id WHERE ann_publi > 1950 Enfin, pour terminer avec les jointures, vous devez savoir que nous avons abord\u00e9 la jointure la plus simple (INNER JOIN). Il existe des jointures plus complexes (CROSS JOIN, LEFT JOIN, RIGHT JOIN), ces autres jointures ne seront pas abord\u00e9es ici.","title":"Les jointures"},{"location":"Terminale/BDD/sql_sqlite/#requetes-de-mise-a-jour-insert-update-delete","text":"Nous allons repartir avec une base de donn\u00e9es qui contient une seule table : Cr\u00e9ez une nouvelle base de donn\u00e9es que vous nommerez par exemple db\\_livres.db Cr\u00e9ez une table LIVRES \u00e0 l'aide de la requ\u00eate SQL suivante : 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT , PRIMARY KEY ( id )); Ajoutez des donn\u00e9es \u00e0 la table LIVRES \u00e0 l'aide de la requ\u00eate SQL suivante : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 1 , '1984' , 'Orwell' , 1949 , 10 ), ( 2 , 'Dune' , 'Herbert' , 1965 , 8 ), ( 3 , 'Fondation' , 'Asimov' , 1951 , 9 ), ( 4 , 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 5 , 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 6 , 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 7 , 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 8 , 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 9 , 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 10 , 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 11 , 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 12 , 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 13 , 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 14 , 'Le monde des \u0100' , 'Van Vogt' , 1945 , 7 ), ( 15 , 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 16 , 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ); Nous avons d\u00e9j\u00e0 eu l'occasion de voir la requ\u00eate permettant d'ajouter une entr\u00e9e (utilisation d'INSERT) Exercice : Que va faire cette requ\u00eate ? V\u00e9rifiez votre r\u00e9ponse en l'ex\u00e9cutant et en faisant une requ\u00eate \"SELECT * FROM LIVRES\". 1 2 3 4 INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 17 , 'Hyp\u00e9rion' , 'Simmons' , 1989 , 8 ); Exercice : \u00c9crivez et testez une requ\u00eate permettant d'ajouter le livre de votre choix \u00e0 la table LIVRES. \"UPDATE\" va permettre de modifier une ou des entr\u00e9es. Nous utiliserons \"WHERE\", comme dans le cas d'un \"SELECT\", pour sp\u00e9cifier les entr\u00e9es \u00e0 modifier. Voici un exemple de modification : Exercice : Que va faire cette requ\u00eate ? V\u00e9rifiez votre r\u00e9ponse en l'ex\u00e9cutant et en faisant une requ\u00eate \"SELECT * FROM LIVRES\". 1 2 3 UPDATE LIVRES SET note = 7 WHERE titre = 'Hyp\u00e9rion' Exercice : \u00c9crivez une requ\u00eate permettant d'attribuer la note de 10 \u00e0 tous les livres \u00e9crits par Asimov publi\u00e9s apr\u00e8s 1950. Testez cette requ\u00eate. \"DELETE\" est utilis\u00e9e pour effectuer la suppression d'une (ou de plusieurs) entr\u00e9e(s). Ici aussi c'est le \"WHERE\" qui permettra de s\u00e9lectionner les entr\u00e9es \u00e0 supprimer. Exercice : Que va faire cette requ\u00eate ? V\u00e9rifiez votre r\u00e9ponse en l'ex\u00e9cutant et en faisant une requ\u00eate \"SELECT * FROM LIVRES\". 1 2 DELETE FROM LIVRES WHERE titre = 'Hyp\u00e9rion' Exercice : \u00c9crivez une requ\u00eate permettant de supprimer les livres publi\u00e9s avant 1945. Testez cette requ\u00eate.","title":"Requ\u00eates de mise \u00e0 jour : INSERT, UPDATE, DELETE"},{"location":"Terminale/BDD/voc_bdd/","text":"Base de Donnn\u00e9es # Introduction aux bases de donn\u00e9es # Introduction # Les donn\u00e9es et la gestion des donn\u00e9es sont devenues des enjeux tr\u00e8s importants. La quantit\u00e9 de donn\u00e9es est gigantesque. Il faut les stocker et les rendre disponibles au plus grand nombre. Depuis plusieurs ann\u00e9es, l\u2019utilisation des bases de donn\u00e9es relationnelles est la solution. D\u00e9finition d\u2019une base de donn\u00e9e # Une base de donn\u00e9es stocke des informations en rapport avec une activit\u00e9. Ces informations peuvent \u00eatre de natures tr\u00e8s h\u00e9t\u00e9rog\u00e8nes. Les informations sont structur\u00e9es et cette structure permet d\u2019ins\u00e9rer, de supprimer, de mettre \u00e0 jour et d\u2019interroger les informations contenues. Exemple 1 de base de donn\u00e9es : Vous avez un de nombreux livres et vous voulez stocker des informations \u00e0 propos de ces livres (auteur, pays, date, \u00e9dition, etc....) Exemple 2 de base de donn\u00e9es : Vous disposez chez vous de nombreuses cartes Arduino, capteurs, composants \u00e9lectroniques diverses et vari\u00e9s et vous voulez avoir un inventaire pr\u00e9cis de ce que vous avez. Un Syst\u00e8me de gestion de Base de Donn\u00e9es (SGBD) peut \u00eatre vu comme le logiciel qui prend en charge la structuration, le stockage, la mise \u00e0 jour et la maintenance des donn\u00e9es. C\u2019est en fait l\u2019interface entre la base de donn\u00e9es et les multiples utilisateurs (ou leurs programmes). Historique # Quasiment toutes les bases de donn\u00e9es que nous utilisons aujourd\u2019hui sont bas\u00e9es sur les travaux de Edgar Frank Codd (1970. C\u2019est le point essentiel dans l\u2019histoire des bases de donn\u00e9es). On peut \u00e9tablir la chronologie repr\u00e9sent\u00e9e ci-dessous. Pourquoi ne pas utiliser un tableur pour r\u00e9aliser une base de donn\u00e9es # Exercice : Regarder la vid\u00e9o suivante : En d\u00e9duire les avantages et les inconv\u00e9nients du tableur pour r\u00e9aliser une base de donn\u00e9es. Vocabulaire des bases de donn\u00e9es # Notion de relation, d\u2019attribut et de domaine d\u2019attribut # La notion de relation est au c\u0153ur des bases de donn\u00e9es relationnelles. Une relation (ou table) peut \u00eatre vue comme un tableau \u00e0 2 dimensions, compos\u00e9 d\u2019une en-t\u00eate et d\u2019un corps. Le corps est lui-m\u00eame compos\u00e9 de t-uplets (lignes) et d\u2019attributs (colonnes). L\u2019en-t\u00eate contient les intitul\u00e9s des attributs de l\u2019entit\u00e9 LIVRE. Le corps contient les donn\u00e9es proprement dites. Un exemple de relation est donn\u00e9e ci-dessous : Le t-uplet encadr\u00e9 en jaune sur le sch\u00e9ma ci-dessus contient les valeurs (ou \u00e9l\u00e9ments) suivantes : 11 ; La Plan\u00e8te des singe ; Boulle ; 1963 ; 8. L\u2019attribut \"titre\" est compos\u00e9 des valeurs suivantes : 1984 ; Dune ; Fondation ; Le meilleur des mondes ; Fahrenheit 451 ; Ubik ; Chroniques martiennes ; La nuit des temps ; Blade Runner ; Les Robots ; La Plan\u00e8te des singes ; Ravage ; Le Ma\u00eetre du Haut Ch\u00e2teau ; Le monde des \u0304A ; La Fin de l\u2019\u00e9ternit\u00e9 ; De la Terre \u00e0 la Lune. Pour chaque attribut d\u2019une relation, il est n\u00e9cessaire de d\u00e9finir un domaine : Le domaine d\u2019un attribut donn\u00e9 correspond \u00e0 un ensemble fini ou infini de valeurs admissibles. Par exemple : le domaine de l\u2019attribut \"id\" correspond \u00e0 l\u2019ensemble des entiers (la colonne \"id\" devra obligatoirement contenir des entiers). Autre exemple : le domaine de l\u2019attribut \"titre\" correspond \u00e0 l\u2019ensemble des cha\u00eenes de caract\u00e8res (not\u00e9 TEXT en g\u00e9n\u00e9ral). Dernier exemple : le domaine de l\u2019attribut \"note\" correspond \u00e0 l\u2019ensemble des entiers positifs (not\u00e9s INT en g\u00e9n\u00e9ral) R\u00e9sum\u00e9 # Relation (ou table) : c\u2019est l\u2019ensemble des enregistrements qui existent sur les donn\u00e9es ; Enregistrement (t-uplet, \u00e9l\u00e9ments ou encore ligne) sont les donn\u00e9es elles-m\u00eames. Le nombre d\u2019enregistrements d\u2019une relation R est appel\u00e9 cardinal de R ou #R. Attribut (champs ou colonne) : les diff\u00e9rents champs \u00e0 remplir ; Domaine : un ensemble de valeur que peut prendre une donn\u00e9e. La notion de domaine est \u00e0 rapprocher de la notion de type en Python. Ce domaine peut \u00eatre infini (chaine de caract\u00e8re pour caract\u00e9riser un nom) ou fini (date de sortie d\u2019un film de 1900 \u00e0 nos jours ...) Exercice : Dans une m\u00e9diath\u00e8que, les livres sont r\u00e9pertori\u00e9s sous forme de base de donn\u00e9es. Un extrait sous forme de tableau est repr\u00e9sent\u00e9e ci-dessous. R\u00e9pondre au questions suivantes. Quels sont les attributs de ce tableau ? Combien y a-t-il d\u2019enregistrements ? Quel est le domaine de chaque attribut ? Pr\u00e9cisez s\u2019il est fini ou non Le mod\u00e8le relationnel # Notion de cl\u00e9 primaire # Afin de ne pas avoir deux t-uplets identiques, on d\u00e9finit la notion de \"clef primaire\" (ou Primary Key). Une cl\u00e9 primaire est un attribut dont la valeur permet d\u2019identifier de mani\u00e8re unique un enregis- trement la relation . Autrement dit, si un attribut est consid\u00e9r\u00e9 comme cl\u00e9 primaire, on ne doit pas trouver dans toute la relation 2 fois la m\u00eame valeur pour cet attribut. Exemple : Dans la relation pr\u00e9c\u00e9dente, l\u2019attribut auteur ne peut pas \u00eatre une cl\u00e9 primaire ni l\u2019ann\u00e9e de publication. Par contre, il n\u2019est pas inconcevable que le titre du livre soit une cl\u00e9 primaire mais en g\u00e9n\u00e9ral, on cr\u00e9e un attribut particulier pour jouer le r\u00f4le de cl\u00e9 primaire. Remarques : Une cl\u00e9 primaire peut \u00eatre compos\u00e9e d\u2019une ou plusieurs colonnes. De plus, une cl\u00e9 primaire ne peut jamais avoir la valeur NULL. Exercice : Cr\u00e9ez une table de votre choix avec au moins 5 attributs et 10 enregistrements. Vous pr\u00e9ciserez la cl\u00e9 primaire. Notion de cl\u00e9 \u00e9trang\u00e8re # Revenons \u00e0 notre relation \"LIVRES\". Nous d\u00e9sirons maintenant un peu enrichir cette relation en ajoutant des informations suppl\u00e9mentaires sur les auteurs, nous obtenons alors la relation de la Figure suivante. Nous avons ajout\u00e9 3 attributs (\"prenom_auteur\", \"date_nai_auteur\" et \"langue_ecriture_auteur\"). Nous avons aussi renomm\u00e9 l\u2019attribut \"auteur\" en \"nom_auteur\". Comme vous l\u2019avez peut-\u00eatre remarqu\u00e9, il y a pas mal d\u2019informations dupliqu\u00e9es, par exemple, on retrouve 3 fois \"K.Dick Philip 1928 anglais\", m\u00eame chose pour \"Asimov Isaac 1920 anglais\"...Cette duplication est-elle indispensable ? Non ! Est-elle souhaitable ? Non plus ! En effet, dans une base de donn\u00e9es, on \u00e9vite autant que possible de dupliquer l\u2019information (sauf \u00e0 des fins de sauvegarde, mais ici c\u2019est toute autre chose). Si nous dupliquons autant de donn\u00e9es inutilement c\u2019est que notre structure ne doit pas \u00eatre la bonne ! Mais alors, comment faire pour avoir aussi des informations sur les auteurs des livres ? La solution est relativement simple : travailler avec 2 relations au lieu d\u2019une seule et cr\u00e9er un \"lien\" entre ces 2 relations. Nous avons cr\u00e9\u00e9 une relation AUTEURS et nous avons modifi\u00e9 la relation LIVRES : nous avons remplac\u00e9 l\u2019attribut \"auteur\" par un attribut \"id_auteur\". Comme vous l\u2019avez sans doute remarqu\u00e9, l\u2019attribut \"id_auteur\" de la relation LIVRES permet de cr\u00e9er un lien avec la relation AUTEURS. \"id_auteur\" correspond \u00e0 l\u2019attribut \"id\" de la relation AUTEURS. L\u2019introduction d\u2019une relation AUTEURS et la mise en place de liens entre cette relation et la relation LIVRES permettent d\u2019\u00e9viter la redondance d\u2019informations. Pour \u00e9tablir un lien entre 2 relations RA et RB, on ajoute \u00e0 RA un attribut x qui prendra les valeurs de la cl\u00e9 primaire de RB. Cet attribut x est appel\u00e9 cl\u00e9 \u00e9trang\u00e8re (ou Foreign Key). Cet attribut correspond \u00e0 la cl\u00e9 primaire d\u2019une autre table, d\u2019o\u00f9 le nom. Dans l\u2019exemple ci-dessus, l\u2019attribut \"id_auteur\" de la relation LIVRES permet bien d\u2019\u00e9tablir un lien entre la relation LIVRES et la relation AUTEURS, \"id_auteur\" correspond bien \u00e0 la cl\u00e9 primaire de la relation AUTEURS, conclusion : \"id_auteur\" est une cl\u00e9 \u00e9trang\u00e8re. Les contraintes d\u2019int\u00e9grit\u00e9 # Il existe un certain nombres de r\u00e8gles \u00e0 respecter pour respecter l\u2019int\u00e9grit\u00e9 d\u2019une base de donn\u00e9es. Ces r\u00e8gles visent \u00e0 pr\u00e9server la coh\u00e9rence des donn\u00e9es et garantir une stabilit\u00e9 de notre base dans le temps. Il existe des cat\u00e9gories de contraintes d\u2019int\u00e9grit\u00e9 \u00e0 respecter : contrainte d\u2019entit\u00e9 : contrainte de domaine contrainte de r\u00e9f\u00e9rence Contraintes d\u2019entit\u00e9 # Par d\u00e9finition, une relation est un ensemble d\u2019enregistrement. Un ensemble n\u2019ayant pas d\u2019\u00e9l\u00e9ments en double, il ne peut pas exister deux fois le m\u00eame enregistrement dans une relation. Toute relation doit donc poss\u00e9der une cl\u00e9 unique (cl\u00e9 primaire). Contraintes de domaine # Les donn\u00e9es que nous souhaitons stocker dans notre base de donn\u00e9es ont des formats diff\u00e9rents. On parle alors de domaine. On peut s\u2019inspirer des types de donn\u00e9es des langages de programmation que nous avons \u00e9tudi\u00e9s (integer, bool\u00e9ens, float, char, string). Les contraintes de domaine doivent permettre de : repr\u00e9senter les donn\u00e9es sans perte d\u2019information ; d\u2019\u00e9viter les erreurs de saisies. Contraintes de r\u00e9f\u00e9rence # Correctement construite, une base de donn\u00e9es fait appel \u00e0 des donn\u00e9es situ\u00e9es dans diff\u00e9rentes relations. Pour que les donn\u00e9es restent utilisables et coh\u00e9rentes, il ne faut pas que l\u2019on puisse d\u00e9truire des donn\u00e9es qui d\u00e9pendent les une des autres. C\u2019est le r\u00f4le de l\u2019int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle de prot\u00e9ger ces relations. Autrement dit, l\u2019int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle v\u00e9rifie qu\u2019une valeur de cl\u00e9 \u00e9trang\u00e8re existe bien en tant que valeur de cl\u00e9 primaire dans une autre table. Sch\u00e9ma d\u2019une relation # On appelle sch\u00e9ma relationnel l\u2019ensemble des relations pr\u00e9sentes dans une base de donn\u00e9es. C\u2019est \u00e0 dire qu\u2019il faut fournir : les noms des relations la liste des attributs et de leurs domaines la cl\u00e9 primaire (on la souligne) les cl\u00e9s \u00e9trang\u00e8res (pr\u00e9c\u00e9d\u00e9es d\u2019un #) Pour notre exemple cela donne : 1 2 3 LIVRES ( id : entiers positifs , titre : str , # id_auteur : entiers positifs , ann_publi : entiers positifs , note : entiers positifs ) AUTEURS ( id : entiers positifs , nom : str , prenom : str , ann_naissance : entiers positifs , langue_ecriture : str ) On peut aussi repr\u00e9senter ce sch\u00e9ma relationnel par : Exercice : Donner le sch\u00e9ma de la relation. Nom Pr\u00e9nom Date de naissance Sp\u00e9 1 Sp\u00e9 2 Garcin Catherine 13/01/2002 Maths PC Thy jean 11/08/2001 Maths NSI Thonnin Jean 11/08/2001 NSI Maths","title":"Introduction BDD"},{"location":"Terminale/BDD/voc_bdd/#base-de-donnnees","text":"","title":"Base de Donnn\u00e9es"},{"location":"Terminale/BDD/voc_bdd/#introduction-aux-bases-de-donnees","text":"","title":"Introduction aux bases de donn\u00e9es"},{"location":"Terminale/BDD/voc_bdd/#introduction","text":"Les donn\u00e9es et la gestion des donn\u00e9es sont devenues des enjeux tr\u00e8s importants. La quantit\u00e9 de donn\u00e9es est gigantesque. Il faut les stocker et les rendre disponibles au plus grand nombre. Depuis plusieurs ann\u00e9es, l\u2019utilisation des bases de donn\u00e9es relationnelles est la solution.","title":"Introduction"},{"location":"Terminale/BDD/voc_bdd/#definition-dune-base-de-donnee","text":"Une base de donn\u00e9es stocke des informations en rapport avec une activit\u00e9. Ces informations peuvent \u00eatre de natures tr\u00e8s h\u00e9t\u00e9rog\u00e8nes. Les informations sont structur\u00e9es et cette structure permet d\u2019ins\u00e9rer, de supprimer, de mettre \u00e0 jour et d\u2019interroger les informations contenues. Exemple 1 de base de donn\u00e9es : Vous avez un de nombreux livres et vous voulez stocker des informations \u00e0 propos de ces livres (auteur, pays, date, \u00e9dition, etc....) Exemple 2 de base de donn\u00e9es : Vous disposez chez vous de nombreuses cartes Arduino, capteurs, composants \u00e9lectroniques diverses et vari\u00e9s et vous voulez avoir un inventaire pr\u00e9cis de ce que vous avez. Un Syst\u00e8me de gestion de Base de Donn\u00e9es (SGBD) peut \u00eatre vu comme le logiciel qui prend en charge la structuration, le stockage, la mise \u00e0 jour et la maintenance des donn\u00e9es. C\u2019est en fait l\u2019interface entre la base de donn\u00e9es et les multiples utilisateurs (ou leurs programmes).","title":"D\u00e9finition d\u2019une base de donn\u00e9e"},{"location":"Terminale/BDD/voc_bdd/#historique","text":"Quasiment toutes les bases de donn\u00e9es que nous utilisons aujourd\u2019hui sont bas\u00e9es sur les travaux de Edgar Frank Codd (1970. C\u2019est le point essentiel dans l\u2019histoire des bases de donn\u00e9es). On peut \u00e9tablir la chronologie repr\u00e9sent\u00e9e ci-dessous.","title":"Historique"},{"location":"Terminale/BDD/voc_bdd/#pourquoi-ne-pas-utiliser-un-tableur-pour-realiser-une-base-de-donnees","text":"Exercice : Regarder la vid\u00e9o suivante : En d\u00e9duire les avantages et les inconv\u00e9nients du tableur pour r\u00e9aliser une base de donn\u00e9es.","title":"Pourquoi ne pas utiliser un tableur pour r\u00e9aliser une base de donn\u00e9es"},{"location":"Terminale/BDD/voc_bdd/#vocabulaire-des-bases-de-donnees","text":"","title":"Vocabulaire des bases de donn\u00e9es"},{"location":"Terminale/BDD/voc_bdd/#notion-de-relation-dattribut-et-de-domaine-dattribut","text":"La notion de relation est au c\u0153ur des bases de donn\u00e9es relationnelles. Une relation (ou table) peut \u00eatre vue comme un tableau \u00e0 2 dimensions, compos\u00e9 d\u2019une en-t\u00eate et d\u2019un corps. Le corps est lui-m\u00eame compos\u00e9 de t-uplets (lignes) et d\u2019attributs (colonnes). L\u2019en-t\u00eate contient les intitul\u00e9s des attributs de l\u2019entit\u00e9 LIVRE. Le corps contient les donn\u00e9es proprement dites. Un exemple de relation est donn\u00e9e ci-dessous : Le t-uplet encadr\u00e9 en jaune sur le sch\u00e9ma ci-dessus contient les valeurs (ou \u00e9l\u00e9ments) suivantes : 11 ; La Plan\u00e8te des singe ; Boulle ; 1963 ; 8. L\u2019attribut \"titre\" est compos\u00e9 des valeurs suivantes : 1984 ; Dune ; Fondation ; Le meilleur des mondes ; Fahrenheit 451 ; Ubik ; Chroniques martiennes ; La nuit des temps ; Blade Runner ; Les Robots ; La Plan\u00e8te des singes ; Ravage ; Le Ma\u00eetre du Haut Ch\u00e2teau ; Le monde des \u0304A ; La Fin de l\u2019\u00e9ternit\u00e9 ; De la Terre \u00e0 la Lune. Pour chaque attribut d\u2019une relation, il est n\u00e9cessaire de d\u00e9finir un domaine : Le domaine d\u2019un attribut donn\u00e9 correspond \u00e0 un ensemble fini ou infini de valeurs admissibles. Par exemple : le domaine de l\u2019attribut \"id\" correspond \u00e0 l\u2019ensemble des entiers (la colonne \"id\" devra obligatoirement contenir des entiers). Autre exemple : le domaine de l\u2019attribut \"titre\" correspond \u00e0 l\u2019ensemble des cha\u00eenes de caract\u00e8res (not\u00e9 TEXT en g\u00e9n\u00e9ral). Dernier exemple : le domaine de l\u2019attribut \"note\" correspond \u00e0 l\u2019ensemble des entiers positifs (not\u00e9s INT en g\u00e9n\u00e9ral)","title":"Notion de relation, d\u2019attribut et de domaine d\u2019attribut"},{"location":"Terminale/BDD/voc_bdd/#resume","text":"Relation (ou table) : c\u2019est l\u2019ensemble des enregistrements qui existent sur les donn\u00e9es ; Enregistrement (t-uplet, \u00e9l\u00e9ments ou encore ligne) sont les donn\u00e9es elles-m\u00eames. Le nombre d\u2019enregistrements d\u2019une relation R est appel\u00e9 cardinal de R ou #R. Attribut (champs ou colonne) : les diff\u00e9rents champs \u00e0 remplir ; Domaine : un ensemble de valeur que peut prendre une donn\u00e9e. La notion de domaine est \u00e0 rapprocher de la notion de type en Python. Ce domaine peut \u00eatre infini (chaine de caract\u00e8re pour caract\u00e9riser un nom) ou fini (date de sortie d\u2019un film de 1900 \u00e0 nos jours ...) Exercice : Dans une m\u00e9diath\u00e8que, les livres sont r\u00e9pertori\u00e9s sous forme de base de donn\u00e9es. Un extrait sous forme de tableau est repr\u00e9sent\u00e9e ci-dessous. R\u00e9pondre au questions suivantes. Quels sont les attributs de ce tableau ? Combien y a-t-il d\u2019enregistrements ? Quel est le domaine de chaque attribut ? Pr\u00e9cisez s\u2019il est fini ou non","title":"R\u00e9sum\u00e9"},{"location":"Terminale/BDD/voc_bdd/#le-modele-relationnel","text":"","title":"Le mod\u00e8le relationnel"},{"location":"Terminale/BDD/voc_bdd/#notion-de-cle-primaire","text":"Afin de ne pas avoir deux t-uplets identiques, on d\u00e9finit la notion de \"clef primaire\" (ou Primary Key). Une cl\u00e9 primaire est un attribut dont la valeur permet d\u2019identifier de mani\u00e8re unique un enregis- trement la relation . Autrement dit, si un attribut est consid\u00e9r\u00e9 comme cl\u00e9 primaire, on ne doit pas trouver dans toute la relation 2 fois la m\u00eame valeur pour cet attribut. Exemple : Dans la relation pr\u00e9c\u00e9dente, l\u2019attribut auteur ne peut pas \u00eatre une cl\u00e9 primaire ni l\u2019ann\u00e9e de publication. Par contre, il n\u2019est pas inconcevable que le titre du livre soit une cl\u00e9 primaire mais en g\u00e9n\u00e9ral, on cr\u00e9e un attribut particulier pour jouer le r\u00f4le de cl\u00e9 primaire. Remarques : Une cl\u00e9 primaire peut \u00eatre compos\u00e9e d\u2019une ou plusieurs colonnes. De plus, une cl\u00e9 primaire ne peut jamais avoir la valeur NULL. Exercice : Cr\u00e9ez une table de votre choix avec au moins 5 attributs et 10 enregistrements. Vous pr\u00e9ciserez la cl\u00e9 primaire.","title":"Notion de cl\u00e9 primaire"},{"location":"Terminale/BDD/voc_bdd/#notion-de-cle-etrangere","text":"Revenons \u00e0 notre relation \"LIVRES\". Nous d\u00e9sirons maintenant un peu enrichir cette relation en ajoutant des informations suppl\u00e9mentaires sur les auteurs, nous obtenons alors la relation de la Figure suivante. Nous avons ajout\u00e9 3 attributs (\"prenom_auteur\", \"date_nai_auteur\" et \"langue_ecriture_auteur\"). Nous avons aussi renomm\u00e9 l\u2019attribut \"auteur\" en \"nom_auteur\". Comme vous l\u2019avez peut-\u00eatre remarqu\u00e9, il y a pas mal d\u2019informations dupliqu\u00e9es, par exemple, on retrouve 3 fois \"K.Dick Philip 1928 anglais\", m\u00eame chose pour \"Asimov Isaac 1920 anglais\"...Cette duplication est-elle indispensable ? Non ! Est-elle souhaitable ? Non plus ! En effet, dans une base de donn\u00e9es, on \u00e9vite autant que possible de dupliquer l\u2019information (sauf \u00e0 des fins de sauvegarde, mais ici c\u2019est toute autre chose). Si nous dupliquons autant de donn\u00e9es inutilement c\u2019est que notre structure ne doit pas \u00eatre la bonne ! Mais alors, comment faire pour avoir aussi des informations sur les auteurs des livres ? La solution est relativement simple : travailler avec 2 relations au lieu d\u2019une seule et cr\u00e9er un \"lien\" entre ces 2 relations. Nous avons cr\u00e9\u00e9 une relation AUTEURS et nous avons modifi\u00e9 la relation LIVRES : nous avons remplac\u00e9 l\u2019attribut \"auteur\" par un attribut \"id_auteur\". Comme vous l\u2019avez sans doute remarqu\u00e9, l\u2019attribut \"id_auteur\" de la relation LIVRES permet de cr\u00e9er un lien avec la relation AUTEURS. \"id_auteur\" correspond \u00e0 l\u2019attribut \"id\" de la relation AUTEURS. L\u2019introduction d\u2019une relation AUTEURS et la mise en place de liens entre cette relation et la relation LIVRES permettent d\u2019\u00e9viter la redondance d\u2019informations. Pour \u00e9tablir un lien entre 2 relations RA et RB, on ajoute \u00e0 RA un attribut x qui prendra les valeurs de la cl\u00e9 primaire de RB. Cet attribut x est appel\u00e9 cl\u00e9 \u00e9trang\u00e8re (ou Foreign Key). Cet attribut correspond \u00e0 la cl\u00e9 primaire d\u2019une autre table, d\u2019o\u00f9 le nom. Dans l\u2019exemple ci-dessus, l\u2019attribut \"id_auteur\" de la relation LIVRES permet bien d\u2019\u00e9tablir un lien entre la relation LIVRES et la relation AUTEURS, \"id_auteur\" correspond bien \u00e0 la cl\u00e9 primaire de la relation AUTEURS, conclusion : \"id_auteur\" est une cl\u00e9 \u00e9trang\u00e8re.","title":"Notion de cl\u00e9 \u00e9trang\u00e8re"},{"location":"Terminale/BDD/voc_bdd/#les-contraintes-dintegrite","text":"Il existe un certain nombres de r\u00e8gles \u00e0 respecter pour respecter l\u2019int\u00e9grit\u00e9 d\u2019une base de donn\u00e9es. Ces r\u00e8gles visent \u00e0 pr\u00e9server la coh\u00e9rence des donn\u00e9es et garantir une stabilit\u00e9 de notre base dans le temps. Il existe des cat\u00e9gories de contraintes d\u2019int\u00e9grit\u00e9 \u00e0 respecter : contrainte d\u2019entit\u00e9 : contrainte de domaine contrainte de r\u00e9f\u00e9rence","title":"Les contraintes d\u2019int\u00e9grit\u00e9"},{"location":"Terminale/BDD/voc_bdd/#contraintes-dentite","text":"Par d\u00e9finition, une relation est un ensemble d\u2019enregistrement. Un ensemble n\u2019ayant pas d\u2019\u00e9l\u00e9ments en double, il ne peut pas exister deux fois le m\u00eame enregistrement dans une relation. Toute relation doit donc poss\u00e9der une cl\u00e9 unique (cl\u00e9 primaire).","title":"Contraintes d\u2019entit\u00e9"},{"location":"Terminale/BDD/voc_bdd/#contraintes-de-domaine","text":"Les donn\u00e9es que nous souhaitons stocker dans notre base de donn\u00e9es ont des formats diff\u00e9rents. On parle alors de domaine. On peut s\u2019inspirer des types de donn\u00e9es des langages de programmation que nous avons \u00e9tudi\u00e9s (integer, bool\u00e9ens, float, char, string). Les contraintes de domaine doivent permettre de : repr\u00e9senter les donn\u00e9es sans perte d\u2019information ; d\u2019\u00e9viter les erreurs de saisies.","title":"Contraintes de domaine"},{"location":"Terminale/BDD/voc_bdd/#contraintes-de-reference","text":"Correctement construite, une base de donn\u00e9es fait appel \u00e0 des donn\u00e9es situ\u00e9es dans diff\u00e9rentes relations. Pour que les donn\u00e9es restent utilisables et coh\u00e9rentes, il ne faut pas que l\u2019on puisse d\u00e9truire des donn\u00e9es qui d\u00e9pendent les une des autres. C\u2019est le r\u00f4le de l\u2019int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle de prot\u00e9ger ces relations. Autrement dit, l\u2019int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle v\u00e9rifie qu\u2019une valeur de cl\u00e9 \u00e9trang\u00e8re existe bien en tant que valeur de cl\u00e9 primaire dans une autre table.","title":"Contraintes de r\u00e9f\u00e9rence"},{"location":"Terminale/BDD/voc_bdd/#schema-dune-relation","text":"On appelle sch\u00e9ma relationnel l\u2019ensemble des relations pr\u00e9sentes dans une base de donn\u00e9es. C\u2019est \u00e0 dire qu\u2019il faut fournir : les noms des relations la liste des attributs et de leurs domaines la cl\u00e9 primaire (on la souligne) les cl\u00e9s \u00e9trang\u00e8res (pr\u00e9c\u00e9d\u00e9es d\u2019un #) Pour notre exemple cela donne : 1 2 3 LIVRES ( id : entiers positifs , titre : str , # id_auteur : entiers positifs , ann_publi : entiers positifs , note : entiers positifs ) AUTEURS ( id : entiers positifs , nom : str , prenom : str , ann_naissance : entiers positifs , langue_ecriture : str ) On peut aussi repr\u00e9senter ce sch\u00e9ma relationnel par : Exercice : Donner le sch\u00e9ma de la relation. Nom Pr\u00e9nom Date de naissance Sp\u00e9 1 Sp\u00e9 2 Garcin Catherine 13/01/2002 Maths PC Thy jean 11/08/2001 Maths NSI Thonnin Jean 11/08/2001 NSI Maths","title":"Sch\u00e9ma d\u2019une relation"},{"location":"Terminale/Programmation/decidabilite_calculabilite/","text":"D\u00e9cidabilit\u00e9 et calculabilit\u00e9 # Quelques rep\u00e8res historiques # Wilhelm Schickard (1592 \u2013 1635) , professeur \u00e0 l\u2019Universit\u00e9 de T\u00fcbingen (Allemagne), aurait dessin\u00e9 les plans de la premi\u00e8re machine \u00e0 calculer (m\u00e9canique). Cette machine n\u2019a pas \u00e9t\u00e9 construite. Blaise Pascal (1623 \u2013 1662) , math\u00e9maticien et philosophe, construit \u00e0 l\u2019\u00e2ge de 19 ans la Pascaline, premi\u00e8re machine \u00e0 calculer op\u00e9rationnelle du XVII\u00e8 si\u00e8cle . Gottfried Wilhelm Leibniz (1646 \u2013 1716), math\u00e9maticien et philosophe, d\u00e9veloppe aussi une machine \u00e0 calculer. Il pr\u00e9conise des id\u00e9es tr\u00e8s modernes : la machine de calcul universelle, le sch\u00e9ma \u201centr\u00e9e*calculsortie\u201d, la base 2 pour la repr\u00e9sentation des nombres. Le m\u00e9tier \u00e0 tisser de Joseph Marie Jacquard (1752 \u2013 1834) est bas\u00e9 sur l\u2019utilisation de cartes perfor\u00e9es, et est \u00e0 l\u2019origine des premiers programmes de calcul. Charles Babbage (1791 \u2013 1871), professeur \u00e0 Cambridge, construit la machine diff\u00e9rentielle et imagine les plans de la machine analytique (machine programmable). La derni\u00e8re peut \u00eatre consid\u00e9r\u00e9e comme pr\u00e9curseur des ordinateurs modernes, consistant d\u2019une unit\u00e9 de contr\u00f4le, une unit\u00e9 de calcul, une m\u00e9moire, ainsi que l\u2019entr\u00e9e*sortie. Ada Lovelace (1815 * 1852) , est une pionni\u00e8re de la science informatique. Elle est principalement connue pour avoir r\u00e9alis\u00e9 le premier v\u00e9ritable programme informatique, lors de son travail sur un anc\u00eatre de l\u2019ordinateur : la machine analytique de Charles Babbage. Dans ses notes, on trouve en effet le premier programme publi\u00e9, destin\u00e9 \u00e0 \u00eatre ex\u00e9cut\u00e9 par une machine, ce qui fait consid\u00e9rer Ada Lovelace comme le premier programmeur du monde. Elle a \u00e9galement entrevu et d\u00e9crit certaines possibilit\u00e9s offertes par les calculateurs universels, allant bien au*del\u00e0 du calcul num\u00e9rique et de ce qu\u2019imaginaient Babbage et ses contemporains. Elle est assez connue dans les pays anglo-saxons et en Allemagne, notamment dans les milieux f\u00e9ministes ; elle est moins connue en France, mais de nombreux d\u00e9veloppeurs connaissent le langage Ada, nomm\u00e9 en son honneur. David Hilbert (1862 \u2013 1943) , math\u00e9maticien allemand. En 1900, Hilbert propose 23 probl\u00e8mes dont certains ne sont pas r\u00e9solus \u00e0 ce jour. Pour voir la liste des probl\u00e8mes. Il pr\u00e9sente en 1920 un programme de recherche visant \u00e0 clarifier les fondements des math\u00e9matiques : \u201ctout \u00e9nonc\u00e9 math\u00e9matique peut \u00eatre soit prouv\u00e9 ou r\u00e9fut\u00e9\u201d. Plus tard il \u00e9nonce le \u201cEntscheidungsproblem\u201d : montrer de fa\u00e7on \u201cm\u00e9canique\u201d si un \u00e9nonc\u00e9 math\u00e9matique est vrai ou faux. Il faudra attendre 1936 pour qu\u2019Alan Turing s\u2019int\u00e9resse au probl\u00e8me n\u00b010 avec Church (dont il \u00e9tait le doctorant). Ils d\u00e9finissent rigoureusement la notion d\u2019algorithme. Kurt G\u00f6del (1906 \u2013 1978) , un des logiciens les plus fameux de l\u2019histoire, r\u00e9pond en 1931 n\u00e9gativement quant au programme propos\u00e9 par Hilbert, en montrant que tout syst\u00e8me formel suffisamment puissant est soit incomplet ou incoh\u00e9rent. Il montre ceci en construisant une formule qui exprime le fait qu\u2019elle n\u2019est pas d\u00e9montrable. Alan Turing (1912 \u2013 1954) et Alonzo Church (1903 \u2013 1995) montrent ind\u00e9pendamment, en 1936, l\u2019ind\u00e9cidabilit\u00e9 de l\u2019Entscheidungsproblem. Turing propose \"la machine de Turing\" comme mod\u00e8le math\u00e9matique de calcul, et Church le lambda calcul. Ils \u00e9noncent le principe selon lequel tout ce qui est calculable peut \u00eatre calcul\u00e9 sur un de ces deux mod\u00e8les (\u201cth\u00e8se de Church*Turing\u201d). La Machine de Turing est invent\u00e9e pour r\u00e9pondre au probl\u00e8me math\u00e9matiques de la d\u00e9cidabilit\u00e9 propos\u00e9 par Hilbert. Une machine de Turing a pour but de d\u00e9crire les algorithmes. Il faut savoir que Turing ne verra pas de son vivant une r\u00e9alisation concr\u00e8te de sa \"machine\". Pour plus d\u2019information sur la vie d\u2019Alan Turing, voir cette vid\u00e9o. Machine de Turing # D\u00e9finition # Il s\u2019agit d\u2019une machine imaginaire invent\u00e9e par Alan Turing en 1936 pour expliquer la notion de \"proc\u00e9dure m\u00e9canique\" : l\u2019\u00e9quivalent d\u2019un algorithme. Cette machine est la plus \u00e9l\u00e9mentaire possible destin\u00e9e \u00e0 mettre en \u0153uvre ces m\u00e9canismes de calcul, num\u00e9riques ou symboliques, comme le font notamment les ordinateurs. Une machine de Turing est un appareil disposant : d\u2019un ruban infiniment long divis\u00e9 en cases, dans lesquels la machine peut \u00e9crire des symboles ; une t\u00eate qui peut lire et \u00e9crire sur ce ruban ; une table de transition. Chacune des lignes de cette table est associ\u00e9e \u00e0 un \u00e9tat et sp\u00e9cifie les actions \u00e0 effectuer quand la machine est dans cet \u00e9tat, en fonction du symbole pr\u00e9sent sous la t\u00eate de lecture. Ces actions peuvent \u00eatre l\u2019\u00e9criture d\u2019un symbole (ici un 0 ou un 1) et le d\u00e9placement du ruban d\u2019une case \u00e0 droite ou \u00e0 gauche. La table sp\u00e9cifie \u00e9galement le nouvel \u00e9tat apr\u00e8s ex\u00e9cution de ces actions. La machine s\u2019arr\u00eate quand un \u00e9tat marqu\u00e9 comme final est atteint. Cette machine fonctionne comme une machine \u00e0 calculer en binaire. Turing envisage le cas particulier o\u00f9 les symboles utilis\u00e9s sont 0 et 1. L\u2019entr\u00e9e du programme est un liste de symboles binaires. Une fois effectu\u00e9, c\u2019est sur ce m\u00eame ruban que sera \u00e9crit la sortie du programme. Remarque : En 2012, pour c\u00e9l\u00e9brer le centenaire de la naissance d\u2019Alan Turing, huit \u00e9tudiant en master de l\u2019\u00c9cole Normale Sup\u00e9rieure (ENS) de Lyon ont fabriqu\u00e9 en LEGO la premi\u00e8re machine r\u00e9elle (purement m\u00e9canique) du mod\u00e8le de Turing. En voici le lien : http://rubens.ens-lyon.fr/fr/ Exemple # La machine peut \u00eatre dans deux \u00e9tats e1 et e2. Si la machine est dans l\u2019\u00e9tat e1 et contient un blanc, elle \u00e9crit un blanc. Le rubanc se d\u00e9place vers la gauche et la machine est dans l\u2019\u00e9tat e2. Si la machine est dans l\u2019\u00e9tat e2 et qu\u2019elle lit un 0, elle \u00e9crit un 1 et si elle lit un 1 elle \u00e9crit un 0. Dans les deux cas, le ruban se d\u00e9place vers la gauche et la machine reste dans l\u2019\u00e9tat e2. Enfin, si elle lit un blanc, elle \u00e9crit un blanc et la machine s\u2019arr\u00eate. Ce qui nous donne la table de transition suivante : Table de transition Les \u00e9tapes successives sont repr\u00e9sent\u00e9es ci-dessous. Initialement la machine se trouve dans l\u2019\u00e9tat e1. La machine lit un blanc, passe dans l\u2019\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un 1, donc \u00e9crit un 0, reste dans l\u2019\u00e9tat e2 et ruban se d\u00e9place vers la gauche La machine lit un 0, donc \u00e9crit un 1, reste dans l\u2019\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un 1 donc \u00e9crit un 0, reste toujours dans l\u2019\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un blanc, \u00e9crit un blanc, le ruban se d\u00e9place encore vers la gauche et la machine s\u2019arr\u00eate. Remarque 2 : Un \u00e9mulateur de cette machine de Turing sur ce site . Diagramme # On peut construire un diagramme de la machine (on parle aussi d\u2019automate). Pour d\u00e9finir un diagramme, il faut : un alphabet utilis\u00e9 par la machine (liste des caract\u00e8res utilis\u00e9s). Exemple \u20190\u2019,\u20191\u2019,\u2019b\u2019. des \u00e9tats sont symbolis\u00e9s par des cercles et \u00e9crits sous la forme e1, e2, etc (ou encore q1, q2, etc). un \u00e9tat final repr\u00e9sent\u00e9 par ef (ou qf) mais parfois indiqu\u00e9 par une chaine de caract\u00e8res ou un caract\u00e8re particulier (\"final\"). repr\u00e9senter les d\u00e9placements par les lettres L et R (left et right). utiliser des triplets (lecture ; \u00e9criture ; d\u00e9placement) et des fl\u00e8ches qui indiquent l\u2019\u00e9tat suivant. Exemple 1 : Liste des caract\u00e8res possiblement pr\u00e9sents sur le ruban { 0 ; 1 ; b } A l\u2019\u00e9tat e1, si la t\u00eate lit un 0 alors elle \u00e9crit 1, se d\u00e9place \u00e0 droite et reste \u00e0 l\u2019\u00e9tat e1. A l\u2019\u00e9tat e1, si la t\u00eate lit un 1 alors elle \u00e9crit 0, se d\u00e9place \u00e0 droite et reste \u00e0 l\u2019\u00e9tat e1. A l\u2019\u00e9tat e1, si la t\u00eate lit un blanc alors elle n\u2019\u00e9crit rien et passe \u00e0 l\u2019\u00e9tat ef (elle s\u2019arr\u00eate). Ce qui nous donne la table de transition suivante : Et donc le diagramme suivant : Exemple 2 : Liste des caract\u00e8res possiblement pr\u00e9sents sur le ruban { 0 , 0 , b } si la t\u00eate lit un blanc alors elle n\u2019\u00e9crit rien et se d\u00e9place \u00e0 droite en restant \u00e0 l\u2019\u00e9tat e0. A l\u2019\u00e9tat e0, si la t\u00eate lit un 0 alors elle n\u2019\u00e9crit rien, ne se d\u00e9place pas et passe \u00e0 l\u2019\u00e9tat e1. A l\u2019\u00e9tat e0, si la t\u00eate lit un 1 alors elle n\u2019\u00e9crit rien, ne se d\u00e9place pas et passe \u00e0 l\u2019\u00e9tat e1. A l\u2019\u00e9tat e1, si la t\u00eate lit un 0 alors elle \u00e9crit 1, se d\u00e9place \u00e0 droite et reste \u00e0 l\u2019\u00e9tat e1. A l\u2019\u00e9tat e1, si la t\u00eate lit un 1 alors elle \u00e9crit 0, se d\u00e9place \u00e0 droite et reste \u00e0 l\u2019\u00e9tat e1. Ce qui nous donne la table de transition suivante : Et donc le diagramme suivant : D\u00e9cidabilit\u00e9 et calculabilit\u00e9 # Calculabilit\u00e9 # Une fonction calculable est une fonction que l\u2019on peut \u00e9crire sous forme d\u2019algorithme. Les machines de Turing sont une r\u00e9ponse \u00e0 la recherche de d\u00e9finition d\u2019une fonction calculable. C\u2019est la th\u00e8se de Church : \"Toute fonction physiquement calculable est calculable par une machine de Turing\". Fonctions non-calculables : contrairement \u00e0 ce que l\u2019on pourrait imaginer, il existe des fonctions qui ne sont pas calculables. Il y en a m\u00eame une infinit\u00e9. Remarque : La calculabilit\u00e9 ne d\u00e9pend pas du langage utilis\u00e9. Si une fonction est calculable, il existe un algorithme dans le langage que vous utilisez qui permet de la calculer. D\u00e9cidabilit\u00e9 # Une propri\u00e9t\u00e9 est d\u00e9cidable si l'on peut d\u00e9terminer en un nombre fini d'\u00e9tapes si elle est vraie ou fausse quel que soit le contexte de d\u00e9part. (On parle de probl\u00e8me de d\u00e9cision, \u00e0 r\u00e9ponse oui ou non) Attention, cela ne veut pas dire que la propri\u00e9t\u00e9 doit \u00eatre toujours fausse ou vraie. Donnons, pour illustrer la d\u00e9finition, quelques exemples. Savoir si un nombre est premier est d\u00e9cidable. La r\u00e9ponse sera soit 'vrai', soit 'faux' et un algorithme simple est de diviser ce nombre par les entiers inf\u00e9rieurs \u00e0 lui m\u00eame. Il y a donc un nombre fini d'\u00e9tapes et une r\u00e9ponse qui est soit vrai soit faux. Dire si un nombre est pair (on regarde le reste de la division Euclidienne par 2) Les exemples ne manquent pas. On peut alors se poser la question: \"tout est-il d\u00e9cidable?\". La r\u00e9ponse est non. Si c'\u00e9tait le cas, cela voudrait dire que l'on pourrait prouver qu'une propri\u00e9t\u00e9 math\u00e9matique est vraie ou fausse avec un algorithme ! Donnons des exemples de probl\u00e8mes non d\u00e9cidables. Je parcours un r\u00e9seau al\u00e9atoirement, est-ce que je vais atteindre une cible donn\u00e9es en un nombre fini d'\u00e9tapes? Pas forc\u00e9ment, m\u00eame si la probabilit\u00e9 d'arriver \u00e0 destination tend vers 1 quand le nombre d'\u00e9tapes tend vers l'infini! Un autre exemple plus connu: le probl\u00e8me de l'arr\u00eat d'un programme est-il d\u00e9cidable? Est-ce que je peux \u00e9crire un programme qui me dira si un programme va s'arr\u00eater ou non (selon les valeurs d'entr\u00e9es)? Nous verrons que l'on peut prouver que ce probl\u00e8me n'est pas d\u00e9cidable: il n'existe pas d'algorihtme capable de pr\u00e9dire si n'importe quel programme va s'arr\u00eater ou non. Probl\u00e8me de l'arr\u00eat # Il nous est arriv\u00e9 \u00e0 tous d\u2019\u00e9crire une boucle infinie. C\u2019est le drame car notre programme ne s\u2019arr\u00eate jamais. A l\u2019\u00e9chelle de l\u2019industrie ce probl\u00e8me devient un probl\u00e8me essentiel. Pensez aux probl\u00e8mes de s\u00e9curit\u00e9 (centrale nucl\u00e9aire, aviation, transports, etc). Le probl\u00e8me de l\u2019arr\u00eat est un probl\u00e8me classique en d\u00e9cidabilit\u00e9. Il fait partie des probl\u00e8mes qui n\u2019ont pas de solution. Autrement dit, il est impossible d\u2019\u00e9crire un algorithme qui r\u00e9sout ce probl\u00e8me. La plupart des autres probl\u00e8mes ind\u00e9cidables reviennent \u00e0 ce probl\u00e8me. Pour d\u00e9montrer que le probl\u00e8me de l'arr\u00eat est ind\u00e9cidable , nous allons utiliser le raisonnement par l'absurde. Le raisonnement par l'absurde, suppose vrai ce que l'on veut \u00e9tablir comme faux. Par un raisonnement logique on doit aboutir \u00e0 une contradiction qui \u00e9tablit que ce que l'on a suppos\u00e9 comme vrai...est forc\u00e9ment faux. Amusons nous avec un peu de logique. Si je vous dis \"je mens\"...vous avez un soucis! Si je suis effectivement un menteur, alors l'affirmation \"je mens\" est fausse...donc je ne mens pas ? Si je ne suis pas un menteur, alors je mens en disant que je suis un menteur, je suis donc un menteur ? Dans les deux cas...l'affirmation est absurde, affirmer \"je suis un menteur\", n'est pas une assertion logique. Passons maintenant \u00e0 la preuve du probl\u00e8me de l'arr\u00eat. Supposons que l'on peut \u00e9crire un programme arret(code du programme, param\u00e8tre), capable de dire si le programme 'code du programme' va s'arr\u00eater dans tous les cas ou non si il existe des cas o\u00f9 il ne s'arr\u00eate pas. Ecrivons un programme: absurde(code du programme) absurde(code d'un programme): si arret(code du programme,code du programme): faire une boucle infinie ici sinon arreter le programme Utilisons ce programme absurde en envoyant comme 'code d'un programme', le programme absurde lui m\u00eame, on lance donc absurde(absurde). si Arret(absurde,absurde) s'arrete, cela indique que absurde(absurde) s'arr\u00eate et donc le programme absurde(absurde) entre dans une boucle infinie. Il y a contradiction si Arret(absurde,absurde) ne s'arrete pas, cela indique que absurde(absurde) ne s'arr\u00eate et donc le programme absurde(absurde) s'arr\u00eate. Il y a contradiction. Dans tous les cas, on aboutit \u00e0 une contradiction, cela implique que le programme absurde ne peut pas exister et que par cons\u00e9quent, une telle fonction arret ne peut exister. Conclusion : Il ne peut pas exister de programme universel qui prendrait en entr\u00e9es : un programme P une entr\u00e9e E de ce programme P et qui d\u00e9terminerait si ce programme P, lanc\u00e9 avec l'entr\u00e9e E, va s'arr\u00eater ou non.","title":"Calculabilit\u00e9, d\u00e9cidabilit\u00e9"},{"location":"Terminale/Programmation/decidabilite_calculabilite/#decidabilite-et-calculabilite","text":"","title":"D\u00e9cidabilit\u00e9 et calculabilit\u00e9"},{"location":"Terminale/Programmation/decidabilite_calculabilite/#quelques-reperes-historiques","text":"Wilhelm Schickard (1592 \u2013 1635) , professeur \u00e0 l\u2019Universit\u00e9 de T\u00fcbingen (Allemagne), aurait dessin\u00e9 les plans de la premi\u00e8re machine \u00e0 calculer (m\u00e9canique). Cette machine n\u2019a pas \u00e9t\u00e9 construite. Blaise Pascal (1623 \u2013 1662) , math\u00e9maticien et philosophe, construit \u00e0 l\u2019\u00e2ge de 19 ans la Pascaline, premi\u00e8re machine \u00e0 calculer op\u00e9rationnelle du XVII\u00e8 si\u00e8cle . Gottfried Wilhelm Leibniz (1646 \u2013 1716), math\u00e9maticien et philosophe, d\u00e9veloppe aussi une machine \u00e0 calculer. Il pr\u00e9conise des id\u00e9es tr\u00e8s modernes : la machine de calcul universelle, le sch\u00e9ma \u201centr\u00e9e*calculsortie\u201d, la base 2 pour la repr\u00e9sentation des nombres. Le m\u00e9tier \u00e0 tisser de Joseph Marie Jacquard (1752 \u2013 1834) est bas\u00e9 sur l\u2019utilisation de cartes perfor\u00e9es, et est \u00e0 l\u2019origine des premiers programmes de calcul. Charles Babbage (1791 \u2013 1871), professeur \u00e0 Cambridge, construit la machine diff\u00e9rentielle et imagine les plans de la machine analytique (machine programmable). La derni\u00e8re peut \u00eatre consid\u00e9r\u00e9e comme pr\u00e9curseur des ordinateurs modernes, consistant d\u2019une unit\u00e9 de contr\u00f4le, une unit\u00e9 de calcul, une m\u00e9moire, ainsi que l\u2019entr\u00e9e*sortie. Ada Lovelace (1815 * 1852) , est une pionni\u00e8re de la science informatique. Elle est principalement connue pour avoir r\u00e9alis\u00e9 le premier v\u00e9ritable programme informatique, lors de son travail sur un anc\u00eatre de l\u2019ordinateur : la machine analytique de Charles Babbage. Dans ses notes, on trouve en effet le premier programme publi\u00e9, destin\u00e9 \u00e0 \u00eatre ex\u00e9cut\u00e9 par une machine, ce qui fait consid\u00e9rer Ada Lovelace comme le premier programmeur du monde. Elle a \u00e9galement entrevu et d\u00e9crit certaines possibilit\u00e9s offertes par les calculateurs universels, allant bien au*del\u00e0 du calcul num\u00e9rique et de ce qu\u2019imaginaient Babbage et ses contemporains. Elle est assez connue dans les pays anglo-saxons et en Allemagne, notamment dans les milieux f\u00e9ministes ; elle est moins connue en France, mais de nombreux d\u00e9veloppeurs connaissent le langage Ada, nomm\u00e9 en son honneur. David Hilbert (1862 \u2013 1943) , math\u00e9maticien allemand. En 1900, Hilbert propose 23 probl\u00e8mes dont certains ne sont pas r\u00e9solus \u00e0 ce jour. Pour voir la liste des probl\u00e8mes. Il pr\u00e9sente en 1920 un programme de recherche visant \u00e0 clarifier les fondements des math\u00e9matiques : \u201ctout \u00e9nonc\u00e9 math\u00e9matique peut \u00eatre soit prouv\u00e9 ou r\u00e9fut\u00e9\u201d. Plus tard il \u00e9nonce le \u201cEntscheidungsproblem\u201d : montrer de fa\u00e7on \u201cm\u00e9canique\u201d si un \u00e9nonc\u00e9 math\u00e9matique est vrai ou faux. Il faudra attendre 1936 pour qu\u2019Alan Turing s\u2019int\u00e9resse au probl\u00e8me n\u00b010 avec Church (dont il \u00e9tait le doctorant). Ils d\u00e9finissent rigoureusement la notion d\u2019algorithme. Kurt G\u00f6del (1906 \u2013 1978) , un des logiciens les plus fameux de l\u2019histoire, r\u00e9pond en 1931 n\u00e9gativement quant au programme propos\u00e9 par Hilbert, en montrant que tout syst\u00e8me formel suffisamment puissant est soit incomplet ou incoh\u00e9rent. Il montre ceci en construisant une formule qui exprime le fait qu\u2019elle n\u2019est pas d\u00e9montrable. Alan Turing (1912 \u2013 1954) et Alonzo Church (1903 \u2013 1995) montrent ind\u00e9pendamment, en 1936, l\u2019ind\u00e9cidabilit\u00e9 de l\u2019Entscheidungsproblem. Turing propose \"la machine de Turing\" comme mod\u00e8le math\u00e9matique de calcul, et Church le lambda calcul. Ils \u00e9noncent le principe selon lequel tout ce qui est calculable peut \u00eatre calcul\u00e9 sur un de ces deux mod\u00e8les (\u201cth\u00e8se de Church*Turing\u201d). La Machine de Turing est invent\u00e9e pour r\u00e9pondre au probl\u00e8me math\u00e9matiques de la d\u00e9cidabilit\u00e9 propos\u00e9 par Hilbert. Une machine de Turing a pour but de d\u00e9crire les algorithmes. Il faut savoir que Turing ne verra pas de son vivant une r\u00e9alisation concr\u00e8te de sa \"machine\". Pour plus d\u2019information sur la vie d\u2019Alan Turing, voir cette vid\u00e9o.","title":"Quelques rep\u00e8res historiques"},{"location":"Terminale/Programmation/decidabilite_calculabilite/#machine-de-turing","text":"","title":"Machine de Turing"},{"location":"Terminale/Programmation/decidabilite_calculabilite/#definition","text":"Il s\u2019agit d\u2019une machine imaginaire invent\u00e9e par Alan Turing en 1936 pour expliquer la notion de \"proc\u00e9dure m\u00e9canique\" : l\u2019\u00e9quivalent d\u2019un algorithme. Cette machine est la plus \u00e9l\u00e9mentaire possible destin\u00e9e \u00e0 mettre en \u0153uvre ces m\u00e9canismes de calcul, num\u00e9riques ou symboliques, comme le font notamment les ordinateurs. Une machine de Turing est un appareil disposant : d\u2019un ruban infiniment long divis\u00e9 en cases, dans lesquels la machine peut \u00e9crire des symboles ; une t\u00eate qui peut lire et \u00e9crire sur ce ruban ; une table de transition. Chacune des lignes de cette table est associ\u00e9e \u00e0 un \u00e9tat et sp\u00e9cifie les actions \u00e0 effectuer quand la machine est dans cet \u00e9tat, en fonction du symbole pr\u00e9sent sous la t\u00eate de lecture. Ces actions peuvent \u00eatre l\u2019\u00e9criture d\u2019un symbole (ici un 0 ou un 1) et le d\u00e9placement du ruban d\u2019une case \u00e0 droite ou \u00e0 gauche. La table sp\u00e9cifie \u00e9galement le nouvel \u00e9tat apr\u00e8s ex\u00e9cution de ces actions. La machine s\u2019arr\u00eate quand un \u00e9tat marqu\u00e9 comme final est atteint. Cette machine fonctionne comme une machine \u00e0 calculer en binaire. Turing envisage le cas particulier o\u00f9 les symboles utilis\u00e9s sont 0 et 1. L\u2019entr\u00e9e du programme est un liste de symboles binaires. Une fois effectu\u00e9, c\u2019est sur ce m\u00eame ruban que sera \u00e9crit la sortie du programme. Remarque : En 2012, pour c\u00e9l\u00e9brer le centenaire de la naissance d\u2019Alan Turing, huit \u00e9tudiant en master de l\u2019\u00c9cole Normale Sup\u00e9rieure (ENS) de Lyon ont fabriqu\u00e9 en LEGO la premi\u00e8re machine r\u00e9elle (purement m\u00e9canique) du mod\u00e8le de Turing. En voici le lien : http://rubens.ens-lyon.fr/fr/","title":"D\u00e9finition"},{"location":"Terminale/Programmation/decidabilite_calculabilite/#exemple","text":"La machine peut \u00eatre dans deux \u00e9tats e1 et e2. Si la machine est dans l\u2019\u00e9tat e1 et contient un blanc, elle \u00e9crit un blanc. Le rubanc se d\u00e9place vers la gauche et la machine est dans l\u2019\u00e9tat e2. Si la machine est dans l\u2019\u00e9tat e2 et qu\u2019elle lit un 0, elle \u00e9crit un 1 et si elle lit un 1 elle \u00e9crit un 0. Dans les deux cas, le ruban se d\u00e9place vers la gauche et la machine reste dans l\u2019\u00e9tat e2. Enfin, si elle lit un blanc, elle \u00e9crit un blanc et la machine s\u2019arr\u00eate. Ce qui nous donne la table de transition suivante : Table de transition Les \u00e9tapes successives sont repr\u00e9sent\u00e9es ci-dessous. Initialement la machine se trouve dans l\u2019\u00e9tat e1. La machine lit un blanc, passe dans l\u2019\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un 1, donc \u00e9crit un 0, reste dans l\u2019\u00e9tat e2 et ruban se d\u00e9place vers la gauche La machine lit un 0, donc \u00e9crit un 1, reste dans l\u2019\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un 1 donc \u00e9crit un 0, reste toujours dans l\u2019\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un blanc, \u00e9crit un blanc, le ruban se d\u00e9place encore vers la gauche et la machine s\u2019arr\u00eate. Remarque 2 : Un \u00e9mulateur de cette machine de Turing sur ce site .","title":"Exemple"},{"location":"Terminale/Programmation/decidabilite_calculabilite/#diagramme","text":"On peut construire un diagramme de la machine (on parle aussi d\u2019automate). Pour d\u00e9finir un diagramme, il faut : un alphabet utilis\u00e9 par la machine (liste des caract\u00e8res utilis\u00e9s). Exemple \u20190\u2019,\u20191\u2019,\u2019b\u2019. des \u00e9tats sont symbolis\u00e9s par des cercles et \u00e9crits sous la forme e1, e2, etc (ou encore q1, q2, etc). un \u00e9tat final repr\u00e9sent\u00e9 par ef (ou qf) mais parfois indiqu\u00e9 par une chaine de caract\u00e8res ou un caract\u00e8re particulier (\"final\"). repr\u00e9senter les d\u00e9placements par les lettres L et R (left et right). utiliser des triplets (lecture ; \u00e9criture ; d\u00e9placement) et des fl\u00e8ches qui indiquent l\u2019\u00e9tat suivant. Exemple 1 : Liste des caract\u00e8res possiblement pr\u00e9sents sur le ruban { 0 ; 1 ; b } A l\u2019\u00e9tat e1, si la t\u00eate lit un 0 alors elle \u00e9crit 1, se d\u00e9place \u00e0 droite et reste \u00e0 l\u2019\u00e9tat e1. A l\u2019\u00e9tat e1, si la t\u00eate lit un 1 alors elle \u00e9crit 0, se d\u00e9place \u00e0 droite et reste \u00e0 l\u2019\u00e9tat e1. A l\u2019\u00e9tat e1, si la t\u00eate lit un blanc alors elle n\u2019\u00e9crit rien et passe \u00e0 l\u2019\u00e9tat ef (elle s\u2019arr\u00eate). Ce qui nous donne la table de transition suivante : Et donc le diagramme suivant : Exemple 2 : Liste des caract\u00e8res possiblement pr\u00e9sents sur le ruban { 0 , 0 , b } si la t\u00eate lit un blanc alors elle n\u2019\u00e9crit rien et se d\u00e9place \u00e0 droite en restant \u00e0 l\u2019\u00e9tat e0. A l\u2019\u00e9tat e0, si la t\u00eate lit un 0 alors elle n\u2019\u00e9crit rien, ne se d\u00e9place pas et passe \u00e0 l\u2019\u00e9tat e1. A l\u2019\u00e9tat e0, si la t\u00eate lit un 1 alors elle n\u2019\u00e9crit rien, ne se d\u00e9place pas et passe \u00e0 l\u2019\u00e9tat e1. A l\u2019\u00e9tat e1, si la t\u00eate lit un 0 alors elle \u00e9crit 1, se d\u00e9place \u00e0 droite et reste \u00e0 l\u2019\u00e9tat e1. A l\u2019\u00e9tat e1, si la t\u00eate lit un 1 alors elle \u00e9crit 0, se d\u00e9place \u00e0 droite et reste \u00e0 l\u2019\u00e9tat e1. Ce qui nous donne la table de transition suivante : Et donc le diagramme suivant :","title":"Diagramme"},{"location":"Terminale/Programmation/decidabilite_calculabilite/#decidabilite-et-calculabilite_1","text":"","title":"D\u00e9cidabilit\u00e9 et calculabilit\u00e9"},{"location":"Terminale/Programmation/decidabilite_calculabilite/#calculabilite","text":"Une fonction calculable est une fonction que l\u2019on peut \u00e9crire sous forme d\u2019algorithme. Les machines de Turing sont une r\u00e9ponse \u00e0 la recherche de d\u00e9finition d\u2019une fonction calculable. C\u2019est la th\u00e8se de Church : \"Toute fonction physiquement calculable est calculable par une machine de Turing\". Fonctions non-calculables : contrairement \u00e0 ce que l\u2019on pourrait imaginer, il existe des fonctions qui ne sont pas calculables. Il y en a m\u00eame une infinit\u00e9. Remarque : La calculabilit\u00e9 ne d\u00e9pend pas du langage utilis\u00e9. Si une fonction est calculable, il existe un algorithme dans le langage que vous utilisez qui permet de la calculer.","title":"Calculabilit\u00e9"},{"location":"Terminale/Programmation/decidabilite_calculabilite/#decidabilite","text":"Une propri\u00e9t\u00e9 est d\u00e9cidable si l'on peut d\u00e9terminer en un nombre fini d'\u00e9tapes si elle est vraie ou fausse quel que soit le contexte de d\u00e9part. (On parle de probl\u00e8me de d\u00e9cision, \u00e0 r\u00e9ponse oui ou non) Attention, cela ne veut pas dire que la propri\u00e9t\u00e9 doit \u00eatre toujours fausse ou vraie. Donnons, pour illustrer la d\u00e9finition, quelques exemples. Savoir si un nombre est premier est d\u00e9cidable. La r\u00e9ponse sera soit 'vrai', soit 'faux' et un algorithme simple est de diviser ce nombre par les entiers inf\u00e9rieurs \u00e0 lui m\u00eame. Il y a donc un nombre fini d'\u00e9tapes et une r\u00e9ponse qui est soit vrai soit faux. Dire si un nombre est pair (on regarde le reste de la division Euclidienne par 2) Les exemples ne manquent pas. On peut alors se poser la question: \"tout est-il d\u00e9cidable?\". La r\u00e9ponse est non. Si c'\u00e9tait le cas, cela voudrait dire que l'on pourrait prouver qu'une propri\u00e9t\u00e9 math\u00e9matique est vraie ou fausse avec un algorithme ! Donnons des exemples de probl\u00e8mes non d\u00e9cidables. Je parcours un r\u00e9seau al\u00e9atoirement, est-ce que je vais atteindre une cible donn\u00e9es en un nombre fini d'\u00e9tapes? Pas forc\u00e9ment, m\u00eame si la probabilit\u00e9 d'arriver \u00e0 destination tend vers 1 quand le nombre d'\u00e9tapes tend vers l'infini! Un autre exemple plus connu: le probl\u00e8me de l'arr\u00eat d'un programme est-il d\u00e9cidable? Est-ce que je peux \u00e9crire un programme qui me dira si un programme va s'arr\u00eater ou non (selon les valeurs d'entr\u00e9es)? Nous verrons que l'on peut prouver que ce probl\u00e8me n'est pas d\u00e9cidable: il n'existe pas d'algorihtme capable de pr\u00e9dire si n'importe quel programme va s'arr\u00eater ou non.","title":"D\u00e9cidabilit\u00e9"},{"location":"Terminale/Programmation/decidabilite_calculabilite/#probleme-de-larret","text":"Il nous est arriv\u00e9 \u00e0 tous d\u2019\u00e9crire une boucle infinie. C\u2019est le drame car notre programme ne s\u2019arr\u00eate jamais. A l\u2019\u00e9chelle de l\u2019industrie ce probl\u00e8me devient un probl\u00e8me essentiel. Pensez aux probl\u00e8mes de s\u00e9curit\u00e9 (centrale nucl\u00e9aire, aviation, transports, etc). Le probl\u00e8me de l\u2019arr\u00eat est un probl\u00e8me classique en d\u00e9cidabilit\u00e9. Il fait partie des probl\u00e8mes qui n\u2019ont pas de solution. Autrement dit, il est impossible d\u2019\u00e9crire un algorithme qui r\u00e9sout ce probl\u00e8me. La plupart des autres probl\u00e8mes ind\u00e9cidables reviennent \u00e0 ce probl\u00e8me. Pour d\u00e9montrer que le probl\u00e8me de l'arr\u00eat est ind\u00e9cidable , nous allons utiliser le raisonnement par l'absurde. Le raisonnement par l'absurde, suppose vrai ce que l'on veut \u00e9tablir comme faux. Par un raisonnement logique on doit aboutir \u00e0 une contradiction qui \u00e9tablit que ce que l'on a suppos\u00e9 comme vrai...est forc\u00e9ment faux. Amusons nous avec un peu de logique. Si je vous dis \"je mens\"...vous avez un soucis! Si je suis effectivement un menteur, alors l'affirmation \"je mens\" est fausse...donc je ne mens pas ? Si je ne suis pas un menteur, alors je mens en disant que je suis un menteur, je suis donc un menteur ? Dans les deux cas...l'affirmation est absurde, affirmer \"je suis un menteur\", n'est pas une assertion logique. Passons maintenant \u00e0 la preuve du probl\u00e8me de l'arr\u00eat. Supposons que l'on peut \u00e9crire un programme arret(code du programme, param\u00e8tre), capable de dire si le programme 'code du programme' va s'arr\u00eater dans tous les cas ou non si il existe des cas o\u00f9 il ne s'arr\u00eate pas. Ecrivons un programme: absurde(code du programme) absurde(code d'un programme): si arret(code du programme,code du programme): faire une boucle infinie ici sinon arreter le programme Utilisons ce programme absurde en envoyant comme 'code d'un programme', le programme absurde lui m\u00eame, on lance donc absurde(absurde). si Arret(absurde,absurde) s'arrete, cela indique que absurde(absurde) s'arr\u00eate et donc le programme absurde(absurde) entre dans une boucle infinie. Il y a contradiction si Arret(absurde,absurde) ne s'arrete pas, cela indique que absurde(absurde) ne s'arr\u00eate et donc le programme absurde(absurde) s'arr\u00eate. Il y a contradiction. Dans tous les cas, on aboutit \u00e0 une contradiction, cela implique que le programme absurde ne peut pas exister et que par cons\u00e9quent, une telle fonction arret ne peut exister. Conclusion : Il ne peut pas exister de programme universel qui prendrait en entr\u00e9es : un programme P une entr\u00e9e E de ce programme P et qui d\u00e9terminerait si ce programme P, lanc\u00e9 avec l'entr\u00e9e E, va s'arr\u00eater ou non.","title":"Probl\u00e8me de l'arr\u00eat"},{"location":"Terminale/Programmation/objet/","text":"Programmation orient\u00e9e objet (P.O.O.) # Une premi\u00e8re classe # Pour cr\u00e9er un objet, on utilise le mot cl\u00e9 class . La cr\u00e9ation de l\u2019objet ressemble \u00e0 la cr\u00e9ation d\u2019une fonction. A l\u2019int\u00e9rieur de la classe, on d\u00e9finit les caract\u00e9ristiques de l\u2019objet , le constructeur et les actions : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Dinosaure : # D\u00e9finition de notre classe Personne \"\"\" Classe d\u00e9finissant un dinosaure. Celui-ci \u00e9tant caract\u00e9ris\u00e9 par : - sa longueur - sa hauteur - son poids - sa vitesse maximale \"\"\" def __init__ ( self , l , h , m , v_max ): self . longueur = l # attribut 1 (m) self . hauteur = h #Attribut 2 (m) self . masse = m #Attribut 3 (kg) self . vitesseMaximale = v_max #Attribut 4 (km/h) Important : Un constructeur est une m\u00e9thode particuli\u00e8re qui commence toujours par : def __init__(self,...) : On va d\u00e9finir les attributs des dinosaures qui seront : la longueur, la hauteur, la masse et la vitesse maximale. La variable self , dans les m\u00e9thodes d\u2019un objet, d\u00e9signe l\u2019objet auquel s\u2019appliquera la m\u00e9thode. Elle repr\u00e9sente l\u2019objet dans la m\u00e9thode en attendant qu\u2019il soit cr\u00e9\u00e9. Ne pas oublier les docstrings permettant de conna\u00eetre l\u2019utilit\u00e9, les caract\u00e9ristiques de la classe et du constructeur. Les instances # Pour l\u2019instant, nous avons cr\u00e9er le \"moule\". Nous voulons cr\u00e9er un dinosaure (ou encore une instance) triceratops. Nous avons les caract\u00e9ristiques de ce dinosaure : 9 m de longueur, 3 m de hauteur, une masse de 9 tonnes environ, et une vitesse maximale donn\u00e9e \u00e0 32 km/h. Pour cela, il nous faut taper la ligne suivante : 1 triceratops = Dinosaure ( 9 , 3 , 9000 , 32 ) Plus loin dans le programme, nous pourrons utiliser la masse du tripc\u00e9ratops en faisant appel \u00e0 l\u2019attribut de triceratops : triceratops.masse . Par exemple : 1 print ( \"La masse du tric\u00e9ratops est de {} kg\" . format ( triceratops . masse )) Exercice Ajouter une instance \u00e0 la classe Dinosaure en cr\u00e9ant Tyrannosaurus Rex. Celui-ci mesurait 13 m de longueur, pesait 8 t environ, 6 m de haut et devait courir \u00e0 27 km/h. Afficher ensuite sa masse. Les attributs par d\u00e9fauts # Pour beaucoup d\u2019entre nous, lorsqu\u2019on pense aux dinosaures, on pense d\u2019abord aux dinosaures terrestres. C\u2019est pourquoi, nous allons d\u00e9finir un nouvel attribut qui est le milieu et lui mettre comme valeur par d\u00e9faut terrestre. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Dinosaure : # D\u00e9finition de notre classe Personne \"\"\" Classe d\u00e9finissant un dinosaure caract\u00e9ris\u00e9 par : - sa longueur - sa hauteur - son poids - sa vitesse maximale -le milieu \"\"\" def __init__ ( self , l , h , m , v_max_ , mil = \"terrestre\" ): self . longueur = l # attribut 1 (m) self . hauteur = h #Attribut 2 (m) self . masse = m #Attribut 3 (kg) self . vitesseMaximale = v_max #Attribut 4 (km/h) self . milieu = mil Donc, quand nous allons cr\u00e9er notre tric\u00e9ratops en tapant : 1 triceratops = Dinosaure ( 9 , 3 , 9000 , 32 ) Et qu\u2019on demande : 1 print ( triceratops . milieu ) On obtient dans la console : 1 terrestre On a bien le param\u00e8tre milieu d\u00e9fini par d\u00e9faut. Encapsulation : Les accesseurs ou \"getters\" # On ne va g\u00e9n\u00e9ralement pas utiliser la mani\u00e8re de proc\u00e9der pr\u00e9c\u00e9dente nom_objet.nom_attribut permettant d\u2019acc\u00e9der aux valeurs des attributs car on ne veut pas forcement que l\u2019utilisateur ait acc\u00e8s \u00e0 la repr\u00e9sentation interne des classes. Pour utiliser ou modifier les attributs, on utilisera de pr\u00e9f\u00e9rence des m\u00e9thodes d\u00e9di\u00e9es dont le r\u00f4le est de faire l\u2019interface entre l\u2019utilisateur de l\u2019objet et la repr\u00e9sentation interne de l\u2019objet (ses attributs). Les attributs sont alors en quelque sorte encapsul\u00e9s dans l\u2019objet, c\u2019est \u00e0 dire non accessibles directement par le programmeur qui a instanci\u00e9 un objet de cette classe. Pour obtenir la valeur d\u2019un attribut nous utiliserons la m\u00e9thode des accesseurs (ou \"getters\") dont le nom est g\u00e9n\u00e9ralement : get_Nom_attribut() . Par exemple ici : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Dinosaure : \"\"\" Classe d\u00e9finissant un dinosaure \"\"\" def __init__ ( self , l , h , m , v_max_ , mil = \"terrestre\" ): self . longueur = l # attribut 1 (m) self . hauteur = h #Attribut 2 (m) self . masse = m #Attribut 3 (kg) self . vitesseMaximale = v_max #Attribut 4 (km/h) self . milieu = mil def get_masse ( self ): return self . masse triceratops = Dinosaure ( 9 , 3 , 9000 , 32 ) print ( triceratops . get_masse_ ()) Modifications contr\u00f4l\u00e9es des valeurs des attributs : les mutateurs ou \"setters\" # En cas de besoin, on peut modifier les valeurs attribu\u00e9es aux attributs. Pour cela, on passe par des","title":"POO"},{"location":"Terminale/Programmation/objet/#programmation-orientee-objet-poo","text":"","title":"Programmation orient\u00e9e objet (P.O.O.)"},{"location":"Terminale/Programmation/objet/#une-premiere-classe","text":"Pour cr\u00e9er un objet, on utilise le mot cl\u00e9 class . La cr\u00e9ation de l\u2019objet ressemble \u00e0 la cr\u00e9ation d\u2019une fonction. A l\u2019int\u00e9rieur de la classe, on d\u00e9finit les caract\u00e9ristiques de l\u2019objet , le constructeur et les actions : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Dinosaure : # D\u00e9finition de notre classe Personne \"\"\" Classe d\u00e9finissant un dinosaure. Celui-ci \u00e9tant caract\u00e9ris\u00e9 par : - sa longueur - sa hauteur - son poids - sa vitesse maximale \"\"\" def __init__ ( self , l , h , m , v_max ): self . longueur = l # attribut 1 (m) self . hauteur = h #Attribut 2 (m) self . masse = m #Attribut 3 (kg) self . vitesseMaximale = v_max #Attribut 4 (km/h) Important : Un constructeur est une m\u00e9thode particuli\u00e8re qui commence toujours par : def __init__(self,...) : On va d\u00e9finir les attributs des dinosaures qui seront : la longueur, la hauteur, la masse et la vitesse maximale. La variable self , dans les m\u00e9thodes d\u2019un objet, d\u00e9signe l\u2019objet auquel s\u2019appliquera la m\u00e9thode. Elle repr\u00e9sente l\u2019objet dans la m\u00e9thode en attendant qu\u2019il soit cr\u00e9\u00e9. Ne pas oublier les docstrings permettant de conna\u00eetre l\u2019utilit\u00e9, les caract\u00e9ristiques de la classe et du constructeur.","title":"Une premi\u00e8re classe"},{"location":"Terminale/Programmation/objet/#les-instances","text":"Pour l\u2019instant, nous avons cr\u00e9er le \"moule\". Nous voulons cr\u00e9er un dinosaure (ou encore une instance) triceratops. Nous avons les caract\u00e9ristiques de ce dinosaure : 9 m de longueur, 3 m de hauteur, une masse de 9 tonnes environ, et une vitesse maximale donn\u00e9e \u00e0 32 km/h. Pour cela, il nous faut taper la ligne suivante : 1 triceratops = Dinosaure ( 9 , 3 , 9000 , 32 ) Plus loin dans le programme, nous pourrons utiliser la masse du tripc\u00e9ratops en faisant appel \u00e0 l\u2019attribut de triceratops : triceratops.masse . Par exemple : 1 print ( \"La masse du tric\u00e9ratops est de {} kg\" . format ( triceratops . masse )) Exercice Ajouter une instance \u00e0 la classe Dinosaure en cr\u00e9ant Tyrannosaurus Rex. Celui-ci mesurait 13 m de longueur, pesait 8 t environ, 6 m de haut et devait courir \u00e0 27 km/h. Afficher ensuite sa masse.","title":"Les instances"},{"location":"Terminale/Programmation/objet/#les-attributs-par-defauts","text":"Pour beaucoup d\u2019entre nous, lorsqu\u2019on pense aux dinosaures, on pense d\u2019abord aux dinosaures terrestres. C\u2019est pourquoi, nous allons d\u00e9finir un nouvel attribut qui est le milieu et lui mettre comme valeur par d\u00e9faut terrestre. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Dinosaure : # D\u00e9finition de notre classe Personne \"\"\" Classe d\u00e9finissant un dinosaure caract\u00e9ris\u00e9 par : - sa longueur - sa hauteur - son poids - sa vitesse maximale -le milieu \"\"\" def __init__ ( self , l , h , m , v_max_ , mil = \"terrestre\" ): self . longueur = l # attribut 1 (m) self . hauteur = h #Attribut 2 (m) self . masse = m #Attribut 3 (kg) self . vitesseMaximale = v_max #Attribut 4 (km/h) self . milieu = mil Donc, quand nous allons cr\u00e9er notre tric\u00e9ratops en tapant : 1 triceratops = Dinosaure ( 9 , 3 , 9000 , 32 ) Et qu\u2019on demande : 1 print ( triceratops . milieu ) On obtient dans la console : 1 terrestre On a bien le param\u00e8tre milieu d\u00e9fini par d\u00e9faut.","title":"Les attributs par d\u00e9fauts"},{"location":"Terminale/Programmation/objet/#encapsulation-les-accesseurs-ou-getters","text":"On ne va g\u00e9n\u00e9ralement pas utiliser la mani\u00e8re de proc\u00e9der pr\u00e9c\u00e9dente nom_objet.nom_attribut permettant d\u2019acc\u00e9der aux valeurs des attributs car on ne veut pas forcement que l\u2019utilisateur ait acc\u00e8s \u00e0 la repr\u00e9sentation interne des classes. Pour utiliser ou modifier les attributs, on utilisera de pr\u00e9f\u00e9rence des m\u00e9thodes d\u00e9di\u00e9es dont le r\u00f4le est de faire l\u2019interface entre l\u2019utilisateur de l\u2019objet et la repr\u00e9sentation interne de l\u2019objet (ses attributs). Les attributs sont alors en quelque sorte encapsul\u00e9s dans l\u2019objet, c\u2019est \u00e0 dire non accessibles directement par le programmeur qui a instanci\u00e9 un objet de cette classe. Pour obtenir la valeur d\u2019un attribut nous utiliserons la m\u00e9thode des accesseurs (ou \"getters\") dont le nom est g\u00e9n\u00e9ralement : get_Nom_attribut() . Par exemple ici : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Dinosaure : \"\"\" Classe d\u00e9finissant un dinosaure \"\"\" def __init__ ( self , l , h , m , v_max_ , mil = \"terrestre\" ): self . longueur = l # attribut 1 (m) self . hauteur = h #Attribut 2 (m) self . masse = m #Attribut 3 (kg) self . vitesseMaximale = v_max #Attribut 4 (km/h) self . milieu = mil def get_masse ( self ): return self . masse triceratops = Dinosaure ( 9 , 3 , 9000 , 32 ) print ( triceratops . get_masse_ ())","title":"Encapsulation : Les accesseurs ou \"getters\""},{"location":"Terminale/Programmation/objet/#modifications-controlees-des-valeurs-des-attributs-les-mutateurs-ou-setters","text":"En cas de besoin, on peut modifier les valeurs attribu\u00e9es aux attributs. Pour cela, on passe par des","title":"Modifications contr\u00f4l\u00e9es des valeurs des attributs : les mutateurs ou \"setters\""},{"location":"Terminale/Programmation/prog_dyn/","text":"Programmation dynamique # Contexte # Exercice 1 : \u00c9crire une fonction r\u00e9cursive qui calcule la factorielle n. Rappel : \\(n!=1\\times 2\\times 3\\times ...\\times n\\) \u00c9crire une fonction r\u00e9cursive qui permet de calculer le \\(n^{i\u00e8me}\\) terme de la suite de Fibonacci sachant qu'elle se d\u00e9finit ainsi : \\[ \\begin{cases} F_0 = 0 & \\\\ F_1 = 1 & \\\\ F_n = F_{n\u22121} + F_{n\u22122} & \\forall n \\ge 2. \\end{cases} \\] Donc pour n = 6, cette deuxi\u00e8me fonction peut se repr\u00e9senter par le sch\u00e9ma ci-dessous : arbre Vous pouvez constater que l'on a une structure arborescente (typique dans les algorithmes r\u00e9cursifs), si on additionne toutes les feuilles de cette structure arborescente (fib(1) = 1 et fib(0) = 0), on retrouve bien 8. En observant attentivement le sch\u00e9ma ci-dessus, vous avez remarqu\u00e9 que de nombreux calculs sont inutiles, car effectu\u00e9 2 fois : par exemple on retrouve le calcul de fib(4) \u00e0 2 endroits (en haut \u00e0 droite et un peu plus bas \u00e0 gauche) : arbre Programmation Dynamique # Premiers exemples sur la suite de Fibonacci # En consid\u00e9rant l'algorithme pr\u00e9c\u00e9dant, on comprend bien qu'il est particuli\u00e8rement inefficace de calculer plusieurs fois le m\u00eame sous-calcul. Afin d'am\u00e9liorer le temps de calcul de l'algorithme, nous d\u00e9cidons donc de m\u00e9moriser les calculs d\u00e9j\u00e0 effectu\u00e9s dans un tableau. Il existe deux m\u00e9thodes diff\u00e9rentes : Bottom-Up Top Down On pourrait donc grandement simplifier le calcul en calculant une fois pour toutes fib(4), en \"m\u00e9morisant\" le r\u00e9sultat et en le r\u00e9utilisant quand n\u00e9cessaire. On va calculer les nombres de la suite de Fibonacci jusqu'\u00e0 \\(F(n)\\) en partant de \\(F(0)\\) et \\(F(1)\\) . On appelle ce type de m\u00e9thode une m\u00e9thode Bottom-Up. Ce n'est pas une m\u00e9thode r\u00e9cursive. 1 2 3 4 5 6 def fibo_asc ( n : int ) -> int : F = [ 0 ] * ( n + 1 ) F [ 1 ] = 1 for i in range ( 2 , n + 1 ) : F [ i ] = F [ i - 1 ] + F [ i - 2 ] return F [ n ] On effectue une succession d'appels r\u00e9cursifs jusqu'\u00e0 arriver aux cas de base mais sauvegardant les r\u00e9sultats interm\u00e9diaires et en faisant appel s'ils ont d\u00e9j\u00e0 \u00e9t\u00e9 calcul\u00e9s. Cette approche n\u00e9cessite un tableau ext\u00e9rieur \u00e0 la fonction que cette derni\u00e8re vient alimenter et dans lequel elle va rechercher si les calculs ont d\u00e9j\u00e0 \u00e9t\u00e9 effectu\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 # Tableau stockant les valeurs calcul\u00e9es au fur et \u00e0 mesure f = [ 0 , 1 ] def fibonacci ( n : int , f : list ) -> int : \"\"\" Si la valeur est d\u00e9j\u00e0 calcul\u00e9e, on la r\u00e9cup\u00e8re dans le tableau, sinon on la calcule r\u00e9cursivement puis l'ajoute au tableau.\"\"\" if n < len ( f ) : return f [ n ] else : f . append ( fibonacci ( n - 1 , f ) + fibonacci ( n - 2 , f )) return f [ n ] Exercice 2 : Evaluer le temps mis par les diff\u00e9rents algorithmes pour n = 35. Comparer les. On rappelle que le temps mis par un algorithme peut \u00eatre calcul\u00e9 avec la fonctions time() de la biblioth\u00e8que time.h . Attention, si le temps mis par l'algorithme est trop petit, il peut \u00eatre int\u00e9ressant de l'\u00e9xecuter un certain nombre de fois. Exemple : 1 2 3 4 5 import time t1 = time . time () # instructions dont le temps est \u00e0 mesurer t2 = time . time () Delta_t = t2 - t1 Principes de la programmation dynamique # La programmation dynamique, introduite au d\u00e9but des ann\u00e9es 1950 par Richard Bellman, est une m\u00e9thode pour r\u00e9soudre des probl\u00e8mes en combinant des solutions de sous-probl\u00e8mes, tout comme les m\u00e9thodes de type diviser pour r\u00e9gner. Un algorithme de programmation dynamique r\u00e9sout chaque sous-sous-probl\u00e8me une seule fois et m\u00e9morise sa r\u00e9ponse dans un tableau, \u00e9vitant ainsi le re-calcul de la solution chaque fois qu'il r\u00e9sout chaque sous-sous-probl\u00e8me. La programmation dynamique s'applique g\u00e9n\u00e9ralement aux probl\u00e8mes d'optimisation, comme ceux que nous avons vu l'an pass\u00e9 lorsque nous avons \u00e9tudi\u00e9 les algorithmes gloutons. Application aux algorithmes gloutons # Rappels pour la version r\u00e9cursive # Vous avez \u00e0 votre disposition un nombre illimit\u00e9 de pi\u00e8ces de 2, 5 cts, 10 cts, 50 cts et 1 euro (100 cts). Vous devez rendre une certaine somme (rendu de monnaie). Le probl\u00e8me est le suivant : \"Quel est le nombre minimum de pi\u00e8ces qui doivent \u00eatre utilis\u00e9es pour rendre la monnaie\" La r\u00e9solution \"gloutonne\" de ce probl\u00e8me peut \u00eatre la suivante : On prend la pi\u00e8ce qui a la plus grande valeur (il faut que la valeur de cette pi\u00e8ce soit inf\u00e9rieure ou \u00e9gale \u00e0 la somme restant \u00e0 rendre). On recommence l\u2019op\u00e9ration ci-dessus jusqu\u2019au moment o\u00f9 la somme \u00e0 rendre est \u00e9gale \u00e0 z\u00e9ro. Exemple : nous avons 1 euro 77 cts \u00e0 rendre : on utilise une pi\u00e8ce de 1 euro (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 1,77 euro), il reste 77 cts \u00e0 rendre on utilise une pi\u00e8ce de 50 cts (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 0,77 euro), il reste 27 cts \u00e0 rendre on utilise une pi\u00e8ce de 10 cts (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 0,27 euro), il reste 17 cts \u00e0 rendre on utilise une pi\u00e8ce de 10 cts (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 0,17 euro), il reste 7 cts \u00e0 rendre on utilise une pi\u00e8ce de 5 cts (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 0,07 euro), il reste 2 cts \u00e0 rendre on utilise une pi\u00e8ce de 2 cts (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 0,02 euro), il reste 0 cts \u00e0 rendre. L'algorithme se termine en renvoyant 6 (on a d\u00fb rendre 6 pi\u00e8ces) Exercice : Compl\u00e9ter la fonction suivante pour qu'elle donne, de mani\u00e8re r\u00e9cursive, le nombre minimal de pi\u00e8ces utilis\u00e9es pour une somme s donn\u00e9e : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def rendu_monnaie_rec ( P : list , s : int ) -> int : \"\"\" renvoie le nombre minimal de pi\u00e8ces pour rendre la somme s en utilisant le jeu de pi\u00e8ces P\"\"\" if s == 0 : return 0 else : mini = float ( 'inf' ) # On fixe le nombre de pi\u00e8ce \u00e0 l'infini for i in range ( len ( P )): if ... <= s : nb = 1 + ... if nb < mini : mini = nb return mini P = ( 2 , 5 , 10 , 100 ) print ( rendu_monnaie_rec ( P , 17 )) # Le programme devant renvoyer 3. Passage en programmation dynamique # On constate dans la partie pr\u00e9c\u00e9dente que la m\u00e9thode pr\u00e9c\u00e9dente fait de trop nombreux appels r\u00e9cursifs, qui ralentissent consid\u00e9rablement le temps de calcul, voire plante le programme d\u00e8s que la taille maximale de la pile est d\u00e9pass\u00e9e. On va donc utiliser la programmation dynamique pour acc\u00e9l\u00e9rer la vitesse de traitement du probl\u00e8me. Exercice : Est-ce une m\u00e9thode ascendante ou descendante ? 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def rendu_monnaie ( s , pieces ): # \u00c9TAPE 1 : cr\u00e9ation et initialisation du tableau nb = [ O ] * ( s + 1 ) # nb[0] est ainsi bien initialis\u00e9 # \u00c9TAPE 2 : remplissage du reste du tableau par indice croissant for n in range ( 1 , s + 1 ): nb [ n ] = n # nb[n] = 1 + 1 + ... + dans le pire des cas for p in pieces : if p <= n : nb_bis = 1 + nb [ n - p ] nb [ n ] = min ( nb [ n ], nb_bis ) # \u00c9TAPE 3 : le r\u00e9sultat est dans la derni\u00e8re case return nb [ n ] # ESSAI rendu_monnaie ( 100 , [ 1 , 2 ]) Explication : Cr\u00e9ation et initialisation du tableau : On a besoin d'un tableau nb de taille s+1 qui va permettre de stocker les valeurs nb_pieces(0), nb_pieces(1), ..., nb_piec(s) dans cet ordre. Pour cela on cr\u00e9e le tableau nb avec n+1 z\u00e9ros initialement La valeur connue nb[0] est alors d\u00e9j\u00e0 correctement initialis\u00e9e Utilisation de la formule de r\u00e9currence pour remplir le reste du tableau On peut donc remplir le tableau nb en parcourant les indices par ordre croissant (on fait varier n de 1 \u00e0 s ) en utilisant la formule de r\u00e9currence. \\[\\text{nb_pieces}(n) = \\left\\{ \\begin{array}{l} 0 \\hspace{5cm} \\textrm{ si } n = 0\\\\ 1 + \\displaystyle\\min_{p\\leq n}(\\text{nb_pieces}(n-p)) \\hspace{0.5cm} \\textrm{ sinon } \\end{array} \\right.\\] Le r\u00e9sultat est dans la dernier case du tableau : on la renvoie","title":"Prog Dynamique"},{"location":"Terminale/Programmation/prog_dyn/#programmation-dynamique","text":"","title":"Programmation dynamique"},{"location":"Terminale/Programmation/prog_dyn/#contexte","text":"Exercice 1 : \u00c9crire une fonction r\u00e9cursive qui calcule la factorielle n. Rappel : \\(n!=1\\times 2\\times 3\\times ...\\times n\\) \u00c9crire une fonction r\u00e9cursive qui permet de calculer le \\(n^{i\u00e8me}\\) terme de la suite de Fibonacci sachant qu'elle se d\u00e9finit ainsi : \\[ \\begin{cases} F_0 = 0 & \\\\ F_1 = 1 & \\\\ F_n = F_{n\u22121} + F_{n\u22122} & \\forall n \\ge 2. \\end{cases} \\] Donc pour n = 6, cette deuxi\u00e8me fonction peut se repr\u00e9senter par le sch\u00e9ma ci-dessous : arbre Vous pouvez constater que l'on a une structure arborescente (typique dans les algorithmes r\u00e9cursifs), si on additionne toutes les feuilles de cette structure arborescente (fib(1) = 1 et fib(0) = 0), on retrouve bien 8. En observant attentivement le sch\u00e9ma ci-dessus, vous avez remarqu\u00e9 que de nombreux calculs sont inutiles, car effectu\u00e9 2 fois : par exemple on retrouve le calcul de fib(4) \u00e0 2 endroits (en haut \u00e0 droite et un peu plus bas \u00e0 gauche) : arbre","title":"Contexte"},{"location":"Terminale/Programmation/prog_dyn/#programmation-dynamique_1","text":"","title":"Programmation Dynamique"},{"location":"Terminale/Programmation/prog_dyn/#premiers-exemples-sur-la-suite-de-fibonacci","text":"En consid\u00e9rant l'algorithme pr\u00e9c\u00e9dant, on comprend bien qu'il est particuli\u00e8rement inefficace de calculer plusieurs fois le m\u00eame sous-calcul. Afin d'am\u00e9liorer le temps de calcul de l'algorithme, nous d\u00e9cidons donc de m\u00e9moriser les calculs d\u00e9j\u00e0 effectu\u00e9s dans un tableau. Il existe deux m\u00e9thodes diff\u00e9rentes : Bottom-Up Top Down On pourrait donc grandement simplifier le calcul en calculant une fois pour toutes fib(4), en \"m\u00e9morisant\" le r\u00e9sultat et en le r\u00e9utilisant quand n\u00e9cessaire. On va calculer les nombres de la suite de Fibonacci jusqu'\u00e0 \\(F(n)\\) en partant de \\(F(0)\\) et \\(F(1)\\) . On appelle ce type de m\u00e9thode une m\u00e9thode Bottom-Up. Ce n'est pas une m\u00e9thode r\u00e9cursive. 1 2 3 4 5 6 def fibo_asc ( n : int ) -> int : F = [ 0 ] * ( n + 1 ) F [ 1 ] = 1 for i in range ( 2 , n + 1 ) : F [ i ] = F [ i - 1 ] + F [ i - 2 ] return F [ n ] On effectue une succession d'appels r\u00e9cursifs jusqu'\u00e0 arriver aux cas de base mais sauvegardant les r\u00e9sultats interm\u00e9diaires et en faisant appel s'ils ont d\u00e9j\u00e0 \u00e9t\u00e9 calcul\u00e9s. Cette approche n\u00e9cessite un tableau ext\u00e9rieur \u00e0 la fonction que cette derni\u00e8re vient alimenter et dans lequel elle va rechercher si les calculs ont d\u00e9j\u00e0 \u00e9t\u00e9 effectu\u00e9s. 1 2 3 4 5 6 7 8 9 10 11 # Tableau stockant les valeurs calcul\u00e9es au fur et \u00e0 mesure f = [ 0 , 1 ] def fibonacci ( n : int , f : list ) -> int : \"\"\" Si la valeur est d\u00e9j\u00e0 calcul\u00e9e, on la r\u00e9cup\u00e8re dans le tableau, sinon on la calcule r\u00e9cursivement puis l'ajoute au tableau.\"\"\" if n < len ( f ) : return f [ n ] else : f . append ( fibonacci ( n - 1 , f ) + fibonacci ( n - 2 , f )) return f [ n ] Exercice 2 : Evaluer le temps mis par les diff\u00e9rents algorithmes pour n = 35. Comparer les. On rappelle que le temps mis par un algorithme peut \u00eatre calcul\u00e9 avec la fonctions time() de la biblioth\u00e8que time.h . Attention, si le temps mis par l'algorithme est trop petit, il peut \u00eatre int\u00e9ressant de l'\u00e9xecuter un certain nombre de fois. Exemple : 1 2 3 4 5 import time t1 = time . time () # instructions dont le temps est \u00e0 mesurer t2 = time . time () Delta_t = t2 - t1","title":"Premiers exemples sur la suite de Fibonacci"},{"location":"Terminale/Programmation/prog_dyn/#principes-de-la-programmation-dynamique","text":"La programmation dynamique, introduite au d\u00e9but des ann\u00e9es 1950 par Richard Bellman, est une m\u00e9thode pour r\u00e9soudre des probl\u00e8mes en combinant des solutions de sous-probl\u00e8mes, tout comme les m\u00e9thodes de type diviser pour r\u00e9gner. Un algorithme de programmation dynamique r\u00e9sout chaque sous-sous-probl\u00e8me une seule fois et m\u00e9morise sa r\u00e9ponse dans un tableau, \u00e9vitant ainsi le re-calcul de la solution chaque fois qu'il r\u00e9sout chaque sous-sous-probl\u00e8me. La programmation dynamique s'applique g\u00e9n\u00e9ralement aux probl\u00e8mes d'optimisation, comme ceux que nous avons vu l'an pass\u00e9 lorsque nous avons \u00e9tudi\u00e9 les algorithmes gloutons.","title":"Principes de la programmation dynamique"},{"location":"Terminale/Programmation/prog_dyn/#application-aux-algorithmes-gloutons","text":"","title":"Application aux algorithmes gloutons"},{"location":"Terminale/Programmation/prog_dyn/#rappels-pour-la-version-recursive","text":"Vous avez \u00e0 votre disposition un nombre illimit\u00e9 de pi\u00e8ces de 2, 5 cts, 10 cts, 50 cts et 1 euro (100 cts). Vous devez rendre une certaine somme (rendu de monnaie). Le probl\u00e8me est le suivant : \"Quel est le nombre minimum de pi\u00e8ces qui doivent \u00eatre utilis\u00e9es pour rendre la monnaie\" La r\u00e9solution \"gloutonne\" de ce probl\u00e8me peut \u00eatre la suivante : On prend la pi\u00e8ce qui a la plus grande valeur (il faut que la valeur de cette pi\u00e8ce soit inf\u00e9rieure ou \u00e9gale \u00e0 la somme restant \u00e0 rendre). On recommence l\u2019op\u00e9ration ci-dessus jusqu\u2019au moment o\u00f9 la somme \u00e0 rendre est \u00e9gale \u00e0 z\u00e9ro. Exemple : nous avons 1 euro 77 cts \u00e0 rendre : on utilise une pi\u00e8ce de 1 euro (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 1,77 euro), il reste 77 cts \u00e0 rendre on utilise une pi\u00e8ce de 50 cts (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 0,77 euro), il reste 27 cts \u00e0 rendre on utilise une pi\u00e8ce de 10 cts (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 0,27 euro), il reste 17 cts \u00e0 rendre on utilise une pi\u00e8ce de 10 cts (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 0,17 euro), il reste 7 cts \u00e0 rendre on utilise une pi\u00e8ce de 5 cts (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 0,07 euro), il reste 2 cts \u00e0 rendre on utilise une pi\u00e8ce de 2 cts (plus grande valeur de pi\u00e8ce inf\u00e9rieure \u00e0 0,02 euro), il reste 0 cts \u00e0 rendre. L'algorithme se termine en renvoyant 6 (on a d\u00fb rendre 6 pi\u00e8ces) Exercice : Compl\u00e9ter la fonction suivante pour qu'elle donne, de mani\u00e8re r\u00e9cursive, le nombre minimal de pi\u00e8ces utilis\u00e9es pour une somme s donn\u00e9e : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def rendu_monnaie_rec ( P : list , s : int ) -> int : \"\"\" renvoie le nombre minimal de pi\u00e8ces pour rendre la somme s en utilisant le jeu de pi\u00e8ces P\"\"\" if s == 0 : return 0 else : mini = float ( 'inf' ) # On fixe le nombre de pi\u00e8ce \u00e0 l'infini for i in range ( len ( P )): if ... <= s : nb = 1 + ... if nb < mini : mini = nb return mini P = ( 2 , 5 , 10 , 100 ) print ( rendu_monnaie_rec ( P , 17 )) # Le programme devant renvoyer 3.","title":"Rappels pour la version r\u00e9cursive"},{"location":"Terminale/Programmation/prog_dyn/#passage-en-programmation-dynamique","text":"On constate dans la partie pr\u00e9c\u00e9dente que la m\u00e9thode pr\u00e9c\u00e9dente fait de trop nombreux appels r\u00e9cursifs, qui ralentissent consid\u00e9rablement le temps de calcul, voire plante le programme d\u00e8s que la taille maximale de la pile est d\u00e9pass\u00e9e. On va donc utiliser la programmation dynamique pour acc\u00e9l\u00e9rer la vitesse de traitement du probl\u00e8me. Exercice : Est-ce une m\u00e9thode ascendante ou descendante ? 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def rendu_monnaie ( s , pieces ): # \u00c9TAPE 1 : cr\u00e9ation et initialisation du tableau nb = [ O ] * ( s + 1 ) # nb[0] est ainsi bien initialis\u00e9 # \u00c9TAPE 2 : remplissage du reste du tableau par indice croissant for n in range ( 1 , s + 1 ): nb [ n ] = n # nb[n] = 1 + 1 + ... + dans le pire des cas for p in pieces : if p <= n : nb_bis = 1 + nb [ n - p ] nb [ n ] = min ( nb [ n ], nb_bis ) # \u00c9TAPE 3 : le r\u00e9sultat est dans la derni\u00e8re case return nb [ n ] # ESSAI rendu_monnaie ( 100 , [ 1 , 2 ]) Explication : Cr\u00e9ation et initialisation du tableau : On a besoin d'un tableau nb de taille s+1 qui va permettre de stocker les valeurs nb_pieces(0), nb_pieces(1), ..., nb_piec(s) dans cet ordre. Pour cela on cr\u00e9e le tableau nb avec n+1 z\u00e9ros initialement La valeur connue nb[0] est alors d\u00e9j\u00e0 correctement initialis\u00e9e Utilisation de la formule de r\u00e9currence pour remplir le reste du tableau On peut donc remplir le tableau nb en parcourant les indices par ordre croissant (on fait varier n de 1 \u00e0 s ) en utilisant la formule de r\u00e9currence. \\[\\text{nb_pieces}(n) = \\left\\{ \\begin{array}{l} 0 \\hspace{5cm} \\textrm{ si } n = 0\\\\ 1 + \\displaystyle\\min_{p\\leq n}(\\text{nb_pieces}(n-p)) \\hspace{0.5cm} \\textrm{ sinon } \\end{array} \\right.\\] Le r\u00e9sultat est dans la dernier case du tableau : on la renvoie","title":"Passage en programmation dynamique"},{"location":"Terminale/Programmation/Recursivite/exos_Bac_rec/","text":"Fiche d'exercices type Bac # Exercice 1 # D'apr\u00e8s 2021, M\u00e9tropole, Candidats libres, J2, Ex. 4 D'apr\u00e8s 2021, M\u00e9tropole, Candidats libres, J2, Ex. 4 On s'int\u00e9resse dans cet exercice \u00e0 un algorithme de m\u00e9lange des \u00e9l\u00e9ments d'une liste. 1. Pour la suite, il sera utile de disposer d'une fonction echange qui permet d'\u00e9changer dans une liste valeurs les \u00e9l\u00e9ments d'indice i et j . Expliquer pourquoi le code Python ci-dessous ne r\u00e9alise pas cet \u00e9change et en proposer une modification. def echange ( valeurs , i , j ): valeurs [ j ] = valeurs [ i ] valeurs [ i ] = valeurs [ j ] 2. La documentation du module random de Python fournit les informations ci-dessous concernant la fonction randint : randint(a, b) Renvoie un entier al\u00e9atoire N tel que a <= N <= b . Alias pour randrange(a, b + 1) . Parmi les valeurs ci-dessous, quelles sont celles qui peuvent \u00eatre renvoy\u00e9es par l'appel randint(0, 10) ? 0 1 3.5 9 10 11 3. Le m\u00e9lange de Fischer-Yates est un algorithme permettant de permuter al\u00e9atoirement les \u00e9l\u00e9ments d'une liste. On donne ci-dessous une mise en \u0153uvre r\u00e9cursive de cet algorithme en Python. 1 2 3 4 5 6 7 8 from random import randint def melange ( valeurs , i ): print ( valeurs ) if i > 0 : j = randint ( 0 , i ) echange ( valeurs , i , j ) melange ( valeurs , i - 1 ) 3.a. Expliquer pourquoi la fonction melange se termine toujours. 3.b. Lors de l'appel de la fonction melange , la valeur du param\u00e8tre i doit \u00eatre \u00e9gal au plus grand indice possible de la liste valeurs . Pour une liste de longueur \\(n\\) , quel est le nombre d'appels r\u00e9cursifs de la fonction melange effectu\u00e9s, sans compter l'appel initial ? 3.c. On consid\u00e8re le script ci-dessous : valeurs = [ x for x in range ( 5 )] melange ( valeurs , 4 ) On suppose que les valeurs successivement renvoy\u00e9es par la fonction randint sont 2 , 1 , 2 et 0 . Les deux premiers affichages produits par l'instruction print ( valeurs ) de la fonction melange sont : Premier affichage : [ 0 , 1 , 2 , 3 , 4 ] , Deuxi\u00e8me affichage : [ 0 , 1 , 4 , 3 , 2 ] . Donner les affichages suivants produits par la fonction melange ? 3.d. Proposer une version it\u00e9rative du m\u00e9lange de Fischer-Yates. Exercice 2 # Cet exercice traite du th\u00e8me \u00abprogrammation\u00bb, et principalement de la r\u00e9cursivit\u00e9. On rappelle qu'une cha\u00eene de caract\u00e8res peut \u00eatre repr\u00e9sent\u00e9e en Python par un texte entre guillemets \"\" et que : la fonction `len`` renvoie la longueur de la cha\u00eene de caract\u00e8res pass\u00e9e en param\u00e8tre ; si une variable ch d\u00e9signe une cha\u00eene de caract\u00e8res, alors ch[0]`` renvoie son premier caract\u00e8re, ch[1]`` le deuxi\u00e8me, etc. ; l'op\u00e9rateur `+`` permet de concat\u00e9ner deux cha\u00eenes de caract\u00e8res. Exemples : >>> texte = \"bricot\" >>> len ( texte ) 6 >>> texte [ 0 ] \"b\" >>> texte [ 1 ] \"r\" >>> \"a\" + texte \"abricot\" On s'int\u00e9resse dans cet exercice \u00e0 la construction de cha\u00eenes de caract\u00e8res suivant certaines r\u00e8gles de construction. R\u00e8gle A : une cha\u00eene est construite suivant la r\u00e8gle A dans les deux cas suivants: soit elle est \u00e9gale \u00e0 \"a\" ; soit elle est de la forme \"a\" + chaine + \"a\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A. R\u00e8gle B : une cha\u00eene est construite suivant la r\u00e8gle B dans les deux cas suivants : soit elle est de la forme \"b\"+chaine+\"b\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A ; soit elle est de la forme \"b\" + chaine+\"b\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle B. On a reproduit ci-dessous l'aide de la fonction choice du module random. >>> from random import choice >>> help ( choice ) Help on method choice in module random : choice ( seq ) method of random . Random instance Choose a random element from a non - empty sequence . La fonction A() ci-dessous renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A, en choisissant al\u00e9atoirement entre les deux cas de figure de cette r\u00e8gle. def A (): if choice ([ True , False ]): return \"a\" else : return \"a\" + A () + \"a\" 1.a Cette fonction est-elle r\u00e9cursive ? Justifier. 1.b La fonction `choice([True, False])`` peut renvoyer False un tr\u00e8s grand nombre de fois cons\u00e9cutives. Expliquer pourquoi ce cas de figure am\u00e8nerait \u00e0 une erreur d'ex\u00e9cution. Dans la suite, on consid\u00e8re une deuxi\u00e8me version de la fonction A. \u00c0 pr\u00e9sent, la fonction prend en param\u00e8tre un entier n tel que, si la valeur de n est n\u00e9gative ou nulle, la fonction renvoie \"a\". Si la valeur de n est strictement positive, elle renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A avec un n d\u00e9cr\u00e9ment\u00e9 de 1, en choisissant al\u00e9atoirement entre les deux cas de figure de cette r\u00e8gle. def A ( n ): if ... or choice ([ True , False ]) : return \"a\" else : return \"a\" + ... + \"a\" 2.a. Recopier sur code la copie et compl\u00e9ter aux emplacements des points de suspension ... le code de cette nouvelle fonction A. 2.b. Justifier le fait qu'un appel de la forme A(n) avec n un nombre entier positif inf\u00e9rieur \u00e0 50, termine toujours. On donne ci-apr\u00e8s le code de la fonction r\u00e9cursive B qui prend en param\u00e8tre un entier \\(n\\) et qui renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle B. def B ( n ): if n <= 0 or choice ([ True , False ]): return \"b\" + A ( n - 1 ) + \"b\" else : return \"b\" + B ( n - 1 ) + \"b\" On admet que : les appels A(-1) et A(0) renvoient la cha\u00eene \"a\"; l\u2019appel A(1) renvoie la cha\u00eene \"a\" ou la cha\u00eene \"aaa\"; l\u2019appel A(2) renvoie la cha\u00eene \"a\", la cha\u00eene \"aaa\" ou la cha\u00eene \"aaaaa\". 3. Donner toutes les cha\u00eenes possibles renvoy\u00e9es par les appels B(0), B(1) et B(2). On suppose maintenant qu'on dispose d'une fonction raccourcir qui prend comme param\u00e8tre une cha\u00eene de caract\u00e8res de longueur sup\u00e9rieure ou \u00e9gale \u00e0 2, et renvoie la cha\u00eene de caract\u00e8res obtenue \u00e0 partir de la cha\u00eene initiale en lui \u00f4tant le premier et le dernier caract\u00e8re. Exemple : >>> raccourcir ( \"abricot\" ) \"brico\" >>> raccourcir ( \"ab\" ) \"\" 4.a. Recopier sur la copie et compl\u00e9ter les points de suspension ... du code de la fonction regleA ci-dessous pour qu'elle renvoie True si la cha\u00eene pass\u00e9e en param\u00e8tre est construite suivant la r\u00e8gle A, et False sinon. def regleA ( chaine ): n = len ( chaine ) if n >= 2 : return chaine [ 0 ] == \"a\" and chaine [ n - 1 ] == \"a\" and regleA ( ... ) else : return chaine == ... 4.b. \u00c9crire le code d\u2019une fonction regleB , prenant en param\u00e8tre une cha\u00eene de caract\u00e8res et renvoyant True si la cha\u00eene est construite suivant la r\u00e8gle B,et False sinon.","title":"Exercices"},{"location":"Terminale/Programmation/Recursivite/exos_Bac_rec/#fiche-dexercices-type-bac","text":"","title":"Fiche d'exercices type Bac"},{"location":"Terminale/Programmation/Recursivite/exos_Bac_rec/#exercice-1","text":"D'apr\u00e8s 2021, M\u00e9tropole, Candidats libres, J2, Ex. 4 D'apr\u00e8s 2021, M\u00e9tropole, Candidats libres, J2, Ex. 4 On s'int\u00e9resse dans cet exercice \u00e0 un algorithme de m\u00e9lange des \u00e9l\u00e9ments d'une liste. 1. Pour la suite, il sera utile de disposer d'une fonction echange qui permet d'\u00e9changer dans une liste valeurs les \u00e9l\u00e9ments d'indice i et j . Expliquer pourquoi le code Python ci-dessous ne r\u00e9alise pas cet \u00e9change et en proposer une modification. def echange ( valeurs , i , j ): valeurs [ j ] = valeurs [ i ] valeurs [ i ] = valeurs [ j ] 2. La documentation du module random de Python fournit les informations ci-dessous concernant la fonction randint : randint(a, b) Renvoie un entier al\u00e9atoire N tel que a <= N <= b . Alias pour randrange(a, b + 1) . Parmi les valeurs ci-dessous, quelles sont celles qui peuvent \u00eatre renvoy\u00e9es par l'appel randint(0, 10) ? 0 1 3.5 9 10 11 3. Le m\u00e9lange de Fischer-Yates est un algorithme permettant de permuter al\u00e9atoirement les \u00e9l\u00e9ments d'une liste. On donne ci-dessous une mise en \u0153uvre r\u00e9cursive de cet algorithme en Python. 1 2 3 4 5 6 7 8 from random import randint def melange ( valeurs , i ): print ( valeurs ) if i > 0 : j = randint ( 0 , i ) echange ( valeurs , i , j ) melange ( valeurs , i - 1 ) 3.a. Expliquer pourquoi la fonction melange se termine toujours. 3.b. Lors de l'appel de la fonction melange , la valeur du param\u00e8tre i doit \u00eatre \u00e9gal au plus grand indice possible de la liste valeurs . Pour une liste de longueur \\(n\\) , quel est le nombre d'appels r\u00e9cursifs de la fonction melange effectu\u00e9s, sans compter l'appel initial ? 3.c. On consid\u00e8re le script ci-dessous : valeurs = [ x for x in range ( 5 )] melange ( valeurs , 4 ) On suppose que les valeurs successivement renvoy\u00e9es par la fonction randint sont 2 , 1 , 2 et 0 . Les deux premiers affichages produits par l'instruction print ( valeurs ) de la fonction melange sont : Premier affichage : [ 0 , 1 , 2 , 3 , 4 ] , Deuxi\u00e8me affichage : [ 0 , 1 , 4 , 3 , 2 ] . Donner les affichages suivants produits par la fonction melange ? 3.d. Proposer une version it\u00e9rative du m\u00e9lange de Fischer-Yates.","title":"Exercice 1"},{"location":"Terminale/Programmation/Recursivite/exos_Bac_rec/#exercice-2","text":"Cet exercice traite du th\u00e8me \u00abprogrammation\u00bb, et principalement de la r\u00e9cursivit\u00e9. On rappelle qu'une cha\u00eene de caract\u00e8res peut \u00eatre repr\u00e9sent\u00e9e en Python par un texte entre guillemets \"\" et que : la fonction `len`` renvoie la longueur de la cha\u00eene de caract\u00e8res pass\u00e9e en param\u00e8tre ; si une variable ch d\u00e9signe une cha\u00eene de caract\u00e8res, alors ch[0]`` renvoie son premier caract\u00e8re, ch[1]`` le deuxi\u00e8me, etc. ; l'op\u00e9rateur `+`` permet de concat\u00e9ner deux cha\u00eenes de caract\u00e8res. Exemples : >>> texte = \"bricot\" >>> len ( texte ) 6 >>> texte [ 0 ] \"b\" >>> texte [ 1 ] \"r\" >>> \"a\" + texte \"abricot\" On s'int\u00e9resse dans cet exercice \u00e0 la construction de cha\u00eenes de caract\u00e8res suivant certaines r\u00e8gles de construction. R\u00e8gle A : une cha\u00eene est construite suivant la r\u00e8gle A dans les deux cas suivants: soit elle est \u00e9gale \u00e0 \"a\" ; soit elle est de la forme \"a\" + chaine + \"a\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A. R\u00e8gle B : une cha\u00eene est construite suivant la r\u00e8gle B dans les deux cas suivants : soit elle est de la forme \"b\"+chaine+\"b\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A ; soit elle est de la forme \"b\" + chaine+\"b\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle B. On a reproduit ci-dessous l'aide de la fonction choice du module random. >>> from random import choice >>> help ( choice ) Help on method choice in module random : choice ( seq ) method of random . Random instance Choose a random element from a non - empty sequence . La fonction A() ci-dessous renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A, en choisissant al\u00e9atoirement entre les deux cas de figure de cette r\u00e8gle. def A (): if choice ([ True , False ]): return \"a\" else : return \"a\" + A () + \"a\" 1.a Cette fonction est-elle r\u00e9cursive ? Justifier. 1.b La fonction `choice([True, False])`` peut renvoyer False un tr\u00e8s grand nombre de fois cons\u00e9cutives. Expliquer pourquoi ce cas de figure am\u00e8nerait \u00e0 une erreur d'ex\u00e9cution. Dans la suite, on consid\u00e8re une deuxi\u00e8me version de la fonction A. \u00c0 pr\u00e9sent, la fonction prend en param\u00e8tre un entier n tel que, si la valeur de n est n\u00e9gative ou nulle, la fonction renvoie \"a\". Si la valeur de n est strictement positive, elle renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A avec un n d\u00e9cr\u00e9ment\u00e9 de 1, en choisissant al\u00e9atoirement entre les deux cas de figure de cette r\u00e8gle. def A ( n ): if ... or choice ([ True , False ]) : return \"a\" else : return \"a\" + ... + \"a\" 2.a. Recopier sur code la copie et compl\u00e9ter aux emplacements des points de suspension ... le code de cette nouvelle fonction A. 2.b. Justifier le fait qu'un appel de la forme A(n) avec n un nombre entier positif inf\u00e9rieur \u00e0 50, termine toujours. On donne ci-apr\u00e8s le code de la fonction r\u00e9cursive B qui prend en param\u00e8tre un entier \\(n\\) et qui renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle B. def B ( n ): if n <= 0 or choice ([ True , False ]): return \"b\" + A ( n - 1 ) + \"b\" else : return \"b\" + B ( n - 1 ) + \"b\" On admet que : les appels A(-1) et A(0) renvoient la cha\u00eene \"a\"; l\u2019appel A(1) renvoie la cha\u00eene \"a\" ou la cha\u00eene \"aaa\"; l\u2019appel A(2) renvoie la cha\u00eene \"a\", la cha\u00eene \"aaa\" ou la cha\u00eene \"aaaaa\". 3. Donner toutes les cha\u00eenes possibles renvoy\u00e9es par les appels B(0), B(1) et B(2). On suppose maintenant qu'on dispose d'une fonction raccourcir qui prend comme param\u00e8tre une cha\u00eene de caract\u00e8res de longueur sup\u00e9rieure ou \u00e9gale \u00e0 2, et renvoie la cha\u00eene de caract\u00e8res obtenue \u00e0 partir de la cha\u00eene initiale en lui \u00f4tant le premier et le dernier caract\u00e8re. Exemple : >>> raccourcir ( \"abricot\" ) \"brico\" >>> raccourcir ( \"ab\" ) \"\" 4.a. Recopier sur la copie et compl\u00e9ter les points de suspension ... du code de la fonction regleA ci-dessous pour qu'elle renvoie True si la cha\u00eene pass\u00e9e en param\u00e8tre est construite suivant la r\u00e8gle A, et False sinon. def regleA ( chaine ): n = len ( chaine ) if n >= 2 : return chaine [ 0 ] == \"a\" and chaine [ n - 1 ] == \"a\" and regleA ( ... ) else : return chaine == ... 4.b. \u00c9crire le code d\u2019une fonction regleB , prenant en param\u00e8tre une cha\u00eene de caract\u00e8res et renvoyant True si la cha\u00eene est construite suivant la r\u00e8gle B,et False sinon.","title":"Exercice 2"},{"location":"Terminale/Programmation/Recursivite/exos_correc_Bac_rec/","text":"Fiche d'exercices type Bac # Exercice 2 # D'apr\u00e8s 2021, M\u00e9tropole, Candidats libres, J2, Ex. 4 On s'int\u00e9resse dans cet exercice \u00e0 un algorithme de m\u00e9lange des \u00e9l\u00e9ments d'une liste. Pour la suite, il sera utile de disposer d'une fonction echange qui permet d'\u00e9changer dans une liste valeurs les \u00e9l\u00e9ments d'indice i et j. Expliquer pourquoi le code Python ci-dessous ne r\u00e9alise pas cet \u00e9change et en proposer une modification. def echange ( valeurs , i , j ): valeurs [ j ] = valeurs [ i ] valeurs [ i ] = valeurs [ j ] R\u00e9ponse On perd la valeur initiale de list[j] d\u00e8s la premi\u00e8re instruction. On peut proc\u00e9der de deux fa\u00e7ons diff\u00e9rentes : Avec une variable temporaire : def echange ( valeurs , i , j ): temp = valeurs [ j ] valeurs [ j ] = valeurs [ i ] valeurs [ i ] = temp En utilisant l'affectation multiple : def echange ( valeurs , i , j ): valeurs [ i ], valeurs [ j ] = valeurs [ j ], valeurs [ i ] 2. La documentation du module random de Python fournit les informations ci-dessous concernant la fonction randint : randint(a, b) Renvoie un entier al\u00e9atoire N tel que a <= N <= b . Alias pour randrange(a, b + 1) . Parmi les valeurs ci-dessous, quelles sont celles qui peuvent \u00eatre renvoy\u00e9es par l'appel randint(0, 10) ? 0 1 3.5 9 10 11 R\u00e9ponse L'appel randint(0, 10) renvoie une valeur enti\u00e8re entre 0 et 10 inclus l'un et l'autres. Donc 0 , 1 , 9 et 10 sont des valeurs possibles. 3. Le m\u00e9lange de Fischer-Yates est un algorithme permettant de permuter al\u00e9atoirement les \u00e9l\u00e9ments d'une liste. On donne ci-dessous une mise en \u0153uvre r\u00e9cursive de cet algorithme en Python. 1 2 3 4 5 6 7 8 from random import randint def melange ( valeurs , i ): print ( valeurs ) if i > 0 : j = randint ( 0 , i ) echange ( valeurs , i , j ) melange ( valeurs , i - 1 ) 3.a. Expliquer pourquoi la fonction melange se termine toujours. R\u00e9ponse On suppose que i est un entier positif compris entre 0 et l'indice du dernier \u00e9l\u00e9ment de la liste ( len ( valeurs ) - 1 ). Lors des appels r\u00e9cursifs, on d\u00e9cr\u00e9mente la valeur de i et ces appels n'ont lieu que si cette valeur est strictement positive. Donc la fonction s'arr\u00eatera toujours. 3.b. Lors de l'appel de la fonction melange , la valeur du param\u00e8tre i doit \u00eatre \u00e9gal au plus grand indice possible de la liste valeurs . Pour une liste de longueur \\(n\\) , quel est le nombre d'appels r\u00e9cursifs de la fonction melange effectu\u00e9s, sans compter l'appel initial ? R\u00e9ponse Pour une liste de longueur \\(n\\) , on appelle tout d'abord melange(valeurs, n - 1) . Le premier appel r\u00e9cursif est donc melange(valeurs, i - 2) . Il est suivi d'appels r\u00e9cursifs correspondants aux diff\u00e9rents indices de valeurs jusqu'au dernier appel melange(valeurs, 0) . Donc il y a \\(n-1\\) appels r\u00e9cursifs. 3.c. On consid\u00e8re le script ci-dessous : valeurs = [ x for x in range ( 5 )] melange ( valeurs , 4 ) On suppose que les valeurs successivement renvoy\u00e9es par la fonction randint sont 2 , 1 , 2 et 0 . Les deux premiers affichages produits par l'instruction print ( valeurs ) de la fonction melange sont : Premier affichage : [ 0 , 1 , 2 , 3 , 4 ] , Deuxi\u00e8me affichage : [ 0 , 1 , 4 , 3 , 2 ] . Donner les affichages suivants produits par la fonction melange . R\u00e9ponse On a les \u00e9tapes suivantes : Valeur de ind Valeur de valeurs affich\u00e9e Valeur renvoy\u00e9e par randint ind = 4 [0, 1, 2, 3, 4] 2 ind = 3 [0, 1, 4, 3, 2] 1 ind = 2 [0, 3, 4, 1, 2] 2 ind = 1 [0, 3, 4, 1, 2] 0 ind = 0 [3, 0, 4, 1, 2] 3.d. Proposer une version it\u00e9rative du m\u00e9lange de Fischer-Yates. R\u00e9ponse from random import randint def melange ( valeurs ): indice_dernier = len ( valeurs ) - 1 for i in range ( indice_dernier , 0 , - 1 ): j = randint ( 0 , i ) echange ( valeurs , i , j ) Exercice 2 # Cet exercice traite du th\u00e8me \u00abprogrammation\u00bb, et principalement de la r\u00e9cursivit\u00e9. On rappelle qu'une cha\u00eene de caract\u00e8res peut \u00eatre repr\u00e9sent\u00e9e en Python par un texte entre guillemets \"\" et que : la fonction len renvoie la longueur de la cha\u00eene de caract\u00e8res pass\u00e9e en param\u00e8tre ; si une variable ch d\u00e9signe une cha\u00eene de caract\u00e8res, alors ch[0] renvoie son premier caract\u00e8re, ch[1] le deuxi\u00e8me, etc. ; l'op\u00e9rateur `+`` permet de concat\u00e9ner deux cha\u00eenes de caract\u00e8res. Exemples : >>> texte = \"bricot\" >>> len ( texte ) 6 >>> texte [ 0 ] \"b\" >>> texte [ 1 ] \"r\" >>> \"a\" + texte \"abricot\" On s'int\u00e9resse dans cet exercice \u00e0 la construction de cha\u00eenes de caract\u00e8res suivant certaines r\u00e8gles de construction. R\u00e8gle A : une cha\u00eene est construite suivant la r\u00e8gle A dans les deux cas suivants: soit elle est \u00e9gale \u00e0 \"a\" ; soit elle est de la forme \"a\" + chaine + \"a\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A. R\u00e8gle B : une cha\u00eene est construite suivant la r\u00e8gle B dans les deux cas suivants : soit elle est de la forme \"b\"+chaine+\"b\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A ; soit elle est de la forme \"b\" + chaine+\"b\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle B. On a reproduit ci-dessous l'aide de la fonction choice du module random. >>> from random import choice >>> help ( choice ) Help on method choice in module random : choice ( seq ) method of random . Random instance Choose a random element from a non - empty sequence . La fonction A() ci-dessous renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A, en choisissant al\u00e9atoirement entre les deux cas de figure de cette r\u00e8gle. def A (): if choice ([ True , False ]): return \"a\" else : return \"a\" + A () + \"a\" 1.a. Cette fonction est-elle r\u00e9cursive ? Justifier. R\u00e9ponse La fonction A s\u2019appelle elle-m\u00eame, donc A est une fonction r\u00e9cursive. 1.b. La fonction choice([True, False]) peut renvoyer False un tr\u00e8s grand nombre de fois cons\u00e9cutives. Expliquer pourquoi ce cas de figure am\u00e8nerait \u00e0 une erreur d'ex\u00e9cution. R\u00e9ponse Le maximum de la profondeur de r\u00e9cursion en Python est g\u00e9n\u00e9ralement de 997, c\u2019est une protection contre un d\u00e9bordement de pile. On obtient alors cette erreur au del\u00e0 : RecursionError : maximum recursion depth exceeded in comparison Dans la suite, on consid\u00e8re une deuxi\u00e8me version de la fonction A. \u00c0 pr\u00e9sent, la fonction prend en param\u00e8tre un entier n tel que, si la valeur de n est n\u00e9gative ou nulle, la fonction renvoie \"a\". Si la valeur de n est strictement positive, elle renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A avec un n d\u00e9cr\u00e9ment\u00e9 de 1, en choisissant al\u00e9atoirement entre les deux cas de figure de cette r\u00e8gle. def A ( n ): if ... or choice ([ True , False ]) : return \"a\" else : return \"a\" + ... + \"a\" 2.a. Recopier sur la copie et compl\u00e9ter aux emplacements des points de suspension ... le code de cette nouvelle fonction A. R\u00e9ponse ``` python def A(n): if n<=0 or choice([True, False]) : return \"a\" else: return \"a\" + A(n-1) + \"a\" ``` 2.b. Justifier le fait qu'un appel de la forme A(n) avec n un nombre entier positif inf\u00e9rieur \u00e0 50, termine toujours. R\u00e9ponse Pour n > 0, l\u2019appel \u00e0 A(n) provoque ou bien un arr\u00eat de la fonction si choice([True, False]) = True, ou bien un appel r\u00e9cursif A(n \u22121). Un appel \u00e0 A(50) pourrait provoquer dans le pire des cas 50 appels r\u00e9cursifs pour arriver \u00e0 A(0) qui termine, ou alors terminer avant! On donne ci-apr\u00e8s le code de la fonction r\u00e9cursive B qui prend en param\u00e8tre un entier n et qui renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle B. def B ( n ): if n <= 0 or choice ([ True , False ]): return \"b\" + A ( n - 1 ) + \"b\" else : return \"b\" + B ( n - 1 ) + \"b\" On admet que : \u2022 les appels A(-1)et A(0) renvoient la cha\u00eene \"a\"; \u2022 l\u2019appel A(1) renvoie la cha\u00eene \"a\" ou la cha\u00eene \"aaa\"; \u2022 l\u2019appel A(2) renvoie la cha\u00eene \"a\", la cha\u00eene \"aaa\" ou la cha\u00eene \"aaaaa\". 3. Donner toutes les cha\u00eenes possibles renvoy\u00e9es par les appels B(0), B(1) et B(2). R\u00e9ponse L\u2019appel B(0) renvoie \"bab\" L\u2019appel B(1) renvoie \"bab\" ou \"bbabb\". L\u2019appel B(2) renvoie \"bab\", \"baaab\", \"bbabb\" ou \"bbbabbb\". On suppose maintenant qu'on dispose d'une fonction raccourcir qui prend comme param\u00e8tre une cha\u00eene de caract\u00e8res de longueur sup\u00e9rieure ou \u00e9gale \u00e0 2, et renvoie la cha\u00eene de caract\u00e8res obtenue \u00e0 partir de la cha\u00eene initiale en lui \u00f4tant le premier et le dernier caract\u00e8re. Exemple : >>> raccourcir ( \"abricot\" ) \"brico\" >>> raccourcir ( \"ab\" ) \"\" 4.a. Recopier sur la copie et compl\u00e9ter les points de suspension ... du code de la fonction regleA ci-dessous pour qu'elle renvoie True si la cha\u00eene pass\u00e9e en param\u00e8tre est construite suivant la r\u00e8gle A, et False sinon. def regleA ( chaine ): n = len ( chaine ) if n >= 2 : return chaine [ 0 ] == \"a\" and chaine [ n - 1 ] == \"a\" and regleA ( ... ) else : return chaine == ... R\u00e9ponse def regleA ( chaine ): n = len ( chaine ) if n >= 2 : return chaine [ 0 ] == \"a\" and chaine [ n - 1 ] == \"a\" and regle A ( racourcir ( chaine )) else : return chaine == \"a\" ou regle A(chaine[1 : n \u22121]) 4.b. \u00c9crire le code d\u2019une fonction regleB , prenant en param\u00e8tre une cha\u00eene de caract\u00e8res et renvoyant True si la cha\u00eene est construite suivant la r\u00e8gle B,et False sinon. R\u00e9ponse def regleB ( chaine ): n = len ( chaine ) if n >= 2 : return chaine [ 0 ] == \"b\" and chaine [ n - 1 ] == \"b\" and ( regleA ( chaine [ 1 : n - 1 ]) or regleB ( chaine [ 1 : n - 1 ])) else : return False","title":"Correction"},{"location":"Terminale/Programmation/Recursivite/exos_correc_Bac_rec/#fiche-dexercices-type-bac","text":"","title":"Fiche d'exercices type Bac"},{"location":"Terminale/Programmation/Recursivite/exos_correc_Bac_rec/#exercice-2","text":"D'apr\u00e8s 2021, M\u00e9tropole, Candidats libres, J2, Ex. 4 On s'int\u00e9resse dans cet exercice \u00e0 un algorithme de m\u00e9lange des \u00e9l\u00e9ments d'une liste. Pour la suite, il sera utile de disposer d'une fonction echange qui permet d'\u00e9changer dans une liste valeurs les \u00e9l\u00e9ments d'indice i et j. Expliquer pourquoi le code Python ci-dessous ne r\u00e9alise pas cet \u00e9change et en proposer une modification. def echange ( valeurs , i , j ): valeurs [ j ] = valeurs [ i ] valeurs [ i ] = valeurs [ j ] R\u00e9ponse On perd la valeur initiale de list[j] d\u00e8s la premi\u00e8re instruction. On peut proc\u00e9der de deux fa\u00e7ons diff\u00e9rentes : Avec une variable temporaire : def echange ( valeurs , i , j ): temp = valeurs [ j ] valeurs [ j ] = valeurs [ i ] valeurs [ i ] = temp En utilisant l'affectation multiple : def echange ( valeurs , i , j ): valeurs [ i ], valeurs [ j ] = valeurs [ j ], valeurs [ i ] 2. La documentation du module random de Python fournit les informations ci-dessous concernant la fonction randint : randint(a, b) Renvoie un entier al\u00e9atoire N tel que a <= N <= b . Alias pour randrange(a, b + 1) . Parmi les valeurs ci-dessous, quelles sont celles qui peuvent \u00eatre renvoy\u00e9es par l'appel randint(0, 10) ? 0 1 3.5 9 10 11 R\u00e9ponse L'appel randint(0, 10) renvoie une valeur enti\u00e8re entre 0 et 10 inclus l'un et l'autres. Donc 0 , 1 , 9 et 10 sont des valeurs possibles. 3. Le m\u00e9lange de Fischer-Yates est un algorithme permettant de permuter al\u00e9atoirement les \u00e9l\u00e9ments d'une liste. On donne ci-dessous une mise en \u0153uvre r\u00e9cursive de cet algorithme en Python. 1 2 3 4 5 6 7 8 from random import randint def melange ( valeurs , i ): print ( valeurs ) if i > 0 : j = randint ( 0 , i ) echange ( valeurs , i , j ) melange ( valeurs , i - 1 ) 3.a. Expliquer pourquoi la fonction melange se termine toujours. R\u00e9ponse On suppose que i est un entier positif compris entre 0 et l'indice du dernier \u00e9l\u00e9ment de la liste ( len ( valeurs ) - 1 ). Lors des appels r\u00e9cursifs, on d\u00e9cr\u00e9mente la valeur de i et ces appels n'ont lieu que si cette valeur est strictement positive. Donc la fonction s'arr\u00eatera toujours. 3.b. Lors de l'appel de la fonction melange , la valeur du param\u00e8tre i doit \u00eatre \u00e9gal au plus grand indice possible de la liste valeurs . Pour une liste de longueur \\(n\\) , quel est le nombre d'appels r\u00e9cursifs de la fonction melange effectu\u00e9s, sans compter l'appel initial ? R\u00e9ponse Pour une liste de longueur \\(n\\) , on appelle tout d'abord melange(valeurs, n - 1) . Le premier appel r\u00e9cursif est donc melange(valeurs, i - 2) . Il est suivi d'appels r\u00e9cursifs correspondants aux diff\u00e9rents indices de valeurs jusqu'au dernier appel melange(valeurs, 0) . Donc il y a \\(n-1\\) appels r\u00e9cursifs. 3.c. On consid\u00e8re le script ci-dessous : valeurs = [ x for x in range ( 5 )] melange ( valeurs , 4 ) On suppose que les valeurs successivement renvoy\u00e9es par la fonction randint sont 2 , 1 , 2 et 0 . Les deux premiers affichages produits par l'instruction print ( valeurs ) de la fonction melange sont : Premier affichage : [ 0 , 1 , 2 , 3 , 4 ] , Deuxi\u00e8me affichage : [ 0 , 1 , 4 , 3 , 2 ] . Donner les affichages suivants produits par la fonction melange . R\u00e9ponse On a les \u00e9tapes suivantes : Valeur de ind Valeur de valeurs affich\u00e9e Valeur renvoy\u00e9e par randint ind = 4 [0, 1, 2, 3, 4] 2 ind = 3 [0, 1, 4, 3, 2] 1 ind = 2 [0, 3, 4, 1, 2] 2 ind = 1 [0, 3, 4, 1, 2] 0 ind = 0 [3, 0, 4, 1, 2] 3.d. Proposer une version it\u00e9rative du m\u00e9lange de Fischer-Yates. R\u00e9ponse from random import randint def melange ( valeurs ): indice_dernier = len ( valeurs ) - 1 for i in range ( indice_dernier , 0 , - 1 ): j = randint ( 0 , i ) echange ( valeurs , i , j )","title":"Exercice 2"},{"location":"Terminale/Programmation/Recursivite/exos_correc_Bac_rec/#exercice-2_1","text":"Cet exercice traite du th\u00e8me \u00abprogrammation\u00bb, et principalement de la r\u00e9cursivit\u00e9. On rappelle qu'une cha\u00eene de caract\u00e8res peut \u00eatre repr\u00e9sent\u00e9e en Python par un texte entre guillemets \"\" et que : la fonction len renvoie la longueur de la cha\u00eene de caract\u00e8res pass\u00e9e en param\u00e8tre ; si une variable ch d\u00e9signe une cha\u00eene de caract\u00e8res, alors ch[0] renvoie son premier caract\u00e8re, ch[1] le deuxi\u00e8me, etc. ; l'op\u00e9rateur `+`` permet de concat\u00e9ner deux cha\u00eenes de caract\u00e8res. Exemples : >>> texte = \"bricot\" >>> len ( texte ) 6 >>> texte [ 0 ] \"b\" >>> texte [ 1 ] \"r\" >>> \"a\" + texte \"abricot\" On s'int\u00e9resse dans cet exercice \u00e0 la construction de cha\u00eenes de caract\u00e8res suivant certaines r\u00e8gles de construction. R\u00e8gle A : une cha\u00eene est construite suivant la r\u00e8gle A dans les deux cas suivants: soit elle est \u00e9gale \u00e0 \"a\" ; soit elle est de la forme \"a\" + chaine + \"a\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A. R\u00e8gle B : une cha\u00eene est construite suivant la r\u00e8gle B dans les deux cas suivants : soit elle est de la forme \"b\"+chaine+\"b\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A ; soit elle est de la forme \"b\" + chaine+\"b\", o\u00f9 chaine est une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle B. On a reproduit ci-dessous l'aide de la fonction choice du module random. >>> from random import choice >>> help ( choice ) Help on method choice in module random : choice ( seq ) method of random . Random instance Choose a random element from a non - empty sequence . La fonction A() ci-dessous renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A, en choisissant al\u00e9atoirement entre les deux cas de figure de cette r\u00e8gle. def A (): if choice ([ True , False ]): return \"a\" else : return \"a\" + A () + \"a\" 1.a. Cette fonction est-elle r\u00e9cursive ? Justifier. R\u00e9ponse La fonction A s\u2019appelle elle-m\u00eame, donc A est une fonction r\u00e9cursive. 1.b. La fonction choice([True, False]) peut renvoyer False un tr\u00e8s grand nombre de fois cons\u00e9cutives. Expliquer pourquoi ce cas de figure am\u00e8nerait \u00e0 une erreur d'ex\u00e9cution. R\u00e9ponse Le maximum de la profondeur de r\u00e9cursion en Python est g\u00e9n\u00e9ralement de 997, c\u2019est une protection contre un d\u00e9bordement de pile. On obtient alors cette erreur au del\u00e0 : RecursionError : maximum recursion depth exceeded in comparison Dans la suite, on consid\u00e8re une deuxi\u00e8me version de la fonction A. \u00c0 pr\u00e9sent, la fonction prend en param\u00e8tre un entier n tel que, si la valeur de n est n\u00e9gative ou nulle, la fonction renvoie \"a\". Si la valeur de n est strictement positive, elle renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A avec un n d\u00e9cr\u00e9ment\u00e9 de 1, en choisissant al\u00e9atoirement entre les deux cas de figure de cette r\u00e8gle. def A ( n ): if ... or choice ([ True , False ]) : return \"a\" else : return \"a\" + ... + \"a\" 2.a. Recopier sur la copie et compl\u00e9ter aux emplacements des points de suspension ... le code de cette nouvelle fonction A. R\u00e9ponse ``` python def A(n): if n<=0 or choice([True, False]) : return \"a\" else: return \"a\" + A(n-1) + \"a\" ``` 2.b. Justifier le fait qu'un appel de la forme A(n) avec n un nombre entier positif inf\u00e9rieur \u00e0 50, termine toujours. R\u00e9ponse Pour n > 0, l\u2019appel \u00e0 A(n) provoque ou bien un arr\u00eat de la fonction si choice([True, False]) = True, ou bien un appel r\u00e9cursif A(n \u22121). Un appel \u00e0 A(50) pourrait provoquer dans le pire des cas 50 appels r\u00e9cursifs pour arriver \u00e0 A(0) qui termine, ou alors terminer avant! On donne ci-apr\u00e8s le code de la fonction r\u00e9cursive B qui prend en param\u00e8tre un entier n et qui renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle B. def B ( n ): if n <= 0 or choice ([ True , False ]): return \"b\" + A ( n - 1 ) + \"b\" else : return \"b\" + B ( n - 1 ) + \"b\" On admet que : \u2022 les appels A(-1)et A(0) renvoient la cha\u00eene \"a\"; \u2022 l\u2019appel A(1) renvoie la cha\u00eene \"a\" ou la cha\u00eene \"aaa\"; \u2022 l\u2019appel A(2) renvoie la cha\u00eene \"a\", la cha\u00eene \"aaa\" ou la cha\u00eene \"aaaaa\". 3. Donner toutes les cha\u00eenes possibles renvoy\u00e9es par les appels B(0), B(1) et B(2). R\u00e9ponse L\u2019appel B(0) renvoie \"bab\" L\u2019appel B(1) renvoie \"bab\" ou \"bbabb\". L\u2019appel B(2) renvoie \"bab\", \"baaab\", \"bbabb\" ou \"bbbabbb\". On suppose maintenant qu'on dispose d'une fonction raccourcir qui prend comme param\u00e8tre une cha\u00eene de caract\u00e8res de longueur sup\u00e9rieure ou \u00e9gale \u00e0 2, et renvoie la cha\u00eene de caract\u00e8res obtenue \u00e0 partir de la cha\u00eene initiale en lui \u00f4tant le premier et le dernier caract\u00e8re. Exemple : >>> raccourcir ( \"abricot\" ) \"brico\" >>> raccourcir ( \"ab\" ) \"\" 4.a. Recopier sur la copie et compl\u00e9ter les points de suspension ... du code de la fonction regleA ci-dessous pour qu'elle renvoie True si la cha\u00eene pass\u00e9e en param\u00e8tre est construite suivant la r\u00e8gle A, et False sinon. def regleA ( chaine ): n = len ( chaine ) if n >= 2 : return chaine [ 0 ] == \"a\" and chaine [ n - 1 ] == \"a\" and regleA ( ... ) else : return chaine == ... R\u00e9ponse def regleA ( chaine ): n = len ( chaine ) if n >= 2 : return chaine [ 0 ] == \"a\" and chaine [ n - 1 ] == \"a\" and regle A ( racourcir ( chaine )) else : return chaine == \"a\" ou regle A(chaine[1 : n \u22121]) 4.b. \u00c9crire le code d\u2019une fonction regleB , prenant en param\u00e8tre une cha\u00eene de caract\u00e8res et renvoyant True si la cha\u00eene est construite suivant la r\u00e8gle B,et False sinon. R\u00e9ponse def regleB ( chaine ): n = len ( chaine ) if n >= 2 : return chaine [ 0 ] == \"b\" and chaine [ n - 1 ] == \"b\" and ( regleA ( chaine [ 1 : n - 1 ]) or regleB ( chaine [ 1 : n - 1 ])) else : return False","title":"Exercice 2"},{"location":"Terminale/Programmation/Recursivite/recursivite/","text":"R\u00e9cursivit\u00e9 # Contexte : la somme des premiers entiers # Pour d\u00e9finir la somme des \\(n\\) premiers entiers, on a l'habitude de d'\u00e9crire la formule suivante : \\[ 0 + 1 + 2 + 3 + .... + n \\] Cette formulation peut nous appara\u00eetre simple et intuitive. Exercice : \u00c9crire une fonction somme(n) qui retourne la somme des \\(n\\) premiers entiers. Or ce code n'est pas directement li\u00e9 \u00e0 la formule pr\u00e9c\u00e9dente. En effet, il n'y a rien dans cette formule qui laisse penser qu'il faille une variable interm\u00e9diaire pour calculer cette somme. C'est pourquoi, nous allons tenter de d\u00e9finir autrement cette fonction : \\[ somme(n)= \\left \\{ \\begin{array}{l l l} 0 & si &n=0 \\\\ n+somme(n-1) & si & n>0 \\end{array} \\right . \\] Cette d\u00e9finition nous indique ce que vaut somme ( n ) pour un entier \\(n\\) quelconque, selon que \\(n\\) soit \u00e9gal \u00e0 0 ou strictement positif. Ainsi, pour, pour le cas o\u00f9 \\(n\\) =0, la valeur de somme(n) vaut 0, et dans le cas o\u00f9 \\(n\\) est strictement positif, la valeur de somme(n) est \\(n+somme(n-1)\\) . Par exemple, voici ci-dessous les valeurs de 'somme(n)', pour \\(n\\) valant 0,1,2 et 3. \\[ \\begin{array}{l } somme(0)=0 \\\\ somme(1)=1+somme(0)=1+0=1 \\\\ somme(2)=2+somme(1)=2+1=3 \\end{array} \\] L'int\u00e9r\u00eat de cette formulation est qu'elle est directement programmable. En python, cela donne le programme ci-dessous. somme_rec.py 1 2 3 4 5 def somme ( n : int ) -> int : if n == 0 : return 0 else : return n + somme ( n - 1 ) R\u00e9cursivit\u00e9 # D\u00e9finition : On dit qu'un sous-programme (proc\u00e9dure ou fonction) est r\u00e9cursif s'il s'appelle lui-m\u00eame Il est indispensable de pr\u00e9voir une condition d'arr\u00eat \u00e0 la r\u00e9cursion sinon la fonction va s'appeler une infinit\u00e9 de fois. Dans la pratique, la pile qui stocke les appels r\u00e9cursifs est de taille finie. Une fois qu'elle est pleine, le programme ne r\u00e9pondra plus Exercice : Donner une d\u00e9finition r\u00e9cursive qui correspond au calcul de la fonction factorielle \\(n!\\) d\u00e9finie par \\(n!=1\\times 2 \\times 3 \\times ...\\times n\\) si \\(n>0\\) et \\(0!=1\\) . \u00c9crire \u00e9galement le code d'une fonction fact(n) qui impl\u00e9mente cette d\u00e9finition. Pour les plus rapides, \u00e9crire la version it\u00e9rative.} Exercice : \u00c9crire une fonction r\u00e9cursive boucle(i,k) qui affiche les entiers entre i et k . Par exemple, boucle(0,3) affiche 0,1,2,3. Pour les plus rapides, \u00e9crire la version it\u00e9rative. Exercice : La m\u00e9thode du paysan russe est un tr\u00e8s vieil algorithme de multiplication de deux nombres entiers d\u00e9j\u00e0 d\u00e9crit, sous forme l\u00e9g\u00e8rement diff\u00e9rente, sur un papyrus \u00e9gyptien r\u00e9dig\u00e9 autour de 1650 avant J.-C. Il s'agissait de la principale m\u00e9thode de calcul en Europe avant l'introduction des chiffres arabes. Les ordinateurs l'ont utilis\u00e9 avant que la multiplication ne soit directement int\u00e9gr\u00e9 dans le processeur sous forme de circuit \u00e9lectronique. Sous une forme moderne, il peut \u00eatre d\u00e9crit par le programme 1. Appliquer cette fonction pour effectuer la multiplication de 105 par 253. D\u00e9tailler les \u00e9tapes dans le tableau suivant : |x | y | p | |---\u2013|----|------| |105 |253 | .... | |... |....|..... | On admet que cet algorithme repose sur les relations suivantes : $$ x y= \\left { \\begin{array}{l l l} 0 & si &x=0 \\ (x//2) (y+y) & si & x\\ est\\ pair\\ (x//2)*(y+y)+y & si & x\\ est\\ impair\\ \\end{array} \\right . $$ Proposer une version r\u00e9cursive de cet algorithme. 1 2 3 4 5 6 7 8 Fonction multiplication ( x , y ): p = 0 TANT QUE x > 0 : Si x est impair : p = p + y x = x // 2 y = y + y Retourner p Fonctionnement d'une fonction r\u00e9cursive # Par exemple, l'\u00e9valuation de l'appel \u00e0 somme(3) du programme somme_rec peut se repr\u00e9senter de la mani\u00e8re suivante : o\u00f9 on indique uniquement pour chaque appel \u00e0 somme(n) l'instruction qui est ex\u00e9cut\u00e9e apr\u00e8s le test n==0 de la conditionnelle. Cette mani\u00e8re de repr\u00e9senter l'ex\u00e9cution d'un programme en indiquant les diff\u00e9rents appels effectu\u00e9s est appel\u00e9e un arbre d'appels Ainsi, pour calculer la valeur renvoy\u00e9e par somme(3) , il faut tout d'abord appeler somme(2) . Cet appel va lui-m\u00eame d\u00e9clencher un appel \u00e0 somme(1) , qui \u00e0 son tour n\u00e9cessite un appel \u00e0 somme(0) . Ce dernier appel se termine en renvoyant la valeur 0. Le calcul de somme(3) se fait donc \"\u00e0 rebours\". Une fois que l'appel \u00e0 somme(0) }` est termin\u00e9, c'est-\u00e0-dire que la valeur 0 a \u00e9t\u00e9 renvoy\u00e9e, l'arbre d'appels a la forme suivante. A cet instant, l'appel \u00e0 somme(1) }` peut alors se terminer et renvoyer le r\u00e9sultat de la somme 1+0. L'arbre d'appels est alors le suivant : Enfin, l'appel \u00e0 somme(2) peut lui-m\u00eame renvoyer la valeur 2+1 comme r\u00e9sultat, ce qui permet \u00e0 somme(3) de se terminer en renvoyant le r\u00e9sultat 3+3. On obtient bien au final la valeur 6 attendue. R\u00e9cursivit\u00e9 ou it\u00e9rativit\u00e9 ? # Lorsque l'on programme des fonctions qui ne s'appellent pas, on dit que l'on programme de mani\u00e8re it\u00e9rative. Il est toujours possible de transformer une fonction it\u00e9rative en fonction r\u00e9cursive et vice et versa. La m\u00e9thode it\u00e9rative nous est plus famili\u00e8re et est plus rapide une fois le code impl\u00e9ment\u00e9 dans un langage de programmation. La m\u00e9thode r\u00e9cursive est plus \u00e9l\u00e9gante et lisible et \u00e9vite d'utiliser de nombreuses structures it\u00e9ratives. Elle est \u00e9galement tr\u00e8s utile pour concevoir des structures de donn\u00e9es complexes comme les listes, les arbres et les graphes. L'inconv\u00e9nient le plus important de cette m\u00e9thode, est qu'une fois impl\u00e9ment\u00e9e dans un langage de programmation, elle est tr\u00e8s gourmande en ressource m\u00e9moire. Du fait que l'on empile, tous les appels r\u00e9cursifs, des d\u00e9bordements de capacit\u00e9 peuvent se produire lorsque la pile est pleine. R\u00e9cursivit\u00e9 crois\u00e9e # Dans cette m\u00e9thode r\u00e9cursive, il arrive qu'une fonction appelle une autre fonction qui appelle elle-m\u00eame la premi\u00e8re, ce cas est appel\u00e9e r\u00e9cursivit\u00e9 crois\u00e9e. Prenons, par exemple deux fonctions ci-dessous permettant de tester si un nombre est pair ou impair comme dans le programme pair_impair.py . paire_impaire.py 1 2 3 4 5 6 7 8 9 10 11 def Pair ( n ): if n == 0 : return True else : return Impair ( n - 1 ) def Impair ( n ): if n == 0 : return False else : return Pair ( n - 1 ) Ce n'est \u00e9videmment pas la m\u00e9thode la plus simple mais elle fonctionne. On aurait pu par exemple tester le reste de la division euclidienne de n par deux. R\u00e9cursivit\u00e9 multiple # Il existe un autre cas particulier o\u00f9 la fonction s'appelle plusieurs fois. On parle alors de r\u00e9cursivit\u00e9 multiple. C'est le cas par exemple dans le cas du calcul des coefficients binomiaux. On peut donner une rappel math\u00e9matique de ces coefficients binomiaux qui sont caract\u00e9ris\u00e9s par la d\u00e9finition suivante pour toute valeur enti\u00e8re de \\(n\\) et \\(k\\) telles que $0\\leq k\\leq n $: \\[\\begin{pmatrix} n \\\\ k \\end{pmatrix}= \\left \\{ \\begin{array}{l l l} 1 & si &k=0 \\\\ 1 & si & k=n\\\\ \\begin{pmatrix} n-1 \\\\ k-1 \\end{pmatrix}+\\begin{pmatrix} n-1 \\\\ k \\end{pmatrix}& sinon \\end{array} \\right . \\] Alors on peut donner la fonction algorithmique de ce programme. bino.py 1 2 3 4 5 Fonction CoeffBinomial ( n , k ): Si k == 0 OU k == n : Retourner 1 Sinon : Retourner CoeffBinomial ( n - 1 , k - 1 ) + CoeffBinomial ( n - 1 , k ) Exercices # Exercice : En math\u00e9matiques, la suite de Fibonacci est une suite d'entiers dans laquelle chaque terme est la somme des deux termes qui le pr\u00e9c\u00e8dent. Not\u00e9e \\(F_{n}\\) , elle est d\u00e9finie par \\({\\displaystyle F_{0}=0,\\quad F_{1}=1}\\) , et \\({\\displaystyle F_{n}=F_{n-1}+F_{n-2}}\\) pour \\({\\displaystyle n\\geqslant 2}\\) . Les termes de cette suite sont appel\u00e9s nombres de Fibonacci et forment la suite A000045 de l'OEIS : F0 F1 F2 F3 F4 F5 F6 F7 F8 F9 F10 F1 F12 F13 F14 F15 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 Repr\u00e9sentation g\u00e9om\u00e9trique de la fraction continue de \u03c6 faisant appara\u00eetre les nombres de la suite de Fibonacci. Cette suite est li\u00e9e au nombre d'or, \u03c6 (phi) : ce nombre intervient dans l'expression du terme g\u00e9n\u00e9ral de la suite. Inversement, la suite de Fibonacci intervient dans l'\u00e9criture des r\u00e9duites de l'expression de \u03c6 en fraction continue : les quotients de deux termes cons\u00e9cutifs de la suite de Fibonacci sont les meilleures approximations du nombre d'or. Le but de cet exercice est de r\u00e9aliser une fonction qui calcule la valeur de de la suite de Fibonacci pour un rang n. L'objectif de cet exercice est de r\u00e9aliser la fractale de Von Koch \u00e0 l'aide du module python \\textit{turtle}. \\textbf{Il faudra lire attentivement la documentation}. Vous ferez cet exercice dans le cadre du Projet 2. Exercice : Une fractale est une sorte de courbe math\u00e9matique un peu complexe riche en d\u00e9tail, et qui poss\u00e8de une propri\u00e9t\u00e9 int\u00e9ressante visuellement : lorsque l'on regarde des d\u00e9tails de petite taille, on retrouve des formes correspondant aux d\u00e9tails de plus grande taille (auto-similarit\u00e9). Cela nous rappelle \u00e9trangement la r\u00e9cursivit\u00e9 ! La premi\u00e8re courbe \u00e0 tracer a \u00e9t\u00e9 imagin\u00e9e en 1904 par le math\u00e9maticien su\u00e9dois Niels Fabian Helge Von Koch. Le principe est simple : on divise un segment initial en trois morceaux, et on construit un triangle \u00e9quilat\u00e9ral sans base au-dessus du morceau central. On r\u00e9it\u00e8re le processus \\(n\\) fois, \\(n\\) est appel\u00e9 l'ordre. Dans la figure suivante, on voit les ordres 0,1,2 et 3 de cette fractale. Proposer une fonction r\u00e9cursive permettant de dessiner la fractale de Von Koch en lui donnant comme param\u00e8tre l'ordre et la longueur du segment initial. Le flocon de Koch s'obtient de la m\u00eame fa\u00e7on que la fractale pr\u00e9c\u00e9dente, en partant d'un triangle \u00e9quilat\u00e9ral au lieu d'un segment de droite, et en effectuant les modifications en orientant les triangles vers l'ext\u00e9rieur. Proposer une fonction permettant de faire le flocon de Koch complet \u00e0 partir de la fonction r\u00e9alis\u00e9e pr\u00e9c\u00e9dente.","title":"Cours"},{"location":"Terminale/Programmation/Recursivite/recursivite/#recursivite","text":"","title":"R\u00e9cursivit\u00e9"},{"location":"Terminale/Programmation/Recursivite/recursivite/#contexte-la-somme-des-premiers-entiers","text":"Pour d\u00e9finir la somme des \\(n\\) premiers entiers, on a l'habitude de d'\u00e9crire la formule suivante : \\[ 0 + 1 + 2 + 3 + .... + n \\] Cette formulation peut nous appara\u00eetre simple et intuitive. Exercice : \u00c9crire une fonction somme(n) qui retourne la somme des \\(n\\) premiers entiers. Or ce code n'est pas directement li\u00e9 \u00e0 la formule pr\u00e9c\u00e9dente. En effet, il n'y a rien dans cette formule qui laisse penser qu'il faille une variable interm\u00e9diaire pour calculer cette somme. C'est pourquoi, nous allons tenter de d\u00e9finir autrement cette fonction : \\[ somme(n)= \\left \\{ \\begin{array}{l l l} 0 & si &n=0 \\\\ n+somme(n-1) & si & n>0 \\end{array} \\right . \\] Cette d\u00e9finition nous indique ce que vaut somme ( n ) pour un entier \\(n\\) quelconque, selon que \\(n\\) soit \u00e9gal \u00e0 0 ou strictement positif. Ainsi, pour, pour le cas o\u00f9 \\(n\\) =0, la valeur de somme(n) vaut 0, et dans le cas o\u00f9 \\(n\\) est strictement positif, la valeur de somme(n) est \\(n+somme(n-1)\\) . Par exemple, voici ci-dessous les valeurs de 'somme(n)', pour \\(n\\) valant 0,1,2 et 3. \\[ \\begin{array}{l } somme(0)=0 \\\\ somme(1)=1+somme(0)=1+0=1 \\\\ somme(2)=2+somme(1)=2+1=3 \\end{array} \\] L'int\u00e9r\u00eat de cette formulation est qu'elle est directement programmable. En python, cela donne le programme ci-dessous. somme_rec.py 1 2 3 4 5 def somme ( n : int ) -> int : if n == 0 : return 0 else : return n + somme ( n - 1 )","title":"Contexte : la somme des premiers entiers"},{"location":"Terminale/Programmation/Recursivite/recursivite/#recursivite_1","text":"D\u00e9finition : On dit qu'un sous-programme (proc\u00e9dure ou fonction) est r\u00e9cursif s'il s'appelle lui-m\u00eame Il est indispensable de pr\u00e9voir une condition d'arr\u00eat \u00e0 la r\u00e9cursion sinon la fonction va s'appeler une infinit\u00e9 de fois. Dans la pratique, la pile qui stocke les appels r\u00e9cursifs est de taille finie. Une fois qu'elle est pleine, le programme ne r\u00e9pondra plus Exercice : Donner une d\u00e9finition r\u00e9cursive qui correspond au calcul de la fonction factorielle \\(n!\\) d\u00e9finie par \\(n!=1\\times 2 \\times 3 \\times ...\\times n\\) si \\(n>0\\) et \\(0!=1\\) . \u00c9crire \u00e9galement le code d'une fonction fact(n) qui impl\u00e9mente cette d\u00e9finition. Pour les plus rapides, \u00e9crire la version it\u00e9rative.} Exercice : \u00c9crire une fonction r\u00e9cursive boucle(i,k) qui affiche les entiers entre i et k . Par exemple, boucle(0,3) affiche 0,1,2,3. Pour les plus rapides, \u00e9crire la version it\u00e9rative. Exercice : La m\u00e9thode du paysan russe est un tr\u00e8s vieil algorithme de multiplication de deux nombres entiers d\u00e9j\u00e0 d\u00e9crit, sous forme l\u00e9g\u00e8rement diff\u00e9rente, sur un papyrus \u00e9gyptien r\u00e9dig\u00e9 autour de 1650 avant J.-C. Il s'agissait de la principale m\u00e9thode de calcul en Europe avant l'introduction des chiffres arabes. Les ordinateurs l'ont utilis\u00e9 avant que la multiplication ne soit directement int\u00e9gr\u00e9 dans le processeur sous forme de circuit \u00e9lectronique. Sous une forme moderne, il peut \u00eatre d\u00e9crit par le programme 1. Appliquer cette fonction pour effectuer la multiplication de 105 par 253. D\u00e9tailler les \u00e9tapes dans le tableau suivant : |x | y | p | |---\u2013|----|------| |105 |253 | .... | |... |....|..... | On admet que cet algorithme repose sur les relations suivantes : $$ x y= \\left { \\begin{array}{l l l} 0 & si &x=0 \\ (x//2) (y+y) & si & x\\ est\\ pair\\ (x//2)*(y+y)+y & si & x\\ est\\ impair\\ \\end{array} \\right . $$ Proposer une version r\u00e9cursive de cet algorithme. 1 2 3 4 5 6 7 8 Fonction multiplication ( x , y ): p = 0 TANT QUE x > 0 : Si x est impair : p = p + y x = x // 2 y = y + y Retourner p","title":"R\u00e9cursivit\u00e9"},{"location":"Terminale/Programmation/Recursivite/recursivite/#fonctionnement-dune-fonction-recursive","text":"Par exemple, l'\u00e9valuation de l'appel \u00e0 somme(3) du programme somme_rec peut se repr\u00e9senter de la mani\u00e8re suivante : o\u00f9 on indique uniquement pour chaque appel \u00e0 somme(n) l'instruction qui est ex\u00e9cut\u00e9e apr\u00e8s le test n==0 de la conditionnelle. Cette mani\u00e8re de repr\u00e9senter l'ex\u00e9cution d'un programme en indiquant les diff\u00e9rents appels effectu\u00e9s est appel\u00e9e un arbre d'appels Ainsi, pour calculer la valeur renvoy\u00e9e par somme(3) , il faut tout d'abord appeler somme(2) . Cet appel va lui-m\u00eame d\u00e9clencher un appel \u00e0 somme(1) , qui \u00e0 son tour n\u00e9cessite un appel \u00e0 somme(0) . Ce dernier appel se termine en renvoyant la valeur 0. Le calcul de somme(3) se fait donc \"\u00e0 rebours\". Une fois que l'appel \u00e0 somme(0) }` est termin\u00e9, c'est-\u00e0-dire que la valeur 0 a \u00e9t\u00e9 renvoy\u00e9e, l'arbre d'appels a la forme suivante. A cet instant, l'appel \u00e0 somme(1) }` peut alors se terminer et renvoyer le r\u00e9sultat de la somme 1+0. L'arbre d'appels est alors le suivant : Enfin, l'appel \u00e0 somme(2) peut lui-m\u00eame renvoyer la valeur 2+1 comme r\u00e9sultat, ce qui permet \u00e0 somme(3) de se terminer en renvoyant le r\u00e9sultat 3+3. On obtient bien au final la valeur 6 attendue.","title":"Fonctionnement d'une fonction r\u00e9cursive"},{"location":"Terminale/Programmation/Recursivite/recursivite/#recursivite-ou-iterativite","text":"Lorsque l'on programme des fonctions qui ne s'appellent pas, on dit que l'on programme de mani\u00e8re it\u00e9rative. Il est toujours possible de transformer une fonction it\u00e9rative en fonction r\u00e9cursive et vice et versa. La m\u00e9thode it\u00e9rative nous est plus famili\u00e8re et est plus rapide une fois le code impl\u00e9ment\u00e9 dans un langage de programmation. La m\u00e9thode r\u00e9cursive est plus \u00e9l\u00e9gante et lisible et \u00e9vite d'utiliser de nombreuses structures it\u00e9ratives. Elle est \u00e9galement tr\u00e8s utile pour concevoir des structures de donn\u00e9es complexes comme les listes, les arbres et les graphes. L'inconv\u00e9nient le plus important de cette m\u00e9thode, est qu'une fois impl\u00e9ment\u00e9e dans un langage de programmation, elle est tr\u00e8s gourmande en ressource m\u00e9moire. Du fait que l'on empile, tous les appels r\u00e9cursifs, des d\u00e9bordements de capacit\u00e9 peuvent se produire lorsque la pile est pleine.","title":"R\u00e9cursivit\u00e9 ou it\u00e9rativit\u00e9 ?"},{"location":"Terminale/Programmation/Recursivite/recursivite/#recursivite-croisee","text":"Dans cette m\u00e9thode r\u00e9cursive, il arrive qu'une fonction appelle une autre fonction qui appelle elle-m\u00eame la premi\u00e8re, ce cas est appel\u00e9e r\u00e9cursivit\u00e9 crois\u00e9e. Prenons, par exemple deux fonctions ci-dessous permettant de tester si un nombre est pair ou impair comme dans le programme pair_impair.py . paire_impaire.py 1 2 3 4 5 6 7 8 9 10 11 def Pair ( n ): if n == 0 : return True else : return Impair ( n - 1 ) def Impair ( n ): if n == 0 : return False else : return Pair ( n - 1 ) Ce n'est \u00e9videmment pas la m\u00e9thode la plus simple mais elle fonctionne. On aurait pu par exemple tester le reste de la division euclidienne de n par deux.","title":"R\u00e9cursivit\u00e9 crois\u00e9e"},{"location":"Terminale/Programmation/Recursivite/recursivite/#recursivite-multiple","text":"Il existe un autre cas particulier o\u00f9 la fonction s'appelle plusieurs fois. On parle alors de r\u00e9cursivit\u00e9 multiple. C'est le cas par exemple dans le cas du calcul des coefficients binomiaux. On peut donner une rappel math\u00e9matique de ces coefficients binomiaux qui sont caract\u00e9ris\u00e9s par la d\u00e9finition suivante pour toute valeur enti\u00e8re de \\(n\\) et \\(k\\) telles que $0\\leq k\\leq n $: \\[\\begin{pmatrix} n \\\\ k \\end{pmatrix}= \\left \\{ \\begin{array}{l l l} 1 & si &k=0 \\\\ 1 & si & k=n\\\\ \\begin{pmatrix} n-1 \\\\ k-1 \\end{pmatrix}+\\begin{pmatrix} n-1 \\\\ k \\end{pmatrix}& sinon \\end{array} \\right . \\] Alors on peut donner la fonction algorithmique de ce programme. bino.py 1 2 3 4 5 Fonction CoeffBinomial ( n , k ): Si k == 0 OU k == n : Retourner 1 Sinon : Retourner CoeffBinomial ( n - 1 , k - 1 ) + CoeffBinomial ( n - 1 , k )","title":"R\u00e9cursivit\u00e9 multiple"},{"location":"Terminale/Programmation/Recursivite/recursivite/#exercices","text":"Exercice : En math\u00e9matiques, la suite de Fibonacci est une suite d'entiers dans laquelle chaque terme est la somme des deux termes qui le pr\u00e9c\u00e8dent. Not\u00e9e \\(F_{n}\\) , elle est d\u00e9finie par \\({\\displaystyle F_{0}=0,\\quad F_{1}=1}\\) , et \\({\\displaystyle F_{n}=F_{n-1}+F_{n-2}}\\) pour \\({\\displaystyle n\\geqslant 2}\\) . Les termes de cette suite sont appel\u00e9s nombres de Fibonacci et forment la suite A000045 de l'OEIS : F0 F1 F2 F3 F4 F5 F6 F7 F8 F9 F10 F1 F12 F13 F14 F15 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 Repr\u00e9sentation g\u00e9om\u00e9trique de la fraction continue de \u03c6 faisant appara\u00eetre les nombres de la suite de Fibonacci. Cette suite est li\u00e9e au nombre d'or, \u03c6 (phi) : ce nombre intervient dans l'expression du terme g\u00e9n\u00e9ral de la suite. Inversement, la suite de Fibonacci intervient dans l'\u00e9criture des r\u00e9duites de l'expression de \u03c6 en fraction continue : les quotients de deux termes cons\u00e9cutifs de la suite de Fibonacci sont les meilleures approximations du nombre d'or. Le but de cet exercice est de r\u00e9aliser une fonction qui calcule la valeur de de la suite de Fibonacci pour un rang n. L'objectif de cet exercice est de r\u00e9aliser la fractale de Von Koch \u00e0 l'aide du module python \\textit{turtle}. \\textbf{Il faudra lire attentivement la documentation}. Vous ferez cet exercice dans le cadre du Projet 2. Exercice : Une fractale est une sorte de courbe math\u00e9matique un peu complexe riche en d\u00e9tail, et qui poss\u00e8de une propri\u00e9t\u00e9 int\u00e9ressante visuellement : lorsque l'on regarde des d\u00e9tails de petite taille, on retrouve des formes correspondant aux d\u00e9tails de plus grande taille (auto-similarit\u00e9). Cela nous rappelle \u00e9trangement la r\u00e9cursivit\u00e9 ! La premi\u00e8re courbe \u00e0 tracer a \u00e9t\u00e9 imagin\u00e9e en 1904 par le math\u00e9maticien su\u00e9dois Niels Fabian Helge Von Koch. Le principe est simple : on divise un segment initial en trois morceaux, et on construit un triangle \u00e9quilat\u00e9ral sans base au-dessus du morceau central. On r\u00e9it\u00e8re le processus \\(n\\) fois, \\(n\\) est appel\u00e9 l'ordre. Dans la figure suivante, on voit les ordres 0,1,2 et 3 de cette fractale. Proposer une fonction r\u00e9cursive permettant de dessiner la fractale de Von Koch en lui donnant comme param\u00e8tre l'ordre et la longueur du segment initial. Le flocon de Koch s'obtient de la m\u00eame fa\u00e7on que la fractale pr\u00e9c\u00e9dente, en partant d'un triangle \u00e9quilat\u00e9ral au lieu d'un segment de droite, et en effectuant les modifications en orientant les triangles vers l'ext\u00e9rieur. Proposer une fonction permettant de faire le flocon de Koch complet \u00e0 partir de la fonction r\u00e9alis\u00e9e pr\u00e9c\u00e9dente.","title":"Exercices"},{"location":"Terminale/Struct_donnees/dictionnaires/","text":"Les dictionnaires # Les dictionnaires # D\u00e9finition # Un dictionnaire (aussi appel\u00e9 tableau associatif) est une structure de donn\u00e9es qui permet d\u2019as- socier une valeur \u00e0 une cl\u00e9. Cette cl\u00e9 peut \u00eatre un mot ou un entier. l\u2019ensemble cl\u00e9-valeur est appel\u00e9 entr\u00e9e. Exemple : Interface des dictionnaires # Voici les op\u00e9rations que l\u2019on peut effectuer sur le type abstrait dictionnaire : ajout() : on associe une nouvelle valeur \u00e0 une nouvelle cl\u00e9 modif () : on modifie un couple cl\u00e9 :valeur en rempla\u00e7ant la valeur courante par une autre valeur (la cl\u00e9 restant identique) suppr() on supprime une cl\u00e9 (et donc la valeur qui lui est associ\u00e9e) rech() on recherche une valeur \u00e0 l\u2019aide de la cl\u00e9 associ\u00e9e \u00e0 cette valeur. Exemples : Soit le dictionnaire D compos\u00e9 des couples : cl\u00e9 : valeur : suivants => prenom : Kevin, nom : Durand, date-naissance : 17-05-2005. Pour chaque exemple ci-dessous on repart du dictionnaire d\u2019origine : ajout(D, tel : 06060606) ; le dictionnaire D est maintenant compos\u00e9 des couples suivants : prenom : Kevin, nom : Durand, date-naissance : 17-05-2005, tel : 06060606 modif (D, nom : Dupont) ; le dictionnaire D est maintenant compos\u00e9 des couples suivants : prenom : Kevin, nom :Dupont, date-naissance :17-05-2005 suppr(D, date \u2212 naissance) ; le dictionnaire D est maintenant compos\u00e9 des couples suivants : prenom : Kevin, nom :Durand rech(D, prenom) ; la fonction retourne Kevin Impl\u00e9mentation # L\u2019impl\u00e9mentation des dictionnaires dans les langages de programmation peut se faire \u00e0 l\u2019aide des tables de hachage. Les tables de hachages ainsi que les fonctions de hachages qui sont utilis\u00e9es pour construire les tables de hachages, ne sont pas au programme de NSI. Cependant, l\u2019utilisation des fonctions de hachages est omnipr\u00e9sente en informatique, il serait donc bon, pour votre \"culture g\u00e9n\u00e9rale informatique\", de connaitre le principe des fonctions de hachages. Pour avoir quelques id\u00e9es sur le principe des tables de hachages, je vous recommande le visionnage de cette vid\u00e9o : wandida : les tables de hachage Si vous avez visionn\u00e9 la vid\u00e9o de wandida, vous avez d\u00e9j\u00e0 compris que l\u2019algorithme de recherche dans une table de hachage a une complexit\u00e9 O(1) (le temps de recherche ne d\u00e9pend pas du nombre d\u2019\u00e9l\u00e9ments pr\u00e9sents dans la table de hachage), alors que la complexit\u00e9 de l\u2019algorithme de recherche dans un tableau non tri\u00e9 est O(n). Comme l\u2019impl\u00e9mentation des dictionnaires s\u2019appuie sur les tables de hachage, on peut dire que l\u2019algorithme de recherche d\u2019un \u00e9l\u00e9ment dans un dictionnaire a une complexit\u00e9 O(1) alors que l\u2019algorithme de recherche d\u2019un \u00e9l\u00e9ment dans un tableau non tri\u00e9 a une complexit\u00e9 O(n). Exercices # Pour faire les exercices suivants , vous pouvez : le cours sur les dictionnaires de premi\u00e8re (accessible sur moodle dans la rubriqueDictionnaire) ; soit consulter le site suivant . Exercice 1 : Pr\u00e9ciser quelle est la structure de donn\u00e9e \u00e0 privil\u00e9gier pour chacune de ces taches : Repr\u00e9senter un r\u00e9pertoire t\u00e9l\u00e9phonique. Stocker l'historique des actions effectu\u00e9es dans un logiciel et disposer d'une commande Annuler. Envoyer des fichiers au serveur impression. On souhaite stocker un texte tr\u00e8s long que l'on souhaite pouvoir modifier Exercice 2 : Dans chacun des cas suivants, d\u00e9terminez quelle structure de donn\u00e9es est la plus adapt\u00e9e : G\u00e9rer le flux des personnes arrivant \u00e0 la caisse d'allocations familiales ; Mise en place d'un m\u00e9canisme annuler/refaire pour un traitement de texte ; Lors d'une partie \u00e9chec, on veut enregistrer l'ensemble des coups jou\u00e9s et pouvoir les consulter. Exercice 3 : Les r\u00e9sultats d'un vote ayant trois issues possibles 'A', 'B' et 'C' sont stock\u00e9s dans un tableau. Exemple : urne = [ 'A' , 'A' , 'A' , 'B' , 'C' , 'B' , 'C' , 'B' , 'C' , 'B' ] La fonction depouille doit permettre de compter le nombre de votes exprim\u00e9s pour chaque artiste. Elle prend en param\u00e8tre un tableau et renvoie le r\u00e9sultat dans un dictionnaire dont les cl\u00e9s sont les noms des artistes et les valeurs le nombre de votes en leur faveur. La fonction vainqueur doit d\u00e9signer le nom du ou des gagnants. Elle prend en param\u00e8tre un dictionnaire dont la structure est celle du dictionnaire renvoy\u00e9 par la fonction depouille et renvoie un tableau. Ce tableau peut donc contenir plusieurs \u00e9l\u00e9ments s\u2019il y a des artistes ex- aequo. Compl\u00e9ter les fonctions depouille et vainqueur ci-apr\u00e8s pour qu\u2019elles renvoient les r\u00e9sultats attendus. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 urne = [ 'A' , 'A' , 'A' , 'B' , 'C' , 'B' , 'C' , 'B' , 'C' , 'B' ] def depouille ( urne ): resultat = ... for bulletin in urne : if ... : resultat [ bulletin ] = resultat [ bulletin ] + 1 else : ... return resultat def vainqueur ( election ): vainqueur = '' nmax = 0 for candidat in election : if ... > ... : nmax = ... vainqueur = candidat liste_finale = [ nom for nom in election if election [ nom ] == ... ] return ... Exemples d\u2019utilisation : >>> election = depouille(urne) >>> election {'A': 3, 'B': 4, 'C': 3} >>> vainqueur(election) ['B']","title":"Dictionnaires"},{"location":"Terminale/Struct_donnees/dictionnaires/#les-dictionnaires","text":"","title":"Les dictionnaires"},{"location":"Terminale/Struct_donnees/dictionnaires/#les-dictionnaires_1","text":"","title":"Les dictionnaires"},{"location":"Terminale/Struct_donnees/dictionnaires/#definition","text":"Un dictionnaire (aussi appel\u00e9 tableau associatif) est une structure de donn\u00e9es qui permet d\u2019as- socier une valeur \u00e0 une cl\u00e9. Cette cl\u00e9 peut \u00eatre un mot ou un entier. l\u2019ensemble cl\u00e9-valeur est appel\u00e9 entr\u00e9e. Exemple :","title":"D\u00e9finition"},{"location":"Terminale/Struct_donnees/dictionnaires/#interface-des-dictionnaires","text":"Voici les op\u00e9rations que l\u2019on peut effectuer sur le type abstrait dictionnaire : ajout() : on associe une nouvelle valeur \u00e0 une nouvelle cl\u00e9 modif () : on modifie un couple cl\u00e9 :valeur en rempla\u00e7ant la valeur courante par une autre valeur (la cl\u00e9 restant identique) suppr() on supprime une cl\u00e9 (et donc la valeur qui lui est associ\u00e9e) rech() on recherche une valeur \u00e0 l\u2019aide de la cl\u00e9 associ\u00e9e \u00e0 cette valeur. Exemples : Soit le dictionnaire D compos\u00e9 des couples : cl\u00e9 : valeur : suivants => prenom : Kevin, nom : Durand, date-naissance : 17-05-2005. Pour chaque exemple ci-dessous on repart du dictionnaire d\u2019origine : ajout(D, tel : 06060606) ; le dictionnaire D est maintenant compos\u00e9 des couples suivants : prenom : Kevin, nom : Durand, date-naissance : 17-05-2005, tel : 06060606 modif (D, nom : Dupont) ; le dictionnaire D est maintenant compos\u00e9 des couples suivants : prenom : Kevin, nom :Dupont, date-naissance :17-05-2005 suppr(D, date \u2212 naissance) ; le dictionnaire D est maintenant compos\u00e9 des couples suivants : prenom : Kevin, nom :Durand rech(D, prenom) ; la fonction retourne Kevin","title":"Interface des dictionnaires"},{"location":"Terminale/Struct_donnees/dictionnaires/#implementation","text":"L\u2019impl\u00e9mentation des dictionnaires dans les langages de programmation peut se faire \u00e0 l\u2019aide des tables de hachage. Les tables de hachages ainsi que les fonctions de hachages qui sont utilis\u00e9es pour construire les tables de hachages, ne sont pas au programme de NSI. Cependant, l\u2019utilisation des fonctions de hachages est omnipr\u00e9sente en informatique, il serait donc bon, pour votre \"culture g\u00e9n\u00e9rale informatique\", de connaitre le principe des fonctions de hachages. Pour avoir quelques id\u00e9es sur le principe des tables de hachages, je vous recommande le visionnage de cette vid\u00e9o : wandida : les tables de hachage Si vous avez visionn\u00e9 la vid\u00e9o de wandida, vous avez d\u00e9j\u00e0 compris que l\u2019algorithme de recherche dans une table de hachage a une complexit\u00e9 O(1) (le temps de recherche ne d\u00e9pend pas du nombre d\u2019\u00e9l\u00e9ments pr\u00e9sents dans la table de hachage), alors que la complexit\u00e9 de l\u2019algorithme de recherche dans un tableau non tri\u00e9 est O(n). Comme l\u2019impl\u00e9mentation des dictionnaires s\u2019appuie sur les tables de hachage, on peut dire que l\u2019algorithme de recherche d\u2019un \u00e9l\u00e9ment dans un dictionnaire a une complexit\u00e9 O(1) alors que l\u2019algorithme de recherche d\u2019un \u00e9l\u00e9ment dans un tableau non tri\u00e9 a une complexit\u00e9 O(n).","title":"Impl\u00e9mentation"},{"location":"Terminale/Struct_donnees/dictionnaires/#exercices","text":"Pour faire les exercices suivants , vous pouvez : le cours sur les dictionnaires de premi\u00e8re (accessible sur moodle dans la rubriqueDictionnaire) ; soit consulter le site suivant . Exercice 1 : Pr\u00e9ciser quelle est la structure de donn\u00e9e \u00e0 privil\u00e9gier pour chacune de ces taches : Repr\u00e9senter un r\u00e9pertoire t\u00e9l\u00e9phonique. Stocker l'historique des actions effectu\u00e9es dans un logiciel et disposer d'une commande Annuler. Envoyer des fichiers au serveur impression. On souhaite stocker un texte tr\u00e8s long que l'on souhaite pouvoir modifier Exercice 2 : Dans chacun des cas suivants, d\u00e9terminez quelle structure de donn\u00e9es est la plus adapt\u00e9e : G\u00e9rer le flux des personnes arrivant \u00e0 la caisse d'allocations familiales ; Mise en place d'un m\u00e9canisme annuler/refaire pour un traitement de texte ; Lors d'une partie \u00e9chec, on veut enregistrer l'ensemble des coups jou\u00e9s et pouvoir les consulter. Exercice 3 : Les r\u00e9sultats d'un vote ayant trois issues possibles 'A', 'B' et 'C' sont stock\u00e9s dans un tableau. Exemple : urne = [ 'A' , 'A' , 'A' , 'B' , 'C' , 'B' , 'C' , 'B' , 'C' , 'B' ] La fonction depouille doit permettre de compter le nombre de votes exprim\u00e9s pour chaque artiste. Elle prend en param\u00e8tre un tableau et renvoie le r\u00e9sultat dans un dictionnaire dont les cl\u00e9s sont les noms des artistes et les valeurs le nombre de votes en leur faveur. La fonction vainqueur doit d\u00e9signer le nom du ou des gagnants. Elle prend en param\u00e8tre un dictionnaire dont la structure est celle du dictionnaire renvoy\u00e9 par la fonction depouille et renvoie un tableau. Ce tableau peut donc contenir plusieurs \u00e9l\u00e9ments s\u2019il y a des artistes ex- aequo. Compl\u00e9ter les fonctions depouille et vainqueur ci-apr\u00e8s pour qu\u2019elles renvoient les r\u00e9sultats attendus. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 urne = [ 'A' , 'A' , 'A' , 'B' , 'C' , 'B' , 'C' , 'B' , 'C' , 'B' ] def depouille ( urne ): resultat = ... for bulletin in urne : if ... : resultat [ bulletin ] = resultat [ bulletin ] + 1 else : ... return resultat def vainqueur ( election ): vainqueur = '' nmax = 0 for candidat in election : if ... > ... : nmax = ... vainqueur = candidat liste_finale = [ nom for nom in election if election [ nom ] == ... ] return ... Exemples d\u2019utilisation : >>> election = depouille(urne) >>> election {'A': 3, 'B': 4, 'C': 3} >>> vainqueur(election) ['B']","title":"Exercices"},{"location":"Terminale/Struct_donnees/graphe/","text":"Les graphes # Introduction # Au milieu du XX \u00e8me si\u00e8cle, le physicien hongrois Eug\u00e8ne Wigner parle de \"la d\u00e9raisonnable efficacit\u00e9 des math\u00e9matiques dans les sciences de la nature\". La mod\u00e9lisation math\u00e9matique facilite la compr\u00e9hension d\u2019un probl\u00e8me car elle d\u00e9termine un seul vocabulaire formel pour diff\u00e9rentes situations, et elle permet de trouver une m\u00e9thode de r\u00e9solution automatique via un programme informatique. Le mod\u00e8le math\u00e9matique que nous allons voir dans ce chapitre est le graphe. On utilise les graphes dans de nombreuses situations : les r\u00e9seaux de communication ( internet, t\u00e9l\u00e9phonie) ; les r\u00e9seaux sociaux ; les circuits \u00e9lectriques ; les bases de donn\u00e9es relationnelles ; le codage ; la hi\u00e9rarchie des fichiers informatiques ; la repr\u00e9sentation des mol\u00e9cules ; en biologie pour la repr\u00e9sentation de la s\u00e9quence ARN. Graphe non-orient\u00e9s # Un premier exemple # Imaginez un r\u00e9seau social ayant 6 abonn\u00e9s : Jules, Simon, Arthur, Jean, Lucien, et Maxime o\u00f9 : Jules est ami avec Simon, Arthur et Jean Simon est ami avec Jules et Jean Arthur est ami avec Jules, Lucien et Jean Jean est ami avec tous les autres abonn\u00e9s Lucien est ami avec Arthur, Jean et Maxime Maxime est ami avec Lucien et Jean La description de ce r\u00e9seau social, malgr\u00e9 son faible nombre d\u2019abonn\u00e9s, est d\u00e9j\u00e0 quelque peu r\u00e9barbative. Alors imaginez cette m\u00eame description avec un r\u00e9seau social comportant des millions d\u2019abonn\u00e9s ! Il existe un moyen plus \"visuel\" pour repr\u00e9senter ce r\u00e9seau social : on peut repr\u00e9senter chaque abonn\u00e9 par un cercle (avec le nom de l\u2019abonn\u00e9 situ\u00e9 dans le cercle) et chaque relation \"X est ami avec Y\" par un segment de droite reliant X et Y (\"X est ami avec Y\" et \"Y est ami avec X\" \u00e9tant repr\u00e9sent\u00e9 par le m\u00eame segment de droite). En mod\u00e9lisant ces pr\u00e9noms par A,B,C,D,E et F, on obtient avec le r\u00e9seau social d\u00e9crit ci-dessus : Ce genre de figure s\u2019appelle un graphe non orient\u00e9s. Les graphes sont des objets math\u00e9matiques tr\u00e8s utilis\u00e9s, notamment en informatique. Les cercles sont appel\u00e9s des sommets et les segments de droites qui relient 2 sommets des ar\u00eates. Plus formellement on dira qu\u2019un graphe G est un couple G = (V, E) avec V un ensemble de sommets et E un ensemble d\u2019ar\u00eates Exercice 1 : Construisez un graphe de r\u00e9seau social \u00e0 partir des informations suivantes : A est ami avec B et E B est ami avec A et C C est ami avec B,F et D D est ami avec C,F et E E est ami avec A,D et F F est ami avec C, D et E Vocabulaire des graphes non-orient\u00e9s # On note x-y l\u2019ar\u00eate (x-y) dans un graphe non orient\u00e9 o\u00f9 x et y sont les deux extr\u00e9mit\u00e9s. Deux ar\u00eates d\u2019un graphe sont dites adjacentes si elles ont au moins un sommet en commun. deux sommets d\u2019un graphe non-orient\u00e9 sont dits adjacents s\u2019il existe une ar\u00eate les joignants. dans un graphe non-orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019ar\u00eate dont x est une extr\u00e9mit\u00e9. dans un graphe non-orient\u00e9, on appelle cha\u00eene toute suite de sommets cons\u00e9cutifs reli\u00e9s par des ar\u00eates. une cha\u00eene est dite \u00e9l\u00e9mentaire si elle ne comporte pas plusieurs fois le m\u00eame sommet. une cha\u00eene dont le sommet de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 cycle. un graphe non-orient\u00e9 est dit connexe quand tout sommet peut \u00eatre reli\u00e9 \u00e0 tout autre sommet par une ar\u00eate ou une suite d'ar\u00eates. Le graphe connexe est un graphe en un seul morceau. Les graphes orient\u00e9s # Un premier exemple # Les logiciels de cartographie permettant connaissant votre position gr\u00e2ce \u00e0 un r\u00e9cepteur GPS, d\u2019indiquer la route \u00e0 suivre pour se rendre \u00e0 endroit B. Comment mod\u00e9liser l\u2019ensemble des lieux et des routes ? Simplement \u00e0 l\u2019aide d\u2019un graphe ! Chaque lieu est un sommet et les routes qui relient les lieux entre eux sont des ar\u00eates. Soit les lieux suivants : A, B, C, D, E, F et G. Les diff\u00e9rents lieux sont reli\u00e9s par les routes suivantes : il existe une route entre A et C ; il existe une route entre A et B ; il existe une route entre A et D ; il existe une route entre B et F ; il existe une route entre B et E ; il existe une route entre B et G ; il existe une route entre D et G ; il existe une route entre E et F. Ici aussi, la repr\u00e9sentation sous forme de graphe s\u2019impose : Probl\u00e8me : avec cette repr\u00e9sentation du r\u00e9seau routier sous forme de graphe, il est impossible de tenir compte des routes en sens unique (par exemple il est possible d\u2019aller de A vers D mais pas de D vers A) Voici de nouvelles contraintes : il existe une route entre A et C (double sens) ; il existe une route entre A et B (sens unique B->A) ; il existe une route entre A et D (sens unique A->D) ; il existe une route entre B et F (sens unique B->F) ; il existe une route entre B et E (sens unique E->B) ; il existe une route entre B et G (double sens) ; il existe une route entre D et G (double sens) ; il existe une route entre E et F (double). Pour tenir compte de ces nouvelles contraintes, on utilisera un graphe orient\u00e9 : Dans un graphe orient\u00e9, les ar\u00eates poss\u00e8dent une orientation. Ces \"ar\u00eates orient\u00e9es\" sont souvent appel\u00e9es \"arcs\". On dira qu\u2019un graphe orient\u00e9 G est un couple G = (V,A) avec V un ensemble de sommets et A un ensemble d\u2019arcs. Vocabulaire # On note x\u2192 y l\u2019arc (x,y) dans un graph orient\u00e9 o\u00f9 x est son extr\u00e9mit\u00e9 initiale et y son extr\u00e9mit\u00e9 finale. y est le successeur de x et x est le pr\u00e9d\u00e9cesseur de y. deux arcs d\u2019un graphe sont adjacents s\u2019ils poss\u00e8dent au moins une extr\u00e9mit\u00e9 commune ; Deux sommets d\u2019un graphe orient\u00e9 sont dits adjacents s\u2019il existe un arc les joignant. Dans un graphe orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019arcs dont x est une extr\u00e9mit\u00e9. Dans un graphe orient\u00e9, on appelle chemin toute suite de sommet cons\u00e9cutifs reli\u00e9 par des arcs. Un chemin est dit \u00e9l\u00e9m\u00e9ntaire s\u2019il ne comporte pas plusieurs fois le m\u00eame sommet. Un chemin dont le somme de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 circuit. Les graphes \u00e9tiquet\u00e9s et pond\u00e9r\u00e9s # Exemple # Parfois il est int\u00e9ressant d\u2019associer aux arr\u00eates ou aux arcs, des valeurs, on parle alors de graphes pond\u00e9r\u00e9s. Si nous revenons \u00e0 notre \"graphe cartographie\", il est possible d\u2019associer \u00e0 chaque ar\u00eate la distance en Km entre les 2 lieux : Il est aussi possible d\u2019associer \u00e0 chaque ar\u00eate la dur\u00e9e du trajet entre 2 points : En fonction du choix fait par le conducteur (trajet le plus court \"en distance\" ou trajet le plus court \"en temps\"), l\u2019algorithme permettant de d\u00e9terminer le \"chemin le plus court entre 2 points\" travaillera sur le graphe \"graphe pond\u00e9r\u00e9 (Km) cartographie\" ou sur le graphe \"graphe pond\u00e9r\u00e9 (minutes) cartographie\". \u00c0 noter que le \"graphe pond\u00e9r\u00e9 (minutes) cartographie\" peut \u00e9voluer au cours du temps en fonction du trafic routier : une application comme Waze utilise les donn\u00e9es en en provenance des utilisateurs de l\u2019application afin de mettre \u00e0 jour en temps r\u00e9\u00e9l leur \"graphe pond\u00e9r\u00e9 (minutes) cartographie\". Vocabulaire # Un graphe est \u00e9tiquet\u00e9 si ses ar\u00eates (ou ses arcs) sont affect\u00e9es d'\u00e9tiquettes (mots, lettres, symboles, nombres, \u2026) Dans le cas o\u00f9 les \u00e9tiquettes sont des nombres, le graphe est dit pond\u00e9r\u00e9. Les \u00e9tiquettes sont appel\u00e9es les poids entre les sommets. Le poids du cha\u00eene (respectivement d'un chemin) est la somme des poids des ar\u00eates(respectivement des arcs) constituant la cha\u00eene (respectivement le chemin). Impl\u00e9mentation d\u2019un graphe \u00e0 l\u2019aide d\u2019une matrice d\u2019adjacence # Il existe deux m\u00e9thodes permettant d\u2019impl\u00e9menter un graphe : les matrices d\u2019adjacences et les listes d\u2019adjacences. D\u00e9finition d\u2019une matrice # Une matrice est un tableau \u00e0 double entr\u00e9e. Exemple : la matrice A ci-dessous. \\[ A =\\begin{Bmatrix} 1 & 2 & 3 & 8 & 10\\\\ 4 & 5 & 6 & 6 & 9 \\\\ 7 & 8 & 9 & 6 & 5 \\\\ \\end{Bmatrix} \\] Exemple # Voici la matrice d\u2019adjacence de ce graphe : \\[ A =\\begin{Bmatrix} 0 & 1 & 1 & 1 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 1 & 1 & 1 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 1 \\\\ 0 & 1 & 0 & 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & 1 & 0 & 1 & 0 & 0 & 0 \\\\ \\end{Bmatrix} \\] Comment construire une matrice d\u2019adjacence ? # Il faut savoir qu\u2019\u00e0 chaque ligne correspond un sommet du graphe et qu\u2019\u00e0 chaque colonne correspond aussi un sommet du graphe. \u00c0 chaque intersection ligne i-colonne j (ligne i correspond au sommet i et colonne j correspond au sommet j), on place un 1 s\u2019il existe une ar\u00eate entre le sommet i et le sommet j, et un z\u00e9ro s\u2019il n\u2019existe pas d\u2019ar\u00eate entre le sommet i et le sommet j. Il existe une ar\u00eate entre le sommet E et le sommet F, nous avons donc plac\u00e9 un 1 \u00e0 l\u2019intersection de la ligne E et de la colonne F (il en est de m\u00eame \u00e0 l\u2019intersection de la ligne F et de la colonne E) Il n\u2019existe pas d\u2019ar\u00eate entre le sommet D et le sommet C, nous avons donc plac\u00e9 un 0 \u00e0 l\u2019intersection de la ligne D et de la colonne C (il en est de m\u00eame \u00e0 l\u2019intersection de la ligne C et de la colonne D) Exercice 2 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe \"cartographie\". Exercice 3 : \u00c9tablissez la matrice d\u2019adjacence du graphe ci-dessous Matrice d\u2019adjacence pour un graphe orient\u00e9 # Le principe reste le m\u00eame : si le sommet i (ligne) est li\u00e9 au sommet j (colonne), nous avons un 1 \u00e0 l\u2019intersection (0 dans le cas contraire). Exemple : La matrice d\u2019adjacence est : \\[ A =\\begin{Bmatrix} 0 & 0 & 1 & 1 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 0 & 1 & 1 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 0 & 0 & 1 \\\\ 0 & 1 & 0 & 0 & 0 & 1 & 0 \\\\ 0 & 0 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & 1 & 0 & 1 & 0 & 0 & 0 \\\\ \\end{Bmatrix} \\] Exercice 4 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe orient\u00e9 \"cartographie\". Exercice 5 : Etablir la matrice du graphe orient\u00e9 ci-dessous. Matrice d\u2019adjacence d\u2019un graphe pond\u00e9r\u00e9 # On remplace les 1 par les valeurs li\u00e9es \u00e0 chaque arc. La matrice d\u2019adjacence est : \\[ A =\\begin{Bmatrix} 0 & 4 & 3 & 5 & 0 & 0 & 0 \\\\ 4 & 0 & 0 & 0 & 5 & 5 & 7 \\\\ 3 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 5 & 0 & 0 & 0 & 0 & 0 & 6 \\\\ 0 & 5 & 0 & 0 & 0 & 7 & 0 \\\\ 0 & 5 & 0 & 0 & 7 & 0 & 0 \\\\ 0 & 7 & 0 & 6 & 0 & 0 & 0 \\\\ \\end{Bmatrix} \\] Exercice 6 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe pond\u00e9r\u00e9 (minutes) \"cartographie\". Les listes d\u2019adjacences # Pour les graphes non-orient\u00e9s # Pour commencer, on d\u00e9finit une liste des sommets du graphe. \u00c0 chaque \u00e9l\u00e9ment de cette liste, on associe une autre liste qui contient les sommets li\u00e9 \u00e0 cet \u00e9l\u00e9ment : Reprenons l\u2019exemple du \"graphe cartographie\" : Voici la liste d\u2019adjacence de ce graphe : Pour les graphes orient\u00e9s # Pour les graphes orient\u00e9s, il est n\u00e9cessaire de d\u00e9finir 2 listes : la liste des successeurs et la liste des pr\u00e9d\u00e9cesseurs. Soit un arc allant d\u2019un sommet A vers un sommet B (fl\u00e8che de A vers B). On dira que B est un successeur de A et que A est un pr\u00e9d\u00e9cesseur de B. liste d'adjacence successeurs du graphe cartographe liste d'adjacence pr\u00e9d\u00e9cesseur du graphe cartographe","title":"Graphes"},{"location":"Terminale/Struct_donnees/graphe/#les-graphes","text":"","title":"Les graphes"},{"location":"Terminale/Struct_donnees/graphe/#introduction","text":"Au milieu du XX \u00e8me si\u00e8cle, le physicien hongrois Eug\u00e8ne Wigner parle de \"la d\u00e9raisonnable efficacit\u00e9 des math\u00e9matiques dans les sciences de la nature\". La mod\u00e9lisation math\u00e9matique facilite la compr\u00e9hension d\u2019un probl\u00e8me car elle d\u00e9termine un seul vocabulaire formel pour diff\u00e9rentes situations, et elle permet de trouver une m\u00e9thode de r\u00e9solution automatique via un programme informatique. Le mod\u00e8le math\u00e9matique que nous allons voir dans ce chapitre est le graphe. On utilise les graphes dans de nombreuses situations : les r\u00e9seaux de communication ( internet, t\u00e9l\u00e9phonie) ; les r\u00e9seaux sociaux ; les circuits \u00e9lectriques ; les bases de donn\u00e9es relationnelles ; le codage ; la hi\u00e9rarchie des fichiers informatiques ; la repr\u00e9sentation des mol\u00e9cules ; en biologie pour la repr\u00e9sentation de la s\u00e9quence ARN.","title":"Introduction"},{"location":"Terminale/Struct_donnees/graphe/#graphe-non-orientes","text":"","title":"Graphe non-orient\u00e9s"},{"location":"Terminale/Struct_donnees/graphe/#un-premier-exemple","text":"Imaginez un r\u00e9seau social ayant 6 abonn\u00e9s : Jules, Simon, Arthur, Jean, Lucien, et Maxime o\u00f9 : Jules est ami avec Simon, Arthur et Jean Simon est ami avec Jules et Jean Arthur est ami avec Jules, Lucien et Jean Jean est ami avec tous les autres abonn\u00e9s Lucien est ami avec Arthur, Jean et Maxime Maxime est ami avec Lucien et Jean La description de ce r\u00e9seau social, malgr\u00e9 son faible nombre d\u2019abonn\u00e9s, est d\u00e9j\u00e0 quelque peu r\u00e9barbative. Alors imaginez cette m\u00eame description avec un r\u00e9seau social comportant des millions d\u2019abonn\u00e9s ! Il existe un moyen plus \"visuel\" pour repr\u00e9senter ce r\u00e9seau social : on peut repr\u00e9senter chaque abonn\u00e9 par un cercle (avec le nom de l\u2019abonn\u00e9 situ\u00e9 dans le cercle) et chaque relation \"X est ami avec Y\" par un segment de droite reliant X et Y (\"X est ami avec Y\" et \"Y est ami avec X\" \u00e9tant repr\u00e9sent\u00e9 par le m\u00eame segment de droite). En mod\u00e9lisant ces pr\u00e9noms par A,B,C,D,E et F, on obtient avec le r\u00e9seau social d\u00e9crit ci-dessus : Ce genre de figure s\u2019appelle un graphe non orient\u00e9s. Les graphes sont des objets math\u00e9matiques tr\u00e8s utilis\u00e9s, notamment en informatique. Les cercles sont appel\u00e9s des sommets et les segments de droites qui relient 2 sommets des ar\u00eates. Plus formellement on dira qu\u2019un graphe G est un couple G = (V, E) avec V un ensemble de sommets et E un ensemble d\u2019ar\u00eates Exercice 1 : Construisez un graphe de r\u00e9seau social \u00e0 partir des informations suivantes : A est ami avec B et E B est ami avec A et C C est ami avec B,F et D D est ami avec C,F et E E est ami avec A,D et F F est ami avec C, D et E","title":"Un premier exemple"},{"location":"Terminale/Struct_donnees/graphe/#vocabulaire-des-graphes-non-orientes","text":"On note x-y l\u2019ar\u00eate (x-y) dans un graphe non orient\u00e9 o\u00f9 x et y sont les deux extr\u00e9mit\u00e9s. Deux ar\u00eates d\u2019un graphe sont dites adjacentes si elles ont au moins un sommet en commun. deux sommets d\u2019un graphe non-orient\u00e9 sont dits adjacents s\u2019il existe une ar\u00eate les joignants. dans un graphe non-orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019ar\u00eate dont x est une extr\u00e9mit\u00e9. dans un graphe non-orient\u00e9, on appelle cha\u00eene toute suite de sommets cons\u00e9cutifs reli\u00e9s par des ar\u00eates. une cha\u00eene est dite \u00e9l\u00e9mentaire si elle ne comporte pas plusieurs fois le m\u00eame sommet. une cha\u00eene dont le sommet de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 cycle. un graphe non-orient\u00e9 est dit connexe quand tout sommet peut \u00eatre reli\u00e9 \u00e0 tout autre sommet par une ar\u00eate ou une suite d'ar\u00eates. Le graphe connexe est un graphe en un seul morceau.","title":"Vocabulaire des graphes non-orient\u00e9s"},{"location":"Terminale/Struct_donnees/graphe/#les-graphes-orientes","text":"","title":"Les graphes orient\u00e9s"},{"location":"Terminale/Struct_donnees/graphe/#un-premier-exemple_1","text":"Les logiciels de cartographie permettant connaissant votre position gr\u00e2ce \u00e0 un r\u00e9cepteur GPS, d\u2019indiquer la route \u00e0 suivre pour se rendre \u00e0 endroit B. Comment mod\u00e9liser l\u2019ensemble des lieux et des routes ? Simplement \u00e0 l\u2019aide d\u2019un graphe ! Chaque lieu est un sommet et les routes qui relient les lieux entre eux sont des ar\u00eates. Soit les lieux suivants : A, B, C, D, E, F et G. Les diff\u00e9rents lieux sont reli\u00e9s par les routes suivantes : il existe une route entre A et C ; il existe une route entre A et B ; il existe une route entre A et D ; il existe une route entre B et F ; il existe une route entre B et E ; il existe une route entre B et G ; il existe une route entre D et G ; il existe une route entre E et F. Ici aussi, la repr\u00e9sentation sous forme de graphe s\u2019impose : Probl\u00e8me : avec cette repr\u00e9sentation du r\u00e9seau routier sous forme de graphe, il est impossible de tenir compte des routes en sens unique (par exemple il est possible d\u2019aller de A vers D mais pas de D vers A) Voici de nouvelles contraintes : il existe une route entre A et C (double sens) ; il existe une route entre A et B (sens unique B->A) ; il existe une route entre A et D (sens unique A->D) ; il existe une route entre B et F (sens unique B->F) ; il existe une route entre B et E (sens unique E->B) ; il existe une route entre B et G (double sens) ; il existe une route entre D et G (double sens) ; il existe une route entre E et F (double). Pour tenir compte de ces nouvelles contraintes, on utilisera un graphe orient\u00e9 : Dans un graphe orient\u00e9, les ar\u00eates poss\u00e8dent une orientation. Ces \"ar\u00eates orient\u00e9es\" sont souvent appel\u00e9es \"arcs\". On dira qu\u2019un graphe orient\u00e9 G est un couple G = (V,A) avec V un ensemble de sommets et A un ensemble d\u2019arcs.","title":"Un premier exemple"},{"location":"Terminale/Struct_donnees/graphe/#vocabulaire","text":"On note x\u2192 y l\u2019arc (x,y) dans un graph orient\u00e9 o\u00f9 x est son extr\u00e9mit\u00e9 initiale et y son extr\u00e9mit\u00e9 finale. y est le successeur de x et x est le pr\u00e9d\u00e9cesseur de y. deux arcs d\u2019un graphe sont adjacents s\u2019ils poss\u00e8dent au moins une extr\u00e9mit\u00e9 commune ; Deux sommets d\u2019un graphe orient\u00e9 sont dits adjacents s\u2019il existe un arc les joignant. Dans un graphe orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019arcs dont x est une extr\u00e9mit\u00e9. Dans un graphe orient\u00e9, on appelle chemin toute suite de sommet cons\u00e9cutifs reli\u00e9 par des arcs. Un chemin est dit \u00e9l\u00e9m\u00e9ntaire s\u2019il ne comporte pas plusieurs fois le m\u00eame sommet. Un chemin dont le somme de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 circuit.","title":"Vocabulaire"},{"location":"Terminale/Struct_donnees/graphe/#les-graphes-etiquetes-et-ponderes","text":"","title":"Les graphes \u00e9tiquet\u00e9s et pond\u00e9r\u00e9s"},{"location":"Terminale/Struct_donnees/graphe/#exemple","text":"Parfois il est int\u00e9ressant d\u2019associer aux arr\u00eates ou aux arcs, des valeurs, on parle alors de graphes pond\u00e9r\u00e9s. Si nous revenons \u00e0 notre \"graphe cartographie\", il est possible d\u2019associer \u00e0 chaque ar\u00eate la distance en Km entre les 2 lieux : Il est aussi possible d\u2019associer \u00e0 chaque ar\u00eate la dur\u00e9e du trajet entre 2 points : En fonction du choix fait par le conducteur (trajet le plus court \"en distance\" ou trajet le plus court \"en temps\"), l\u2019algorithme permettant de d\u00e9terminer le \"chemin le plus court entre 2 points\" travaillera sur le graphe \"graphe pond\u00e9r\u00e9 (Km) cartographie\" ou sur le graphe \"graphe pond\u00e9r\u00e9 (minutes) cartographie\". \u00c0 noter que le \"graphe pond\u00e9r\u00e9 (minutes) cartographie\" peut \u00e9voluer au cours du temps en fonction du trafic routier : une application comme Waze utilise les donn\u00e9es en en provenance des utilisateurs de l\u2019application afin de mettre \u00e0 jour en temps r\u00e9\u00e9l leur \"graphe pond\u00e9r\u00e9 (minutes) cartographie\".","title":"Exemple"},{"location":"Terminale/Struct_donnees/graphe/#vocabulaire_1","text":"Un graphe est \u00e9tiquet\u00e9 si ses ar\u00eates (ou ses arcs) sont affect\u00e9es d'\u00e9tiquettes (mots, lettres, symboles, nombres, \u2026) Dans le cas o\u00f9 les \u00e9tiquettes sont des nombres, le graphe est dit pond\u00e9r\u00e9. Les \u00e9tiquettes sont appel\u00e9es les poids entre les sommets. Le poids du cha\u00eene (respectivement d'un chemin) est la somme des poids des ar\u00eates(respectivement des arcs) constituant la cha\u00eene (respectivement le chemin).","title":"Vocabulaire"},{"location":"Terminale/Struct_donnees/graphe/#implementation-dun-graphe-a-laide-dune-matrice-dadjacence","text":"Il existe deux m\u00e9thodes permettant d\u2019impl\u00e9menter un graphe : les matrices d\u2019adjacences et les listes d\u2019adjacences.","title":"Impl\u00e9mentation d\u2019un graphe \u00e0 l\u2019aide d\u2019une matrice d\u2019adjacence"},{"location":"Terminale/Struct_donnees/graphe/#definition-dune-matrice","text":"Une matrice est un tableau \u00e0 double entr\u00e9e. Exemple : la matrice A ci-dessous. \\[ A =\\begin{Bmatrix} 1 & 2 & 3 & 8 & 10\\\\ 4 & 5 & 6 & 6 & 9 \\\\ 7 & 8 & 9 & 6 & 5 \\\\ \\end{Bmatrix} \\]","title":"D\u00e9finition d\u2019une matrice"},{"location":"Terminale/Struct_donnees/graphe/#exemple_1","text":"Voici la matrice d\u2019adjacence de ce graphe : \\[ A =\\begin{Bmatrix} 0 & 1 & 1 & 1 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 1 & 1 & 1 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 1 \\\\ 0 & 1 & 0 & 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & 1 & 0 & 1 & 0 & 0 & 0 \\\\ \\end{Bmatrix} \\]","title":"Exemple"},{"location":"Terminale/Struct_donnees/graphe/#comment-construire-une-matrice-dadjacence","text":"Il faut savoir qu\u2019\u00e0 chaque ligne correspond un sommet du graphe et qu\u2019\u00e0 chaque colonne correspond aussi un sommet du graphe. \u00c0 chaque intersection ligne i-colonne j (ligne i correspond au sommet i et colonne j correspond au sommet j), on place un 1 s\u2019il existe une ar\u00eate entre le sommet i et le sommet j, et un z\u00e9ro s\u2019il n\u2019existe pas d\u2019ar\u00eate entre le sommet i et le sommet j. Il existe une ar\u00eate entre le sommet E et le sommet F, nous avons donc plac\u00e9 un 1 \u00e0 l\u2019intersection de la ligne E et de la colonne F (il en est de m\u00eame \u00e0 l\u2019intersection de la ligne F et de la colonne E) Il n\u2019existe pas d\u2019ar\u00eate entre le sommet D et le sommet C, nous avons donc plac\u00e9 un 0 \u00e0 l\u2019intersection de la ligne D et de la colonne C (il en est de m\u00eame \u00e0 l\u2019intersection de la ligne C et de la colonne D) Exercice 2 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe \"cartographie\". Exercice 3 : \u00c9tablissez la matrice d\u2019adjacence du graphe ci-dessous","title":"Comment construire une matrice d\u2019adjacence ?"},{"location":"Terminale/Struct_donnees/graphe/#matrice-dadjacence-pour-un-graphe-oriente","text":"Le principe reste le m\u00eame : si le sommet i (ligne) est li\u00e9 au sommet j (colonne), nous avons un 1 \u00e0 l\u2019intersection (0 dans le cas contraire). Exemple : La matrice d\u2019adjacence est : \\[ A =\\begin{Bmatrix} 0 & 0 & 1 & 1 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 0 & 1 & 1 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 0 & 0 & 1 \\\\ 0 & 1 & 0 & 0 & 0 & 1 & 0 \\\\ 0 & 0 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & 1 & 0 & 1 & 0 & 0 & 0 \\\\ \\end{Bmatrix} \\] Exercice 4 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe orient\u00e9 \"cartographie\". Exercice 5 : Etablir la matrice du graphe orient\u00e9 ci-dessous.","title":"Matrice d\u2019adjacence pour un graphe orient\u00e9"},{"location":"Terminale/Struct_donnees/graphe/#matrice-dadjacence-dun-graphe-pondere","text":"On remplace les 1 par les valeurs li\u00e9es \u00e0 chaque arc. La matrice d\u2019adjacence est : \\[ A =\\begin{Bmatrix} 0 & 4 & 3 & 5 & 0 & 0 & 0 \\\\ 4 & 0 & 0 & 0 & 5 & 5 & 7 \\\\ 3 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 5 & 0 & 0 & 0 & 0 & 0 & 6 \\\\ 0 & 5 & 0 & 0 & 0 & 7 & 0 \\\\ 0 & 5 & 0 & 0 & 7 & 0 & 0 \\\\ 0 & 7 & 0 & 6 & 0 & 0 & 0 \\\\ \\end{Bmatrix} \\] Exercice 6 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe pond\u00e9r\u00e9 (minutes) \"cartographie\".","title":"Matrice d\u2019adjacence d\u2019un graphe pond\u00e9r\u00e9"},{"location":"Terminale/Struct_donnees/graphe/#les-listes-dadjacences","text":"","title":"Les listes d\u2019adjacences"},{"location":"Terminale/Struct_donnees/graphe/#pour-les-graphes-non-orientes","text":"Pour commencer, on d\u00e9finit une liste des sommets du graphe. \u00c0 chaque \u00e9l\u00e9ment de cette liste, on associe une autre liste qui contient les sommets li\u00e9 \u00e0 cet \u00e9l\u00e9ment : Reprenons l\u2019exemple du \"graphe cartographie\" : Voici la liste d\u2019adjacence de ce graphe :","title":"Pour les graphes non-orient\u00e9s"},{"location":"Terminale/Struct_donnees/graphe/#pour-les-graphes-orientes","text":"Pour les graphes orient\u00e9s, il est n\u00e9cessaire de d\u00e9finir 2 listes : la liste des successeurs et la liste des pr\u00e9d\u00e9cesseurs. Soit un arc allant d\u2019un sommet A vers un sommet B (fl\u00e8che de A vers B). On dira que B est un successeur de A et que A est un pr\u00e9d\u00e9cesseur de B. liste d'adjacence successeurs du graphe cartographe liste d'adjacence pr\u00e9d\u00e9cesseur du graphe cartographe","title":"Pour les graphes orient\u00e9s"},{"location":"Terminale/Struct_donnees/graphe_parcours/","text":"Exercices graphe # R\u00e9solution d'un labyrinthe # Pr\u00e9sentation du probl\u00e8me # Consid\u00e9rons le labyrinthe suivant : Affectons une lettre \u00e0 chaque case de ce labyrinthe. Notre objectif est de trouver comment aller de A en P . Mod\u00e9lisation par un graphe # Dessiner le graphe (dont les noeuds seront des lettres) qui mod\u00e9lise ce labyrinthe. Proposer deux \u00abformes\u00bb possibles pour ce graphe. Impl\u00e9mentation du graphe en Python # En utilisant un dictionnaire, impl\u00e9menter le graphe de ce labyrinthe. Recherche du plus court chemin # En utilisant le cours, \u00e9tablir le plus court chemin pour aller de A vers P dans ce labyrinthe. Conclusion # Sur un labyrinthe un peu plus imposant, voici l'illustration de cette m\u00e9thode (avec une autre impl\u00e9mentation ): le parcours en largeur part d\u00e9couvrir les cases dans toutes les directions. lorsque la case cherch\u00e9e (ici, la rouge) est trouv\u00e9e, on remonte \u00e0 chaque case pr\u00e9c\u00e9dente gr\u00e2ce au dictionnaire parent , et ainsi le chemin de sortie du labyrinthe est g\u00e9n\u00e9r\u00e9. Exercice : Le loup, la ch\u00e8vre,un chou et un passeur .... # Sur la rive d'un fleuve se trouvent un loup, une ch\u00e8vre, un chou et un passeur. Le probl\u00e8me consiste \u00e0 tous les faire passer sur l'autre rive \u00e0 l'aide d'une barque, men\u00e9e par le passeur,en respectant les r\u00e8gles suivantes : la ch\u00e8vre et le chou ne peuvent pas rester sur la m\u00eame rive sans le passeur; la ch\u00e8vre et le loup ne peuvent pas rester sur la m\u00eame rive sans le passeur; le passeur ne peut mettre qu'un seul \"passager\" avec lui. On d\u00e9cide de repr\u00e9senter le passeur par la lettre P,la ch\u00e8vre par la lettre C, le loup par L et le chou par X. 1) Repr\u00e9senter ce probl\u00e8me \u00e0 l'aide d'un graphe o\u00f9 les sommets sont tous les \u00e9tats possibles sur la rive de d\u00e9part (par exemple,\"PLCX\" est un sommet repr\u00e9sentant le fait que tous sont sur la rive de d\u00e9part.) 2) Trouver une solution au probl\u00e8me en indiquant chacun des d\u00e9placements (si possible une solution avec le moins de d\u00e9placements possibles).","title":"Graphes_parcours"},{"location":"Terminale/Struct_donnees/graphe_parcours/#exercices-graphe","text":"","title":"Exercices graphe"},{"location":"Terminale/Struct_donnees/graphe_parcours/#resolution-dun-labyrinthe","text":"","title":"R\u00e9solution d'un labyrinthe"},{"location":"Terminale/Struct_donnees/graphe_parcours/#presentation-du-probleme","text":"Consid\u00e9rons le labyrinthe suivant : Affectons une lettre \u00e0 chaque case de ce labyrinthe. Notre objectif est de trouver comment aller de A en P .","title":"Pr\u00e9sentation du probl\u00e8me"},{"location":"Terminale/Struct_donnees/graphe_parcours/#modelisation-par-un-graphe","text":"Dessiner le graphe (dont les noeuds seront des lettres) qui mod\u00e9lise ce labyrinthe. Proposer deux \u00abformes\u00bb possibles pour ce graphe.","title":"Mod\u00e9lisation par un graphe"},{"location":"Terminale/Struct_donnees/graphe_parcours/#implementation-du-graphe-en-python","text":"En utilisant un dictionnaire, impl\u00e9menter le graphe de ce labyrinthe.","title":"Impl\u00e9mentation du graphe en Python"},{"location":"Terminale/Struct_donnees/graphe_parcours/#recherche-du-plus-court-chemin","text":"En utilisant le cours, \u00e9tablir le plus court chemin pour aller de A vers P dans ce labyrinthe.","title":"Recherche du plus court chemin"},{"location":"Terminale/Struct_donnees/graphe_parcours/#conclusion","text":"Sur un labyrinthe un peu plus imposant, voici l'illustration de cette m\u00e9thode (avec une autre impl\u00e9mentation ): le parcours en largeur part d\u00e9couvrir les cases dans toutes les directions. lorsque la case cherch\u00e9e (ici, la rouge) est trouv\u00e9e, on remonte \u00e0 chaque case pr\u00e9c\u00e9dente gr\u00e2ce au dictionnaire parent , et ainsi le chemin de sortie du labyrinthe est g\u00e9n\u00e9r\u00e9.","title":"Conclusion"},{"location":"Terminale/Struct_donnees/graphe_parcours/#exercice-le-loup-la-chevreun-chou-et-un-passeur","text":"Sur la rive d'un fleuve se trouvent un loup, une ch\u00e8vre, un chou et un passeur. Le probl\u00e8me consiste \u00e0 tous les faire passer sur l'autre rive \u00e0 l'aide d'une barque, men\u00e9e par le passeur,en respectant les r\u00e8gles suivantes : la ch\u00e8vre et le chou ne peuvent pas rester sur la m\u00eame rive sans le passeur; la ch\u00e8vre et le loup ne peuvent pas rester sur la m\u00eame rive sans le passeur; le passeur ne peut mettre qu'un seul \"passager\" avec lui. On d\u00e9cide de repr\u00e9senter le passeur par la lettre P,la ch\u00e8vre par la lettre C, le loup par L et le chou par X. 1) Repr\u00e9senter ce probl\u00e8me \u00e0 l'aide d'un graphe o\u00f9 les sommets sont tous les \u00e9tats possibles sur la rive de d\u00e9part (par exemple,\"PLCX\" est un sommet repr\u00e9sentant le fait que tous sont sur la rive de d\u00e9part.) 2) Trouver une solution au probl\u00e8me en indiquant chacun des d\u00e9placements (si possible une solution avec le moins de d\u00e9placements possibles).","title":"Exercice : Le loup, la ch\u00e8vre,un chou et un passeur ...."},{"location":"Terminale/Struct_donnees/listes/","text":"Les listes # Introduction # Les structures lin\u00e9aires # De nombreux algorithmes \"classiques\" manipulent des structures de donn\u00e9es plus complexes que des simples nombres. Nous allons ici voir quelques-unes de ces structures de donn\u00e9es. Nous allons commencer par les listes, et deux formes restreintes : les piles et les files. Ces trois types de structures sont qualifi\u00e9s de lin\u00e9aires. Les autres types de structures # On distingue : Les structures par acc\u00e8s par cl\u00e9 : les dictionnaires les structures hi\u00e9rarchiques : les arbres les structures relationnelles : les graphes Les op\u00e9rations \u00e9l\u00e9mentaires # Une structure de donn\u00e9e poss\u00e8de un ensemble de routines (proc\u00e9dures ou fonctions) permettant d\u2019ajouter, d\u2019e\ufb00acer, d\u2019acc\u00e9der aux donn\u00e9es. Cet ensemble de routines est appel\u00e9 interface. L\u2019interface est g\u00e9n\u00e9ralement constitu\u00e9e de 4 routines \u00e9l\u00e9mentaires dites CRUD : Create : ajout d\u2019une donn\u00e9e Read : lecture d\u2019une donn\u00e9e Update : modi\ufb01cation d\u2019une donn\u00e9e Delete : suppression d\u2019une donn\u00e9e Derri\u00e8re les op\u00e9rations de lecture, de modi\ufb01cation, ou de suppression d\u2019une donn\u00e9e se cache une autre routine tout aussi importante : la recherche d\u2019une donn\u00e9e. Le type abstrait : liste # D\u00e9\ufb01nition # Une liste est une structure de donn\u00e9es permettant de regrouper des donn\u00e9es. Le langage de programmation Lisp (invent\u00e9 par John McCarthy en 1958) a \u00e9t\u00e9 un des premiers langages de programmation \u00e0 introduire cette notion de liste (Lisp signi\ufb01e \"list processing\"). On prendra des listes indic\u00e9es \u00e0 partir de 0. Exemple de liste : L={Buzz ; x ; 1012 ; f9 ; Alan} Dans cette liste, l\u2019\u00e9l\u00e9ment 2 est 1012. Cette liste comporte 5 \u00e9l\u00e9ments. Interface des listes # Voici l\u2019interface d\u2019une liste : liste_vide : cr\u00e9er une liste vide. inserer(L, e, i) : ajoute l\u2019\u00e9l\u00e9ment e \u00e0 l\u2019index i dans la nouvelle liste L. supprimer(L, i) : l\u2019\u00e9l\u00e9ment situ\u00e9 \u00e0 la position i est supprim\u00e9 de la liste L modifier(L, e, i) : l\u2019\u00e9l\u00e9ment situ\u00e9 \u00e0 la position i dans la liste L est \u00e9cras\u00e9 par le nouvel \u00e9l\u00e9ment e longueur(L) : renvoie le nombre d\u2019\u00e9l\u00e9ments dans L. lire(L, i) : renvoie l\u2019\u00e9l\u00e9ment d\u2019indice i de L. Exemple d\u2019utilisation de liste : L={ Buzz ; x ; 1012 ; f9 ; Alan } inserer(L, 25, 0) nous donne L={ 25 ; Buzz ; x ; 1012 ; f9 ; Alan } supprimer(L, 3) nous donne L={ 25 ; Buzz ; x ; f9 ; Alan }. modifier(L, 59, 2) nous donne L={ 25 ; Buzz ; 59 ; f9 ; Alan }. longueur(L) nous donne 5 lire(L, 4) nous donne Alan Exercice 1 : On donne On donne L = {NSI ; plaisir ; jeux ; livres ; \u03c0 ; E0F1} . Expliciter ce que font chacune des commandes suivantes : inserer(L, 33, 2) supprimer(L, 4) modif ier(L, programmation, 0) longueur(L) lire(L, 2) Impl\u00e9mentation des listes # Pour impl\u00e9menter les listes (ou les piles et les \ufb01les), beaucoup de langages de programmation utilisent un m\u00e9lange de deux structures : les tableaux et les listes cha\u00een\u00e9es. Les tableaux # Chaque \u00e9l\u00e9ment d\u2019un tableau est indic\u00e9. Si tous les \u00e9l\u00e9ments du tableau sont du m\u00eame type, ils occupent tous la m\u00eame taille en m\u00e9moire, soit t. Il su\ufb03t alors de stocker l\u2019adresse du premier \u00e9l\u00e9ment, soit a et on acc\u00e8de \u00e0 un \u00e9l\u00e9ment d\u2019indice k en calculant son adresse en m\u00e9moire par a + k \u00d7 t. Tous les \u00e9l\u00e9ments sont donc accessibles avec un co\u00fbt constant le temps de calcul de l\u2019adresse et l\u2019acc\u00e8s \u00e0 cette adresse. La place du tableau en m\u00e9moire est r\u00e9serv\u00e9 \u00e0 la cr\u00e9ation , soit n \u00d7 t si n est le nombre d\u2019\u00e9l\u00e9ments et t la taille d\u2019un \u00e9l\u00e9ment. Une contrainte est l\u2019impossibilit\u00e9 de remplacer un \u00e9l\u00e9ment d\u2019un type par un autre \u00e9l\u00e9ment d\u2019un autre type ou d\u2019agrandir la taille du tableau. Exemple de tableau Les tableaux dynamiques # Dans certains langages de programmation, on trouve une version \"\u00e9volu\u00e9e\" des tableaux : les tableaux dynamiques. Les tableaux dynamiques ont une taille qui peut varier. Il est donc relativement simple d\u2019ins\u00e9rer des \u00e9l\u00e9ments dans le tableau. Ce type de tableaux permet d\u2019impl\u00e9menter facilement le type abstrait liste (de m\u00eame pour les piles et les \ufb01les). \u00c0 noter que les \"listes Python\" (listes Python) sont des tableaux dynamiques. Attention \u00e0 ne pas confondre avec le type abstrait liste d\u00e9\ufb01ni ci-dessus, ce sont de \"faux amis\". Probl\u00e8me Si on a besoin d\u2019ajouter un \u00e9l\u00e9ment \u00e0 un tableau, on cr\u00e9e un nouveau tableau plus grand, on copie les \u00e9l\u00e9ments de l\u2019ancien tableau dans le nouveau, on ajoute le nouvel \u00e9l\u00e9ment \u00e0 la \ufb01n, on remplace l\u2019ancien tableau par le nouveau, et en\ufb01n on supprime l\u2019ancien tableau. Ce qui est extr\u00e8mement co\u00fbteux en nombre d\u2019op\u00e9ration. Les listes cha\u00een\u00e9es # Une liste cha\u00een\u00e9e (ou liste li\u00e9e) est une structure de donn\u00e9es compos\u00e9es d\u2019une s\u00e9quence d\u2019\u00e9l\u00e9ments de liste. Chaque enregistrement d\u2019une liste cha\u00een\u00e9e est souvent appel\u00e9 \u00e9l\u00e9ment, n\u0153ud ou maillon. La t\u00eate d\u2019une liste est son premier n\u0153ud. La queue d\u2019une liste peut se r\u00e9f\u00e9rer soit au reste de la liste apr\u00e8s la t\u00eate, soit au dernier n\u0153ud de la liste. Le champ de chaque n\u0153ud qui contient l\u2019adresse du n\u0153ud suivant ou pr\u00e9c\u00e9dent est g\u00e9n\u00e9ralement appel\u00e9 lien ou pointeur. Le contenu est plac\u00e9 dans un ou plusieurs autres champs appel\u00e9s donn\u00e9es, informations ou valeur. Chaque \u00e9l\u00e9ment (ou maillon) M de la liste est compos\u00e9 : d\u2019un contenu utile M.val de n\u2019importe quel type), d\u2019un pointeur M.suiv pointant vers l\u2019\u00e9l\u00e9ment suivant de la s\u00e9quence. Le dernier \u00e9l\u00e9ment de la liste poss\u00e8de un pointeur M.suiv vide. Une liste cha\u00een\u00e9e L est enti\u00e8rement d\u00e9\ufb01nie par son maillon de t\u00eate L.tete, c\u2019est \u00e0 dire l\u2019adresse de son premier maillon. Remarque : on peut \u00e9galement lui ajouter un attribut L.cur pour m\u00e9moriser l\u2019adresse d\u2019un maillon \"courant\" On peut impl\u00e9menter un maillon de liste cha\u00een\u00e9e en Python \u00e0 l\u2019aide d\u2019une classe Maillon . 1 2 3 4 class Maillon : def __init__ ( self , valeur = None ): self . val = valeur self . suiv = None # Pas de maillon suivant Son attribut suiv est de type Maillon , ou bien vaut None si le maillon est le dernier de la liste. Nous pouvons \u00e9galement impl\u00e9menter une liste cha\u00een\u00e9e par une classe Liste_chainee : 1 2 3 class Liste_chainee : def __init__ ( self ): self . tete = None # Liste vide Exercice 2 : Impl\u00e9menter en python la m\u00e9thode est_vide de la classe Liste_chainee Exercice 3 : Compl\u00e9ter la m\u00e9thode __str__(self) de la classe Liste_chainee suivante : 1 2 3 4 5 6 7 8 9 def __str__ ( self ): if self . est_vide (): return \" {} \" affichage = .......... maillon = self . tete while maillon is not None : affichage . append ( str ( maillon . val )) maillon = ........ return \"{\" + \" ; \" . join ( affichage ) + \"} Exercice 4 : Sur le mod\u00e8le du code pr\u00e9c\u00e9dent, \u00e9crire la m\u00e9thode taille(self) qui retourne la taille de la liste cha\u00een\u00e9e. Exercice 5 : De m\u00eame, \u00e9crire les m\u00e9thodes get_dernier_maillon() qui retourne le dernier maillon de la cha\u00eene, et la m\u00e9thode get_maillon_indice(i) qui retourne la maillon d\u2019indice i . Tip Pour ins\u00e9rer un maillon nM apr\u00e8s un maillon M , il faut : Faire pointer le pointeur nM.suiv vers M.suiv Faire pointer le pointeur M.suiv vers nM Exercice 6 : En suivant les sch\u00e9mas des interfaces d\u2019insertion de maillon, impl\u00e9menter en Python les fonctions ajouter_debut(M) , ajouter_fin(M) et ajouter_apres(i, M) Tip Pour supprimer le maillon suivant un maillon M , il faut : Faire pointer le pointeur M.suiv vers M.suiv.suiv D\u00e9truire (e\ufb00acer de la m\u00e9moire) le maillon M.suiv Exercice 7 : En suivant les sch\u00e9mas des interfaces de suppression de maillon, impl\u00e9menter les m\u00e9thodes suivantes : supprimer_debut() qui supprime le premier \u00e9lement de la liste, supprimer_fin() qui supprime le dernier \u00e9l\u00e9ment de la liste et en\ufb01n supprimer_apres(i) qui supprime le maillon de la liste L situ\u00e9 apr\u00e8s le maillon d\u2019indice i . Remarque : Ces derni\u00e8res m\u00e9thodes doivent retourner le maillon supprim\u00e9.","title":"listes"},{"location":"Terminale/Struct_donnees/listes/#les-listes","text":"","title":"Les listes"},{"location":"Terminale/Struct_donnees/listes/#introduction","text":"","title":"Introduction"},{"location":"Terminale/Struct_donnees/listes/#les-structures-lineaires","text":"De nombreux algorithmes \"classiques\" manipulent des structures de donn\u00e9es plus complexes que des simples nombres. Nous allons ici voir quelques-unes de ces structures de donn\u00e9es. Nous allons commencer par les listes, et deux formes restreintes : les piles et les files. Ces trois types de structures sont qualifi\u00e9s de lin\u00e9aires.","title":"Les structures lin\u00e9aires"},{"location":"Terminale/Struct_donnees/listes/#les-autres-types-de-structures","text":"On distingue : Les structures par acc\u00e8s par cl\u00e9 : les dictionnaires les structures hi\u00e9rarchiques : les arbres les structures relationnelles : les graphes","title":"Les autres types de structures"},{"location":"Terminale/Struct_donnees/listes/#les-operations-elementaires","text":"Une structure de donn\u00e9e poss\u00e8de un ensemble de routines (proc\u00e9dures ou fonctions) permettant d\u2019ajouter, d\u2019e\ufb00acer, d\u2019acc\u00e9der aux donn\u00e9es. Cet ensemble de routines est appel\u00e9 interface. L\u2019interface est g\u00e9n\u00e9ralement constitu\u00e9e de 4 routines \u00e9l\u00e9mentaires dites CRUD : Create : ajout d\u2019une donn\u00e9e Read : lecture d\u2019une donn\u00e9e Update : modi\ufb01cation d\u2019une donn\u00e9e Delete : suppression d\u2019une donn\u00e9e Derri\u00e8re les op\u00e9rations de lecture, de modi\ufb01cation, ou de suppression d\u2019une donn\u00e9e se cache une autre routine tout aussi importante : la recherche d\u2019une donn\u00e9e.","title":"Les op\u00e9rations \u00e9l\u00e9mentaires"},{"location":"Terminale/Struct_donnees/listes/#le-type-abstrait-liste","text":"","title":"Le type abstrait : liste"},{"location":"Terminale/Struct_donnees/listes/#definition","text":"Une liste est une structure de donn\u00e9es permettant de regrouper des donn\u00e9es. Le langage de programmation Lisp (invent\u00e9 par John McCarthy en 1958) a \u00e9t\u00e9 un des premiers langages de programmation \u00e0 introduire cette notion de liste (Lisp signi\ufb01e \"list processing\"). On prendra des listes indic\u00e9es \u00e0 partir de 0. Exemple de liste : L={Buzz ; x ; 1012 ; f9 ; Alan} Dans cette liste, l\u2019\u00e9l\u00e9ment 2 est 1012. Cette liste comporte 5 \u00e9l\u00e9ments.","title":"D\u00e9\ufb01nition"},{"location":"Terminale/Struct_donnees/listes/#interface-des-listes","text":"Voici l\u2019interface d\u2019une liste : liste_vide : cr\u00e9er une liste vide. inserer(L, e, i) : ajoute l\u2019\u00e9l\u00e9ment e \u00e0 l\u2019index i dans la nouvelle liste L. supprimer(L, i) : l\u2019\u00e9l\u00e9ment situ\u00e9 \u00e0 la position i est supprim\u00e9 de la liste L modifier(L, e, i) : l\u2019\u00e9l\u00e9ment situ\u00e9 \u00e0 la position i dans la liste L est \u00e9cras\u00e9 par le nouvel \u00e9l\u00e9ment e longueur(L) : renvoie le nombre d\u2019\u00e9l\u00e9ments dans L. lire(L, i) : renvoie l\u2019\u00e9l\u00e9ment d\u2019indice i de L. Exemple d\u2019utilisation de liste : L={ Buzz ; x ; 1012 ; f9 ; Alan } inserer(L, 25, 0) nous donne L={ 25 ; Buzz ; x ; 1012 ; f9 ; Alan } supprimer(L, 3) nous donne L={ 25 ; Buzz ; x ; f9 ; Alan }. modifier(L, 59, 2) nous donne L={ 25 ; Buzz ; 59 ; f9 ; Alan }. longueur(L) nous donne 5 lire(L, 4) nous donne Alan Exercice 1 : On donne On donne L = {NSI ; plaisir ; jeux ; livres ; \u03c0 ; E0F1} . Expliciter ce que font chacune des commandes suivantes : inserer(L, 33, 2) supprimer(L, 4) modif ier(L, programmation, 0) longueur(L) lire(L, 2)","title":"Interface des listes"},{"location":"Terminale/Struct_donnees/listes/#implementation-des-listes","text":"Pour impl\u00e9menter les listes (ou les piles et les \ufb01les), beaucoup de langages de programmation utilisent un m\u00e9lange de deux structures : les tableaux et les listes cha\u00een\u00e9es.","title":"Impl\u00e9mentation des listes"},{"location":"Terminale/Struct_donnees/listes/#les-tableaux","text":"Chaque \u00e9l\u00e9ment d\u2019un tableau est indic\u00e9. Si tous les \u00e9l\u00e9ments du tableau sont du m\u00eame type, ils occupent tous la m\u00eame taille en m\u00e9moire, soit t. Il su\ufb03t alors de stocker l\u2019adresse du premier \u00e9l\u00e9ment, soit a et on acc\u00e8de \u00e0 un \u00e9l\u00e9ment d\u2019indice k en calculant son adresse en m\u00e9moire par a + k \u00d7 t. Tous les \u00e9l\u00e9ments sont donc accessibles avec un co\u00fbt constant le temps de calcul de l\u2019adresse et l\u2019acc\u00e8s \u00e0 cette adresse. La place du tableau en m\u00e9moire est r\u00e9serv\u00e9 \u00e0 la cr\u00e9ation , soit n \u00d7 t si n est le nombre d\u2019\u00e9l\u00e9ments et t la taille d\u2019un \u00e9l\u00e9ment. Une contrainte est l\u2019impossibilit\u00e9 de remplacer un \u00e9l\u00e9ment d\u2019un type par un autre \u00e9l\u00e9ment d\u2019un autre type ou d\u2019agrandir la taille du tableau. Exemple de tableau","title":"Les tableaux"},{"location":"Terminale/Struct_donnees/listes/#les-tableaux-dynamiques","text":"Dans certains langages de programmation, on trouve une version \"\u00e9volu\u00e9e\" des tableaux : les tableaux dynamiques. Les tableaux dynamiques ont une taille qui peut varier. Il est donc relativement simple d\u2019ins\u00e9rer des \u00e9l\u00e9ments dans le tableau. Ce type de tableaux permet d\u2019impl\u00e9menter facilement le type abstrait liste (de m\u00eame pour les piles et les \ufb01les). \u00c0 noter que les \"listes Python\" (listes Python) sont des tableaux dynamiques. Attention \u00e0 ne pas confondre avec le type abstrait liste d\u00e9\ufb01ni ci-dessus, ce sont de \"faux amis\". Probl\u00e8me Si on a besoin d\u2019ajouter un \u00e9l\u00e9ment \u00e0 un tableau, on cr\u00e9e un nouveau tableau plus grand, on copie les \u00e9l\u00e9ments de l\u2019ancien tableau dans le nouveau, on ajoute le nouvel \u00e9l\u00e9ment \u00e0 la \ufb01n, on remplace l\u2019ancien tableau par le nouveau, et en\ufb01n on supprime l\u2019ancien tableau. Ce qui est extr\u00e8mement co\u00fbteux en nombre d\u2019op\u00e9ration.","title":"Les tableaux dynamiques"},{"location":"Terminale/Struct_donnees/listes/#les-listes-chainees","text":"Une liste cha\u00een\u00e9e (ou liste li\u00e9e) est une structure de donn\u00e9es compos\u00e9es d\u2019une s\u00e9quence d\u2019\u00e9l\u00e9ments de liste. Chaque enregistrement d\u2019une liste cha\u00een\u00e9e est souvent appel\u00e9 \u00e9l\u00e9ment, n\u0153ud ou maillon. La t\u00eate d\u2019une liste est son premier n\u0153ud. La queue d\u2019une liste peut se r\u00e9f\u00e9rer soit au reste de la liste apr\u00e8s la t\u00eate, soit au dernier n\u0153ud de la liste. Le champ de chaque n\u0153ud qui contient l\u2019adresse du n\u0153ud suivant ou pr\u00e9c\u00e9dent est g\u00e9n\u00e9ralement appel\u00e9 lien ou pointeur. Le contenu est plac\u00e9 dans un ou plusieurs autres champs appel\u00e9s donn\u00e9es, informations ou valeur. Chaque \u00e9l\u00e9ment (ou maillon) M de la liste est compos\u00e9 : d\u2019un contenu utile M.val de n\u2019importe quel type), d\u2019un pointeur M.suiv pointant vers l\u2019\u00e9l\u00e9ment suivant de la s\u00e9quence. Le dernier \u00e9l\u00e9ment de la liste poss\u00e8de un pointeur M.suiv vide. Une liste cha\u00een\u00e9e L est enti\u00e8rement d\u00e9\ufb01nie par son maillon de t\u00eate L.tete, c\u2019est \u00e0 dire l\u2019adresse de son premier maillon. Remarque : on peut \u00e9galement lui ajouter un attribut L.cur pour m\u00e9moriser l\u2019adresse d\u2019un maillon \"courant\" On peut impl\u00e9menter un maillon de liste cha\u00een\u00e9e en Python \u00e0 l\u2019aide d\u2019une classe Maillon . 1 2 3 4 class Maillon : def __init__ ( self , valeur = None ): self . val = valeur self . suiv = None # Pas de maillon suivant Son attribut suiv est de type Maillon , ou bien vaut None si le maillon est le dernier de la liste. Nous pouvons \u00e9galement impl\u00e9menter une liste cha\u00een\u00e9e par une classe Liste_chainee : 1 2 3 class Liste_chainee : def __init__ ( self ): self . tete = None # Liste vide Exercice 2 : Impl\u00e9menter en python la m\u00e9thode est_vide de la classe Liste_chainee Exercice 3 : Compl\u00e9ter la m\u00e9thode __str__(self) de la classe Liste_chainee suivante : 1 2 3 4 5 6 7 8 9 def __str__ ( self ): if self . est_vide (): return \" {} \" affichage = .......... maillon = self . tete while maillon is not None : affichage . append ( str ( maillon . val )) maillon = ........ return \"{\" + \" ; \" . join ( affichage ) + \"} Exercice 4 : Sur le mod\u00e8le du code pr\u00e9c\u00e9dent, \u00e9crire la m\u00e9thode taille(self) qui retourne la taille de la liste cha\u00een\u00e9e. Exercice 5 : De m\u00eame, \u00e9crire les m\u00e9thodes get_dernier_maillon() qui retourne le dernier maillon de la cha\u00eene, et la m\u00e9thode get_maillon_indice(i) qui retourne la maillon d\u2019indice i . Tip Pour ins\u00e9rer un maillon nM apr\u00e8s un maillon M , il faut : Faire pointer le pointeur nM.suiv vers M.suiv Faire pointer le pointeur M.suiv vers nM Exercice 6 : En suivant les sch\u00e9mas des interfaces d\u2019insertion de maillon, impl\u00e9menter en Python les fonctions ajouter_debut(M) , ajouter_fin(M) et ajouter_apres(i, M) Tip Pour supprimer le maillon suivant un maillon M , il faut : Faire pointer le pointeur M.suiv vers M.suiv.suiv D\u00e9truire (e\ufb00acer de la m\u00e9moire) le maillon M.suiv Exercice 7 : En suivant les sch\u00e9mas des interfaces de suppression de maillon, impl\u00e9menter les m\u00e9thodes suivantes : supprimer_debut() qui supprime le premier \u00e9lement de la liste, supprimer_fin() qui supprime le dernier \u00e9l\u00e9ment de la liste et en\ufb01n supprimer_apres(i) qui supprime le maillon de la liste L situ\u00e9 apr\u00e8s le maillon d\u2019indice i . Remarque : Ces derni\u00e8res m\u00e9thodes doivent retourner le maillon supprim\u00e9.","title":"Les listes cha\u00een\u00e9es"},{"location":"Terminale/Struct_donnees/piles_files/","text":"Piles et files # Piles (Stack) # D\u00e9finitions # On retrouve dans les piles une partie des propri\u00e9t\u00e9s vues sur les listes. Dans les piles, il est uniquement possible de manipuler le dernier \u00e9l\u00e9ment introduit dans la pile. On prend souvent l\u2019analogie avec une pile d\u2019assiettes : dans une pile d\u2019assiettes la seule assiette directement accessible et la derni\u00e8re assiette qui a \u00e9t\u00e9 d\u00e9pos\u00e9e sur la pile. Les piles sont bas\u00e9es sur le principe LIFO (Last In First Out), c'est-\u00e0-dire que le dernier rentr\u00e9 sera le premier \u00e0 sortir. En, informatique, la structure de pile est tr\u00e8s pr\u00e9sente. Une pile peut \u00eatre utilis\u00e9e pour stocker de l\u2019information, que ce soit au niveau du processeur ou au niveau de programmes ou d\u2019application. La programmation r\u00e9cursive n\u00e9cessite l\u2019utilisation d\u2019une pile. Un navigateur ou un traitement de texte m\u00e9morise les actions effectu\u00e9es afin de revenir en arri\u00e8re pas \u00e0 pas. Les pages ou les fichiers ouverts sont \u00e9galement m\u00e9moris\u00e9s. Une pile peut \u00eatre n\u00e9cessaire au calcul d\u2019expression math\u00e9matique suivant la notation utilis\u00e9e (exemple la notation polonaise et la notation polonaise invers\u00e9e) Interface des piles # Voici les op\u00e9rations que l\u2019on peut r\u00e9aliser sur une pile : on peut vouloir cr\u00e9er une pile vide ( Creer_pile ) ; on peut savoir si une pile est vide ( est_vide ) ; on peut empiler un nouvel \u00e9l\u00e9ment sur la pile ( empiler ) on peut r\u00e9cup\u00e9rer l\u2019\u00e9l\u00e9ment au sommet de la pile tout en le supprimant. On dit que l\u2019on d\u00e9pile ( depiler ) ; on peut acc\u00e9der \u00e0 l\u2019\u00e9l\u00e9ment situ\u00e9 au sommet de la pile sans le supprimer de la pile ( sommet ). on peut connaitre le nombre d\u2019\u00e9l\u00e9ments pr\u00e9sents dans la pile ( taille ). Impl\u00e9mentation en python # Exercice 1 : Impl\u00e9mentez avec les listes une classe Pile et ces 5 op\u00e9rations. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class Pile : def __init__ ( self ): self . pile = [] def is_empty ( self ) -> bool : return len ( self . pile ) == 0 def empiler ( self , x : int ): self . pile . append ( x ) def depiler ( self ): if self . is_empty (): print ( \"Pile vide\" ) pass return self . pile . pop () def sommet ( self ) -> int : if self . is_empty (): print ( \"Pile vide\" ) pass return self . pile [ - 1 ] def taille ( self ) -> int : return len ( self . pile ) def __str__ ( self ): return str ( self . pile } Files (Queue) # D\u00e9finitions # Comme les piles, les files ont des points communs avec les listes. Diff\u00e9rences majeures : dans une file on ajoute des \u00e9l\u00e9ments \u00e0 une extr\u00e9mit\u00e9 de la file et on supprime des \u00e9l\u00e9ments \u00e0 l\u2019autre extr\u00e9mit\u00e9. On prend souvent l\u2019analogie de la file d\u2019attente devant un magasin pour d\u00e9crire une file de donn\u00e9es. Les files sont bas\u00e9es sur le principe FIFO (First In First Out), c'est-\u00e0-dire que le premier qui est rentr\u00e9 sera le premier \u00e0 sortir. Ici aussi, on retrouve souvent ce principe FIFO en informatique notamment dans la gestion des processus. On les retrouve \u00e9galement pour un imprimante qui g\u00e8re une file de documents en attente d\u2019impression. Interface des files # Voici les op\u00e9rations que l\u2019on peut r\u00e9aliser sur une file : creer_file pour cr\u00e9er un filer vide. est_Vide pour savoir si une file est vide ajout pour ajouter un nouvel \u00e9l\u00e9ment \u00e0 la file retire pour r\u00e9cup\u00e9rer l\u2019\u00e9l\u00e9ment situ\u00e9 en bout de file tout en le supprimant premier pour acc\u00e9der \u00e0 l\u2019\u00e9l\u00e9ment situ\u00e9 en bout de file sans le supprimer de la file taille pour connaitre le nombre d\u2019\u00e9l\u00e9ments pr\u00e9sents dans la file Impl\u00e9mentation en python # Exercice 2 : Impl\u00e9mentez en Python avec les listes une classe File et ces 5 op\u00e9rations. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class File : def __init__ ( self ): self . file = [] def is_empty ( self ) -> bool : return len ( self . file ) == 0 def ajouter ( self , x : int ): self . file . append ( x ) def retirer ( self ): if self . is_empty (): print ( \"File vide\" ) pass return self . file . pop () def premier ( self ) -> int : if self . is_empty (): print ( \"file vide\" ) pass return self . file [ 0 ] def taille ( self ) -> int : return len ( self . file ) def __str__ ( self ): return str ( self . file ) Exercice 3 : Faire une classe pile et une classe file \u00e0 l'aide des listes cha\u00een\u00e9es. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 class Pile : def __init__ ( self ): self . pile = Liste_chainee () def is_empty ( self ) -> bool : return self . pile . taille () == 0 def __str__ ( self ): return str ( self . pile ) def empiler ( self , x : int ): maillon = Maillon ( x ) self . pile . ajouter_fin ( maillon ) def depiler ( self ): if self . pile . est_vide (): print ( \"Pile vide\" ) pass return self . pile . supprimer_fin () def sommet ( self ) -> int : if self . pile . est_vide (): print ( \"Pile vide\" ) pass return self . pile . get_dernier_maillon () def taille ( self ) -> int : return self . pile . taille () class File : def __init__ ( self ): self . file = Liste_chainee () def is_empty ( self ) -> bool : return self . file . taille () == 0 def ajouter ( self , x : int ): maillon = Maillon ( x ) self . file . ajouter_fin ( maillon ) def retirer ( self ): if self . file . est_vide (): print ( \"File vide\" ) pass return self . file . supprimer_debut () def premier ( self ) -> int : if self . is_empty (): print ( \"file vide\" ) pass return self . file . tete def taille ( self ) -> int : return self . file . taille () def __str__ ( self ): return str ( self . file )","title":"piles et files"},{"location":"Terminale/Struct_donnees/piles_files/#piles-et-files","text":"","title":"Piles et files"},{"location":"Terminale/Struct_donnees/piles_files/#piles-stack","text":"","title":"Piles (Stack)"},{"location":"Terminale/Struct_donnees/piles_files/#definitions","text":"On retrouve dans les piles une partie des propri\u00e9t\u00e9s vues sur les listes. Dans les piles, il est uniquement possible de manipuler le dernier \u00e9l\u00e9ment introduit dans la pile. On prend souvent l\u2019analogie avec une pile d\u2019assiettes : dans une pile d\u2019assiettes la seule assiette directement accessible et la derni\u00e8re assiette qui a \u00e9t\u00e9 d\u00e9pos\u00e9e sur la pile. Les piles sont bas\u00e9es sur le principe LIFO (Last In First Out), c'est-\u00e0-dire que le dernier rentr\u00e9 sera le premier \u00e0 sortir. En, informatique, la structure de pile est tr\u00e8s pr\u00e9sente. Une pile peut \u00eatre utilis\u00e9e pour stocker de l\u2019information, que ce soit au niveau du processeur ou au niveau de programmes ou d\u2019application. La programmation r\u00e9cursive n\u00e9cessite l\u2019utilisation d\u2019une pile. Un navigateur ou un traitement de texte m\u00e9morise les actions effectu\u00e9es afin de revenir en arri\u00e8re pas \u00e0 pas. Les pages ou les fichiers ouverts sont \u00e9galement m\u00e9moris\u00e9s. Une pile peut \u00eatre n\u00e9cessaire au calcul d\u2019expression math\u00e9matique suivant la notation utilis\u00e9e (exemple la notation polonaise et la notation polonaise invers\u00e9e)","title":"D\u00e9finitions"},{"location":"Terminale/Struct_donnees/piles_files/#interface-des-piles","text":"Voici les op\u00e9rations que l\u2019on peut r\u00e9aliser sur une pile : on peut vouloir cr\u00e9er une pile vide ( Creer_pile ) ; on peut savoir si une pile est vide ( est_vide ) ; on peut empiler un nouvel \u00e9l\u00e9ment sur la pile ( empiler ) on peut r\u00e9cup\u00e9rer l\u2019\u00e9l\u00e9ment au sommet de la pile tout en le supprimant. On dit que l\u2019on d\u00e9pile ( depiler ) ; on peut acc\u00e9der \u00e0 l\u2019\u00e9l\u00e9ment situ\u00e9 au sommet de la pile sans le supprimer de la pile ( sommet ). on peut connaitre le nombre d\u2019\u00e9l\u00e9ments pr\u00e9sents dans la pile ( taille ).","title":"Interface des piles"},{"location":"Terminale/Struct_donnees/piles_files/#implementation-en-python","text":"Exercice 1 : Impl\u00e9mentez avec les listes une classe Pile et ces 5 op\u00e9rations. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class Pile : def __init__ ( self ): self . pile = [] def is_empty ( self ) -> bool : return len ( self . pile ) == 0 def empiler ( self , x : int ): self . pile . append ( x ) def depiler ( self ): if self . is_empty (): print ( \"Pile vide\" ) pass return self . pile . pop () def sommet ( self ) -> int : if self . is_empty (): print ( \"Pile vide\" ) pass return self . pile [ - 1 ] def taille ( self ) -> int : return len ( self . pile ) def __str__ ( self ): return str ( self . pile }","title":"Impl\u00e9mentation en python"},{"location":"Terminale/Struct_donnees/piles_files/#files-queue","text":"","title":"Files (Queue)"},{"location":"Terminale/Struct_donnees/piles_files/#definitions_1","text":"Comme les piles, les files ont des points communs avec les listes. Diff\u00e9rences majeures : dans une file on ajoute des \u00e9l\u00e9ments \u00e0 une extr\u00e9mit\u00e9 de la file et on supprime des \u00e9l\u00e9ments \u00e0 l\u2019autre extr\u00e9mit\u00e9. On prend souvent l\u2019analogie de la file d\u2019attente devant un magasin pour d\u00e9crire une file de donn\u00e9es. Les files sont bas\u00e9es sur le principe FIFO (First In First Out), c'est-\u00e0-dire que le premier qui est rentr\u00e9 sera le premier \u00e0 sortir. Ici aussi, on retrouve souvent ce principe FIFO en informatique notamment dans la gestion des processus. On les retrouve \u00e9galement pour un imprimante qui g\u00e8re une file de documents en attente d\u2019impression.","title":"D\u00e9finitions"},{"location":"Terminale/Struct_donnees/piles_files/#interface-des-files","text":"Voici les op\u00e9rations que l\u2019on peut r\u00e9aliser sur une file : creer_file pour cr\u00e9er un filer vide. est_Vide pour savoir si une file est vide ajout pour ajouter un nouvel \u00e9l\u00e9ment \u00e0 la file retire pour r\u00e9cup\u00e9rer l\u2019\u00e9l\u00e9ment situ\u00e9 en bout de file tout en le supprimant premier pour acc\u00e9der \u00e0 l\u2019\u00e9l\u00e9ment situ\u00e9 en bout de file sans le supprimer de la file taille pour connaitre le nombre d\u2019\u00e9l\u00e9ments pr\u00e9sents dans la file","title":"Interface des files"},{"location":"Terminale/Struct_donnees/piles_files/#implementation-en-python_1","text":"Exercice 2 : Impl\u00e9mentez en Python avec les listes une classe File et ces 5 op\u00e9rations. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class File : def __init__ ( self ): self . file = [] def is_empty ( self ) -> bool : return len ( self . file ) == 0 def ajouter ( self , x : int ): self . file . append ( x ) def retirer ( self ): if self . is_empty (): print ( \"File vide\" ) pass return self . file . pop () def premier ( self ) -> int : if self . is_empty (): print ( \"file vide\" ) pass return self . file [ 0 ] def taille ( self ) -> int : return len ( self . file ) def __str__ ( self ): return str ( self . file ) Exercice 3 : Faire une classe pile et une classe file \u00e0 l'aide des listes cha\u00een\u00e9es. R\u00e9ponse 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 class Pile : def __init__ ( self ): self . pile = Liste_chainee () def is_empty ( self ) -> bool : return self . pile . taille () == 0 def __str__ ( self ): return str ( self . pile ) def empiler ( self , x : int ): maillon = Maillon ( x ) self . pile . ajouter_fin ( maillon ) def depiler ( self ): if self . pile . est_vide (): print ( \"Pile vide\" ) pass return self . pile . supprimer_fin () def sommet ( self ) -> int : if self . pile . est_vide (): print ( \"Pile vide\" ) pass return self . pile . get_dernier_maillon () def taille ( self ) -> int : return self . pile . taille () class File : def __init__ ( self ): self . file = Liste_chainee () def is_empty ( self ) -> bool : return self . file . taille () == 0 def ajouter ( self , x : int ): maillon = Maillon ( x ) self . file . ajouter_fin ( maillon ) def retirer ( self ): if self . file . est_vide (): print ( \"File vide\" ) pass return self . file . supprimer_debut () def premier ( self ) -> int : if self . is_empty (): print ( \"file vide\" ) pass return self . file . tete def taille ( self ) -> int : return self . file . taille () def __str__ ( self ): return str ( self . file )","title":"Impl\u00e9mentation en python"},{"location":"Terminale/Struct_donnees/data/graphe/","text":"Les graphes # Introduction # Au milieu du XX \u00e8me si\u00e8cle, le physicien hongrois Eug\u00e8ne Wigner parle de \"la d\u00e9raisonnable efficacit\u00e9 des math\u00e9matiques dans les sciences de la nature\". La mod\u00e9lisation math\u00e9matique facilite la compr\u00e9hension d\u2019un probl\u00e8me car elle d\u00e9termine un seul vocabulaire formel pour diff\u00e9rentes situations, et elle permet de trouver une m\u00e9thode de r\u00e9solution automatique via un programme informatique. Le mod\u00e8le math\u00e9matique que nous allons voir dans ce chapitre est le graphe. On utilise les graphes dans de nombreuses situations : les r\u00e9seaux de communication ( internet, t\u00e9l\u00e9phonie) ; les r\u00e9seaux sociaux ; les circuits \u00e9lectriques ; les bases de donn\u00e9es relationnelles ; le codage ; la hi\u00e9rarchie des fichiers informatiques ; la repr\u00e9sentation des mol\u00e9cules ; en biologie pour la repr\u00e9sentation de la s\u00e9quence ARN. Graphe non-orient\u00e9s # Un premier exemple # Imaginez un r\u00e9seau social ayant 6 abonn\u00e9s : Jules, Simon, Arthur, Jean, Lucien, et Maxime o\u00f9 : Jules est ami avec Simon, Arthur et Jean Simon est ami avec Jules et Jean Arthur est ami avec Jules, Lucien et Jean Jean est ami avec tous les autres abonn\u00e9s Lucien est ami avec Arthur, Jean et Maxime Maxime est ami avec Lucien et Jean La description de ce r\u00e9seau social, malgr\u00e9 son faible nombre d\u2019abonn\u00e9s, est d\u00e9j\u00e0 quelque peu r\u00e9barbative. Alors imaginez cette m\u00eame description avec un r\u00e9seau social comportant des millions d\u2019abonn\u00e9s ! Il existe un moyen plus \"visuel\" pour repr\u00e9senter ce r\u00e9seau social : on peut repr\u00e9senter chaque abonn\u00e9 par un cercle (avec le nom de l\u2019abonn\u00e9 situ\u00e9 dans le cercle) et chaque relation \"X est ami avec Y\" par un segment de droite reliant X et Y (\"X est ami avec Y\" et \"Y est ami avec X\" \u00e9tant repr\u00e9sent\u00e9 par le m\u00eame segment de droite). En mod\u00e9lisant ces pr\u00e9noms par A,B,C,D,E et F, on obtient avec le r\u00e9seau social d\u00e9crit ci-dessus : Ce genre de figure s\u2019appelle un graphe non orient\u00e9s. Les graphes sont des objets math\u00e9matiques tr\u00e8s utilis\u00e9s, notamment en informatique. Les cercles sont appel\u00e9s des sommets et les segments de droites qui relient 2 sommets des ar\u00eates. Plus formellement on dira qu\u2019un graphe G est un couple G = (V, E) avec V un ensemble de sommets et E un ensemble d\u2019ar\u00eates Exercice 1 : Construisez un graphe de r\u00e9seau social \u00e0 partir des informations suivantes : A est ami avec B et E B est ami avec A et C C est ami avec B,F et D D est ami avec C,F et E E est ami avec A,D et F F est ami avec C, D et E Vocabulaire des graphes non-orient\u00e9s # On note x-y l\u2019ar\u00eate (x-y) dans un graphe non orient\u00e9 o\u00f9 x et y sont les deux extr\u00e9mit\u00e9s. Deux ar\u00eates d\u2019un graphe sont dites adjacentes si elles ont au moins un sommet en commun. deux sommets d\u2019un graphe non-orient\u00e9 sont dits adjacents s\u2019il existe une ar\u00eate les joignants. dans un graphe non-orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019ar\u00eate dont x est une extr\u00e9mit\u00e9. dans un graphe non-orient\u00e9, on appelle cha\u00eene toute suite de sommets cons\u00e9cutifs reli\u00e9s par des ar\u00eates. une cha\u00eene est dite \u00e9l\u00e9mentaire si elle ne comporte pas plusieurs fois le m\u00eame sommet. une cha\u00eene dont le sommet de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 cycle. un graphe non-orient\u00e9 est dit connexe lorsqu\u2019il existe une cha\u00eene pour toute paire de sommet. Les graphes orient\u00e9s # Un premier exemple # Les logiciels de cartographie permettant connaissant votre position gr\u00e2ce \u00e0 un r\u00e9cepteur GPS, d\u2019indiquer la route \u00e0 suivre pour se rendre \u00e0 endroit B. Comment mod\u00e9liser l\u2019ensemble des lieux et des routes ? Simplement \u00e0 l\u2019aide d\u2019un graphe ! Chaque lieu est un sommet et les routes qui relient les lieux entre eux sont des ar\u00eates. Soit les lieux suivants : A, B, C, D, E, F et G. Les diff\u00e9rents lieux sont reli\u00e9s par les routes suivantes : il existe une route entre A et C ; il existe une route entre A et B ; il existe une route entre A et D ; il existe une route entre B et F ; il existe une route entre B et E ; il existe une route entre B et G ; il existe une route entre D et G ; il existe une route entre E et F. Ici aussi, la repr\u00e9sentation sous forme de graphe s\u2019impose : Probl\u00e8me : avec cette repr\u00e9sentation du r\u00e9seau routier sous forme de graphe, il est impossible de tenir compte des routes en sens unique (par exemple il est possible d\u2019aller de A vers D mais pas de D vers A) Voici de nouvelles contraintes : il existe une route entre A et C (double sens) ; il existe une route entre A et B (sens unique B->A) ; il existe une route entre A et D (sens unique A->D) ; il existe une route entre B et F (sens unique B->F) ; il existe une route entre B et E (sens unique E->B) ; il existe une route entre B et G (double sens) ; il existe une route entre D et G (double sens) ; il existe une route entre E et F (double). Pour tenir compte de ces nouvelles contraintes, on utilisera un graphe orient\u00e9 : Dans un graphe orient\u00e9, les ar\u00eates poss\u00e8dent une orientation. Ces \"ar\u00eates orient\u00e9es\" sont souvent appel\u00e9es \"arcs\". On dira qu\u2019un graphe orient\u00e9 G est un couple G = (V,A) avec V un ensemble de sommets et A un ensemble d\u2019arcs. Vocabulaire # On note x\u2192 y l\u2019arc (x,y) dans un graph orient\u00e9 o\u00f9 x est son extr\u00e9mit\u00e9 initiale et y son extr\u00e9mit\u00e9 finale. y est le successeur de x et x est le pr\u00e9d\u00e9cesseur de y. deux arcs d\u2019un graphe sont adjacents s\u2019ils poss\u00e8dent au moins une extr\u00e9mit\u00e9 commune ; Deux sommets d\u2019un graphe orient\u00e9 sont dits adjacents s\u2019il existe un arc les joignant. Dans un graphe orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019arcs dont x est une extr\u00e9mit\u00e9. Dans un graphe orient\u00e9, on appelle chemin toute suite de sommet cons\u00e9cutifs reli\u00e9 par des arcs. Un chemin est dit \u00e9l\u00e9m\u00e9ntaire s\u2019il ne comporte pas plusieurs fois le m\u00eame sommet. Un chemin dont le somme de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 circuit. Les graphes \u00e9tiquet\u00e9s et pond\u00e9r\u00e9s # Exemple # Parfois il est int\u00e9ressant d\u2019associer aux arr\u00eates ou aux arcs, des valeurs, on parle alors de graphes pond\u00e9r\u00e9s. Si nous revenons \u00e0 notre \"graphe cartographie\", il est possible d\u2019associer \u00e0 chaque ar\u00eate la distance en Km entre les 2 lieux : Il est aussi possible d\u2019associer \u00e0 chaque ar\u00eate la dur\u00e9e du trajet entre 2 points : En fonction du choix fait par le conducteur (trajet le plus court \"en distance\" ou trajet le plus court \"en temps\"), l\u2019algorithme permettant de d\u00e9terminer le \"chemin le plus court entre 2 points\" travaillera sur le graphe \"graphe pond\u00e9r\u00e9 (Km) cartographie\" ou sur le graphe \"graphe pond\u00e9r\u00e9 (minutes) cartographie\". \u00c0 noter que le \"graphe pond\u00e9r\u00e9 (minutes) cartographie\" peut \u00e9voluer au cours du temps en fonction du trafic routier : une application comme Waze utilise les donn\u00e9es en en provenance des utilisateurs de l\u2019application afin de mettre \u00e0 jour en temps r\u00e9\u00e9l leur \"graphe pond\u00e9r\u00e9 (minutes) cartographie\". Vocabulaire # On appelle graphe \u00e9tiquet\u00e9 tout graphe o\u00f9 chaque relation est affect\u00e9 d\u2019un symbole (par exemple, une lettre un mot...). Dans le cas o\u00f9 le symbole est un nombre positif, le graphe est appel\u00e9 On appelle graphe \u00e9tiquet\u00e9 tout graphe o\u00f9 chaque relation est affect\u00e9 d\u2019un symbole (par exemple, une lettre un mot...).. Ce type de graphe est particuli\u00e8rement adapt\u00e9 pour repr\u00e9senter les cartes routi\u00e8re (comme dans l\u2019exemple pr\u00e9c\u00e9dent).","title":"Les graphes"},{"location":"Terminale/Struct_donnees/data/graphe/#les-graphes","text":"","title":"Les graphes"},{"location":"Terminale/Struct_donnees/data/graphe/#introduction","text":"Au milieu du XX \u00e8me si\u00e8cle, le physicien hongrois Eug\u00e8ne Wigner parle de \"la d\u00e9raisonnable efficacit\u00e9 des math\u00e9matiques dans les sciences de la nature\". La mod\u00e9lisation math\u00e9matique facilite la compr\u00e9hension d\u2019un probl\u00e8me car elle d\u00e9termine un seul vocabulaire formel pour diff\u00e9rentes situations, et elle permet de trouver une m\u00e9thode de r\u00e9solution automatique via un programme informatique. Le mod\u00e8le math\u00e9matique que nous allons voir dans ce chapitre est le graphe. On utilise les graphes dans de nombreuses situations : les r\u00e9seaux de communication ( internet, t\u00e9l\u00e9phonie) ; les r\u00e9seaux sociaux ; les circuits \u00e9lectriques ; les bases de donn\u00e9es relationnelles ; le codage ; la hi\u00e9rarchie des fichiers informatiques ; la repr\u00e9sentation des mol\u00e9cules ; en biologie pour la repr\u00e9sentation de la s\u00e9quence ARN.","title":"Introduction"},{"location":"Terminale/Struct_donnees/data/graphe/#graphe-non-orientes","text":"","title":"Graphe non-orient\u00e9s"},{"location":"Terminale/Struct_donnees/data/graphe/#un-premier-exemple","text":"Imaginez un r\u00e9seau social ayant 6 abonn\u00e9s : Jules, Simon, Arthur, Jean, Lucien, et Maxime o\u00f9 : Jules est ami avec Simon, Arthur et Jean Simon est ami avec Jules et Jean Arthur est ami avec Jules, Lucien et Jean Jean est ami avec tous les autres abonn\u00e9s Lucien est ami avec Arthur, Jean et Maxime Maxime est ami avec Lucien et Jean La description de ce r\u00e9seau social, malgr\u00e9 son faible nombre d\u2019abonn\u00e9s, est d\u00e9j\u00e0 quelque peu r\u00e9barbative. Alors imaginez cette m\u00eame description avec un r\u00e9seau social comportant des millions d\u2019abonn\u00e9s ! Il existe un moyen plus \"visuel\" pour repr\u00e9senter ce r\u00e9seau social : on peut repr\u00e9senter chaque abonn\u00e9 par un cercle (avec le nom de l\u2019abonn\u00e9 situ\u00e9 dans le cercle) et chaque relation \"X est ami avec Y\" par un segment de droite reliant X et Y (\"X est ami avec Y\" et \"Y est ami avec X\" \u00e9tant repr\u00e9sent\u00e9 par le m\u00eame segment de droite). En mod\u00e9lisant ces pr\u00e9noms par A,B,C,D,E et F, on obtient avec le r\u00e9seau social d\u00e9crit ci-dessus : Ce genre de figure s\u2019appelle un graphe non orient\u00e9s. Les graphes sont des objets math\u00e9matiques tr\u00e8s utilis\u00e9s, notamment en informatique. Les cercles sont appel\u00e9s des sommets et les segments de droites qui relient 2 sommets des ar\u00eates. Plus formellement on dira qu\u2019un graphe G est un couple G = (V, E) avec V un ensemble de sommets et E un ensemble d\u2019ar\u00eates Exercice 1 : Construisez un graphe de r\u00e9seau social \u00e0 partir des informations suivantes : A est ami avec B et E B est ami avec A et C C est ami avec B,F et D D est ami avec C,F et E E est ami avec A,D et F F est ami avec C, D et E","title":"Un premier exemple"},{"location":"Terminale/Struct_donnees/data/graphe/#vocabulaire-des-graphes-non-orientes","text":"On note x-y l\u2019ar\u00eate (x-y) dans un graphe non orient\u00e9 o\u00f9 x et y sont les deux extr\u00e9mit\u00e9s. Deux ar\u00eates d\u2019un graphe sont dites adjacentes si elles ont au moins un sommet en commun. deux sommets d\u2019un graphe non-orient\u00e9 sont dits adjacents s\u2019il existe une ar\u00eate les joignants. dans un graphe non-orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019ar\u00eate dont x est une extr\u00e9mit\u00e9. dans un graphe non-orient\u00e9, on appelle cha\u00eene toute suite de sommets cons\u00e9cutifs reli\u00e9s par des ar\u00eates. une cha\u00eene est dite \u00e9l\u00e9mentaire si elle ne comporte pas plusieurs fois le m\u00eame sommet. une cha\u00eene dont le sommet de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 cycle. un graphe non-orient\u00e9 est dit connexe lorsqu\u2019il existe une cha\u00eene pour toute paire de sommet.","title":"Vocabulaire des graphes non-orient\u00e9s"},{"location":"Terminale/Struct_donnees/data/graphe/#les-graphes-orientes","text":"","title":"Les graphes orient\u00e9s"},{"location":"Terminale/Struct_donnees/data/graphe/#un-premier-exemple_1","text":"Les logiciels de cartographie permettant connaissant votre position gr\u00e2ce \u00e0 un r\u00e9cepteur GPS, d\u2019indiquer la route \u00e0 suivre pour se rendre \u00e0 endroit B. Comment mod\u00e9liser l\u2019ensemble des lieux et des routes ? Simplement \u00e0 l\u2019aide d\u2019un graphe ! Chaque lieu est un sommet et les routes qui relient les lieux entre eux sont des ar\u00eates. Soit les lieux suivants : A, B, C, D, E, F et G. Les diff\u00e9rents lieux sont reli\u00e9s par les routes suivantes : il existe une route entre A et C ; il existe une route entre A et B ; il existe une route entre A et D ; il existe une route entre B et F ; il existe une route entre B et E ; il existe une route entre B et G ; il existe une route entre D et G ; il existe une route entre E et F. Ici aussi, la repr\u00e9sentation sous forme de graphe s\u2019impose : Probl\u00e8me : avec cette repr\u00e9sentation du r\u00e9seau routier sous forme de graphe, il est impossible de tenir compte des routes en sens unique (par exemple il est possible d\u2019aller de A vers D mais pas de D vers A) Voici de nouvelles contraintes : il existe une route entre A et C (double sens) ; il existe une route entre A et B (sens unique B->A) ; il existe une route entre A et D (sens unique A->D) ; il existe une route entre B et F (sens unique B->F) ; il existe une route entre B et E (sens unique E->B) ; il existe une route entre B et G (double sens) ; il existe une route entre D et G (double sens) ; il existe une route entre E et F (double). Pour tenir compte de ces nouvelles contraintes, on utilisera un graphe orient\u00e9 : Dans un graphe orient\u00e9, les ar\u00eates poss\u00e8dent une orientation. Ces \"ar\u00eates orient\u00e9es\" sont souvent appel\u00e9es \"arcs\". On dira qu\u2019un graphe orient\u00e9 G est un couple G = (V,A) avec V un ensemble de sommets et A un ensemble d\u2019arcs.","title":"Un premier exemple"},{"location":"Terminale/Struct_donnees/data/graphe/#vocabulaire","text":"On note x\u2192 y l\u2019arc (x,y) dans un graph orient\u00e9 o\u00f9 x est son extr\u00e9mit\u00e9 initiale et y son extr\u00e9mit\u00e9 finale. y est le successeur de x et x est le pr\u00e9d\u00e9cesseur de y. deux arcs d\u2019un graphe sont adjacents s\u2019ils poss\u00e8dent au moins une extr\u00e9mit\u00e9 commune ; Deux sommets d\u2019un graphe orient\u00e9 sont dits adjacents s\u2019il existe un arc les joignant. Dans un graphe orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019arcs dont x est une extr\u00e9mit\u00e9. Dans un graphe orient\u00e9, on appelle chemin toute suite de sommet cons\u00e9cutifs reli\u00e9 par des arcs. Un chemin est dit \u00e9l\u00e9m\u00e9ntaire s\u2019il ne comporte pas plusieurs fois le m\u00eame sommet. Un chemin dont le somme de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 circuit.","title":"Vocabulaire"},{"location":"Terminale/Struct_donnees/data/graphe/#les-graphes-etiquetes-et-ponderes","text":"","title":"Les graphes \u00e9tiquet\u00e9s et pond\u00e9r\u00e9s"},{"location":"Terminale/Struct_donnees/data/graphe/#exemple","text":"Parfois il est int\u00e9ressant d\u2019associer aux arr\u00eates ou aux arcs, des valeurs, on parle alors de graphes pond\u00e9r\u00e9s. Si nous revenons \u00e0 notre \"graphe cartographie\", il est possible d\u2019associer \u00e0 chaque ar\u00eate la distance en Km entre les 2 lieux : Il est aussi possible d\u2019associer \u00e0 chaque ar\u00eate la dur\u00e9e du trajet entre 2 points : En fonction du choix fait par le conducteur (trajet le plus court \"en distance\" ou trajet le plus court \"en temps\"), l\u2019algorithme permettant de d\u00e9terminer le \"chemin le plus court entre 2 points\" travaillera sur le graphe \"graphe pond\u00e9r\u00e9 (Km) cartographie\" ou sur le graphe \"graphe pond\u00e9r\u00e9 (minutes) cartographie\". \u00c0 noter que le \"graphe pond\u00e9r\u00e9 (minutes) cartographie\" peut \u00e9voluer au cours du temps en fonction du trafic routier : une application comme Waze utilise les donn\u00e9es en en provenance des utilisateurs de l\u2019application afin de mettre \u00e0 jour en temps r\u00e9\u00e9l leur \"graphe pond\u00e9r\u00e9 (minutes) cartographie\".","title":"Exemple"},{"location":"Terminale/Struct_donnees/data/graphe/#vocabulaire_1","text":"On appelle graphe \u00e9tiquet\u00e9 tout graphe o\u00f9 chaque relation est affect\u00e9 d\u2019un symbole (par exemple, une lettre un mot...). Dans le cas o\u00f9 le symbole est un nombre positif, le graphe est appel\u00e9 On appelle graphe \u00e9tiquet\u00e9 tout graphe o\u00f9 chaque relation est affect\u00e9 d\u2019un symbole (par exemple, une lettre un mot...).. Ce type de graphe est particuli\u00e8rement adapt\u00e9 pour repr\u00e9senter les cartes routi\u00e8re (comme dans l\u2019exemple pr\u00e9c\u00e9dent).","title":"Vocabulaire"}]}